{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/publisheratom\/publisher(context:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"publisher","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Context","preciseIdentifier":"s:5Atoms4AtomP7Contexta","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Context","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms13PublisherAtomP0B0Qa","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/Publisher","kind":"typeIdentifier","text":"Publisher"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"context","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A context structure to read, watch, and otherwise"},{"text":" ","type":"text"},{"text":"interact with other atoms.","type":"text"}]}]}]},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"A publisher that produces a sequence of values over time.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The publisher that is produced by this method must be instantiated anew each time this method"},{"type":"text","text":" "},{"type":"text","text":"is called. Otherwise, a cold publisher which has internal state can get result to produce"},{"type":"text","text":" "},{"type":"text","text":"non-reproducible results when it is newly subscribed."}]}],"kind":"content"}],"sections":[],"metadata":{"modules":[{"name":"Atoms"}],"externalID":"s:5Atoms13PublisherAtomP9publisher7context0B0QzAA0C18TransactionContextV_tF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"publisher","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP7Contexta","text":"Context"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Publisher","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms13PublisherAtomP0B0Qa"}],"roleHeading":"Instance Method","required":true,"symbolKind":"method","role":"symbol","title":"publisher(context:)"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/publisher(context:)"},"abstract":[{"text":"Creates a publisher to be subscribed when this atom is actually used.","type":"text"}],"references":{"doc://Atoms/documentation/Atoms/AsyncPhase":{"abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncPhase","kind":"identifier"}],"kind":"symbol","title":"AsyncPhase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol"},"doc://Atoms/documentation/Atoms/PublisherAtom/publisher(context:)":{"type":"topic","abstract":[{"type":"text","text":"Creates a publisher to be subscribed when this atom is actually used."}],"url":"\/documentation\/atoms\/publisheratom\/publisher(context:)","required":true,"kind":"symbol","role":"symbol","title":"publisher(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"publisher","kind":"identifier"},{"kind":"text","text":"("},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms4AtomP7Contexta","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms13PublisherAtomP0B0Qa","text":"Publisher","kind":"typeIdentifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/publisher(context:)"},"doc://Atoms/documentation/Atoms/Atom/Context":{"abstract":[{"type":"text","text":"A type of the context structure to read, watch, and otherwise interact"},{"type":"text","text":" "},{"type":"text","text":"with other atoms."}],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Context","kind":"identifier"}],"kind":"symbol","title":"Atom.Context","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Context","navigatorTitle":[{"kind":"identifier","text":"Context"}],"url":"\/documentation\/atoms\/atom\/context","role":"symbol"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","type":"topic","kind":"symbol","title":"PublisherAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/publisheratom","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"code":"Publisher","type":"codeVoice"},{"text":" as an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}]},"doc://Atoms/documentation/Atoms/PublisherAtom/Publisher":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/Publisher","title":"Publisher","type":"topic","required":true,"abstract":[{"type":"text","text":"The type of publisher that this atom manages."}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Publisher"},{"text":" : ","kind":"text"},{"text":"Publisher","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9PublisherP"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/publisheratom\/publisher"}}}