{"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/Atoms\/s8SendableP","doc:\/\/Atoms\/7SwiftUI4ViewP"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/init(content:)","doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/init(storesIn:content:)"],"anchor":"Initializers","generated":true},{"anchor":"Instance-Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/body"],"generated":true,"title":"Instance Properties"},{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/observe(_:)","doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/override(_:with:)-26lib","doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/override(_:with:)-4ys6l"],"title":"Instance Methods"}],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomRoot"}],"externalID":"s:5Atoms8AtomRootV","symbolKind":"struct","title":"AtomRoot","roleHeading":"Structure","navigatorTitle":[{"text":"AtomRoot","kind":"identifier"}],"modules":[{"name":"Atoms"}],"role":"symbol"},"seeAlsoSections":[{"anchor":"Views","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","doc:\/\/Atoms\/documentation\/Atoms\/AtomDerivedScope","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"],"title":"Views"}],"abstract":[{"text":"A view that stores the state of atoms.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomRoot","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Content","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"It must be the root of any views to manage the state of atoms used throughout the application.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@main","struct MyApp: App {","    var body: some Scene {","        WindowGroup {","            AtomRoot {","                MyView()","            }","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This view allows you to override a value of arbitrary atoms, which is useful"},{"type":"text","text":" "},{"type":"text","text":"for dependency injection in testing."}]},{"type":"codeListing","syntax":"swift","code":["AtomRoot {","    RootView()","}",".override(APIClientAtom()) {","    StubAPIClient()","}"]},{"inlineContent":[{"type":"text","text":"You can also observe updates with a snapshot that captures a specific set of values of atoms."}],"type":"paragraph"},{"code":["AtomRoot {","    MyView()","}",".observe { snapshot in","    if let count = snapshot.lookup(CounterAtom()) {","        print(count)","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additionally, if for some reason you want to manage the store on your own,"},{"type":"text","text":" "},{"text":"you can pass the instance to allow descendant views to store atom values","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the given store."}]},{"type":"codeListing","syntax":"swift","code":["let store = AtomStore()","","struct Application: App {","    var body: some Scene {","        WindowGroup {","            AtomRoot(storesIn: store) {","                RootView()","            }","        }","    }","}"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atoms\/atomroot"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Atoms/documentation/Atoms/AtomRoot/override(_:with:)-26lib":{"kind":"symbol","title":"override(_:with:)","role":"symbol","abstract":[{"text":"Overrides the atoms with the given value.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"override"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".Type, ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AtomRoot","preciseIdentifier":"s:5Atoms8AtomRootV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"text":">","kind":"text"}],"url":"\/documentation\/atoms\/atomroot\/override(_:with:)-26lib","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/override(_:with:)-26lib","type":"topic"},"doc://Atoms/documentation/Atoms/AtomRoot/init(storesIn:content:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"storesIn","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Atoms9AtomStoreC","text":"AtomStore","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"content","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","title":"init(storesIn:content:)","url":"\/documentation\/atoms\/atomroot\/init(storesin:content:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/init(storesIn:content:)","abstract":[{"type":"text","text":"Creates a new scope with the specified content that will be allowed to use atoms by"},{"type":"text","text":" "},{"type":"text","text":"passing a store object."}]},"doc://Atoms/documentation/Atoms/AtomDerivedScope":{"type":"topic","kind":"symbol","url":"\/documentation\/atoms\/atomderivedscope","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomDerivedScope"}],"abstract":[{"type":"text","text":"A view that derives the parent context."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomDerivedScope","navigatorTitle":[{"kind":"identifier","text":"AtomDerivedScope"}],"role":"symbol","title":"AtomDerivedScope"},"doc://Atoms/documentation/Atoms/AtomRoot/observe(_:)":{"title":"observe(_:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/observe(_:)","role":"symbol","type":"topic","abstract":[{"text":"Observes the state changes with a snapshot that captures the whole atom states and","type":"text"},{"type":"text","text":" "},{"text":"their dependency graph at the point in time for debugging purposes.","type":"text"}],"url":"\/documentation\/atoms\/atomroot\/observe(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"observe","kind":"identifier"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:5Atoms8SnapshotV","text":"Snapshot","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AtomRoot","preciseIdentifier":"s:5Atoms8AtomRootV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"text":">","kind":"text"}]},"doc://Atoms/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable"},"doc://Atoms/documentation/Atoms/AtomRoot":{"abstract":[{"type":"text","text":"A view that stores the state of atoms."}],"kind":"symbol","url":"\/documentation\/atoms\/atomroot","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomRoot","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomRoot"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","title":"AtomRoot","type":"topic"},"doc://Atoms/documentation/Atoms/AtomScope":{"abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"kind":"symbol","url":"\/documentation\/atoms\/atomscope","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomScope"}],"navigatorTitle":[{"text":"AtomScope","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","title":"AtomScope","type":"topic"},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/AtomRoot/body":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"type":"topic","kind":"symbol","title":"body","url":"\/documentation\/atoms\/atomroot\/body","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/body","abstract":[{"type":"text","text":"The content and behavior of the view."}]},"doc://Atoms/documentation/Atoms/AtomRoot/override(_:with:)-4ys6l":{"kind":"symbol","title":"override(_:with:)","role":"symbol","abstract":[{"type":"text","text":"Overrides the atoms with the given value."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"override","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"},{"kind":"text","text":") -> "},{"text":"AtomRoot","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms8AtomRootV"},{"text":"<","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/atoms\/atomroot\/override(_:with:)-4ys6l","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/override(_:with:)-4ys6l","type":"topic"},"doc://Atoms/7SwiftUI4ViewP":{"identifier":"doc:\/\/Atoms\/7SwiftUI4ViewP","type":"unresolvable","title":"SwiftUICore.View"},"doc://Atoms/documentation/Atoms/Suspense":{"abstract":[{"text":"A view that lets the content wait for the given task to provide a resulting value","type":"text"},{"text":" ","type":"text"},{"text":"or an error.","type":"text"}],"kind":"symbol","url":"\/documentation\/atoms\/suspense","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Suspense"}],"navigatorTitle":[{"kind":"identifier","text":"Suspense"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","title":"Suspense","type":"topic"},"doc://Atoms/documentation/Atoms/AtomRoot/init(content:)":{"role":"symbol","title":"init(content:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"content","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/init(content:)","type":"topic","abstract":[{"type":"text","text":"Creates an atom root with the specified content that will be allowed to use atoms."}],"url":"\/documentation\/atoms\/atomroot\/init(content:)"}}}