{"kind":"symbol","metadata":{"required":true,"symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"refresh","kind":"identifier"},{"kind":"text","text":"("},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP14CurrentContexta","text":"CurrentContext","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}],"roleHeading":"Instance Method","modules":[{"name":"Atoms"}],"platforms":[],"title":"refresh(context:)","externalID":"s:5Atoms11RefreshableP7refresh7context8ProducedQzAA18AtomCurrentContextV_tYaF"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"refresh"},{"kind":"text","text":"("},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/CurrentContext","preciseIdentifier":"s:5Atoms4AtomP14CurrentContexta","text":"CurrentContext","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A context structure to read, set, and otherwise interact"},{"text":" ","type":"text"},{"type":"text","text":"with other atoms."}],"type":"paragraph"}],"name":"context"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"A refreshed value."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"The value returned by this method will be cached as a new value when","type":"text"},{"type":"text","text":" "},{"text":"this atom is refreshed.","type":"text"}]}],"kind":"content"}],"abstract":[{"type":"text","text":"Refreshes and then return a result value."}],"variants":[{"paths":["\/documentation\/atoms\/refreshable\/refresh(context:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/Refreshable"]]},"deprecationSummary":[{"inlineContent":[{"text":"`Refreshable` is deprecated. Use a custom refresh function or other alternatives instead.","type":"text"}],"type":"paragraph"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable\/refresh(context:)"},"references":{"doc://Atoms/documentation/Atoms/Refreshable":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"deprecated":true,"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Refreshable"}],"role":"symbol","title":"Refreshable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Refreshable","kind":"identifier"}],"url":"\/documentation\/atoms\/refreshable"},"doc://Atoms/documentation/Atoms/Atom/CurrentContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/CurrentContext","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A type of the context structure to read, set, and otherwise interact"},{"text":" ","type":"text"},{"type":"text","text":"with other atoms."}],"navigatorTitle":[{"kind":"identifier","text":"CurrentContext"}],"role":"symbol","title":"Atom.CurrentContext","url":"\/documentation\/atoms\/atom\/currentcontext","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CurrentContext"}]},"doc://Atoms/documentation/Atoms/Refreshable/refresh(context:)":{"deprecated":true,"type":"topic","role":"symbol","kind":"symbol","title":"refresh(context:)","abstract":[{"type":"text","text":"Refreshes and then return a result value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable\/refresh(context:)","required":true,"url":"\/documentation\/atoms\/refreshable\/refresh(context:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"refresh","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"CurrentContext","preciseIdentifier":"s:5Atoms4AtomP14CurrentContexta","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"}]},"doc://Atoms/documentation/Atoms/Atom/Produced":{"type":"topic","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Produced"}],"kind":"symbol","abstract":[{"type":"text","text":"The type of value that this atom produces."}],"url":"\/documentation\/atoms\/atom\/produced","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","title":"Produced"},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"}}}