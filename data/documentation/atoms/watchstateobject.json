{"variants":[{"paths":["\/documentation\/atoms\/watchstateobject"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Structures","anchor":"Structures","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper"]},{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue"],"anchor":"Instance-Properties","generated":true}],"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"seeAlsoSections":[{"title":"Property Wrappers","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"anchor":"Property-Wrappers"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","text":"ObservableObjectAtom","preciseIdentifier":"s:5Atoms20ObservableObjectAtomP","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"It starts watching the atom when the view accesses the "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue","isActive":true,"type":"reference"},{"type":"text","text":", and when the atom changes,"},{"type":"text","text":" "},{"text":"the view invalidates its appearance and recomputes the body.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"See also "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch"},{"type":"text","text":" to have read-only access and "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","isActive":true},{"text":" to write value of ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true,"type":"reference"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"The interface of this property wrapper follows "},{"type":"codeVoice","code":"@StateObject"},{"text":".","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","text":"Example","anchor":"Example"},{"type":"codeListing","syntax":"swift","code":["class Counter: ObservableObject {","    @Published var count = 0","","    func plus(_ value: Int) {","        count += value","    }","}","","struct CounterAtom: ObservableObjectAtom, Hashable {","    func object(context: Context) -> Counter {","        Counter()","    }","}","","struct CounterView: View {","    @WatchStateObject(CounterAtom())","    var counter","","    var body: some View {","        VStack {","            Text(\"Count: \\(counter.count)\")    \/\/ Read property, and start watching.","            Stepper(value: $counter.count) {}  \/\/ Use the property as a binding","            Button(\"+100\") {","                counter.plus(100)              \/\/ Call the method to update.","            }","        }","    }","}"]}]}],"metadata":{"symbolKind":"struct","roleHeading":"Structure","modules":[{"name":"Atoms"}],"navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"externalID":"s:5Atoms16WatchStateObjectV","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WatchStateObject"}],"title":"WatchStateObject"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"},"references":{"doc://Atoms/documentation/Atoms/WatchStateObject/wrappedValue":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue","url":"\/documentation\/atoms\/watchstateobject\/wrappedvalue","abstract":[{"type":"text","text":"The underlying observable object associated with the given atom."}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms20ObservableObjectAtomP0C4TypeQa","text":"ObjectType","kind":"typeIdentifier"}],"title":"wrappedValue"},"doc://Atoms/documentation/Atoms/WatchStateObject/Wrapper":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper","title":"WatchStateObject.Wrapper","role":"symbol","abstract":[{"type":"text","text":"A wrapper of the underlying observable object that can create bindings to"},{"type":"text","text":" "},{"type":"text","text":"its properties using dynamic member lookup."}],"navigatorTitle":[{"text":"Wrapper","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Wrapper","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/atoms\/watchstateobject\/wrapper"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"type":"unresolvable","title":"SwiftUICore.DynamicProperty","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"},"doc://Atoms/documentation/Atoms/WatchStateObject/projectedValue":{"url":"\/documentation\/atoms\/watchstateobject\/projectedvalue","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Atoms16WatchStateObjectV","text":"WatchStateObject","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":">."},{"preciseIdentifier":"s:5Atoms16WatchStateObjectV7WrapperV","kind":"typeIdentifier","text":"Wrapper"}],"role":"symbol","type":"topic","title":"projectedValue","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","abstract":[{"type":"text","text":"A projection of the state object that creates bindings to its properties."}]},"doc://Atoms/documentation/Atoms/Watch":{"abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"kind":"symbol","role":"symbol","title":"Watch","url":"\/documentation\/atoms\/watch","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Watch"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch"},"doc://Atoms/documentation/Atoms/WatchStateObject/init(_:fileID:line:)":{"type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":")","kind":"text"}],"abstract":[{"text":"Creates an instance with the atom to watch.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)","role":"symbol","title":"init(_:fileID:line:)","url":"\/documentation\/atoms\/watchstateobject\/init(_:fileid:line:)"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","role":"symbol","title":"WatchState","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}],"url":"\/documentation\/atoms\/watchstate","type":"topic","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","navigatorTitle":[{"text":"WatchState","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ViewContext":{"kind":"symbol","role":"symbol","title":"ViewContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ViewContext","kind":"identifier"}],"url":"\/documentation\/atoms\/viewcontext","type":"topic","abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","navigatorTitle":[{"text":"ViewContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/WatchStateObject":{"url":"\/documentation\/atoms\/watchstateobject","abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"title":"WatchStateObject"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"title":"ObservableObjectAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"}}}