{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"ObservableObjectAtom","preciseIdentifier":"s:5Atoms20ObservableObjectAtomP","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It starts watching the atom when the view accesses the "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue","type":"reference","isActive":true},{"type":"text","text":", and when the atom changes,"},{"text":" ","type":"text"},{"text":"the view invalidates its appearance and recomputes the body.","type":"text"}]},{"inlineContent":[{"type":"text","text":"See also "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","isActive":true},{"text":" to have read-only access and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState"},{"type":"text","text":" to write value of "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true,"type":"reference"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"The interface of this property wrapper follows ","type":"text"},{"type":"codeVoice","code":"@StateObject"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","text":"Example","anchor":"Example","level":2},{"syntax":"swift","type":"codeListing","code":["class Counter: ObservableObject {","    @Published var count = 0","","    func plus(_ value: Int) {","        count += value","    }","}","","struct CounterAtom: ObservableObjectAtom, Hashable {","    func object(context: Context) -> Counter {","        Counter()","    }","}","","struct CounterView: View {","    @WatchStateObject(CounterAtom())","    var counter","","    var body: some View {","        VStack {","            Text(\"Count: \\(counter.count)\")    \/\/ Read property, and start watching.","            Stepper(value: $counter.count) {}  \/\/ Use the property as a binding","            Button(\"+100\") {","                counter.plus(100)              \/\/ Call the method to update.","            }","        }","    }","}"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"seeAlsoSections":[{"title":"Property Wrappers","generated":true,"anchor":"Property-Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"]}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper"],"title":"Structures","generated":true,"anchor":"Structures"},{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)"]},{"anchor":"Instance-Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue"],"title":"Instance Properties","generated":true}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/atoms\/watchstateobject"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true,"type":"reference"},{"type":"text","text":"."}],"sections":[],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"kind":"relationships","title":"Conforms To"}],"metadata":{"symbolKind":"struct","modules":[{"name":"Atoms"}],"role":"symbol","title":"WatchStateObject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"externalID":"s:5Atoms16WatchStateObjectV","navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"roleHeading":"Structure"},"references":{"doc://Atoms/documentation/Atoms/WatchStateObject/wrappedValue":{"title":"wrappedValue","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue","abstract":[{"text":"The underlying observable object associated with the given atom.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms20ObservableObjectAtomP0C4TypeQa","text":"ObjectType","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/watchstateobject\/wrappedvalue"},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WatchState"}],"role":"symbol","url":"\/documentation\/atoms\/watchstate","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","type":"topic","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"title":"WatchState"},"doc://Atoms/documentation/Atoms/WatchStateObject/projectedValue":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Atoms16WatchStateObjectV","kind":"typeIdentifier","text":"WatchStateObject"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms16WatchStateObjectV7WrapperV","text":"Wrapper"}],"role":"symbol","url":"\/documentation\/atoms\/watchstateobject\/projectedvalue","title":"projectedValue","abstract":[{"type":"text","text":"A projection of the state object that creates bindings to its properties."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/stateatom","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","role":"symbol"},"doc://Atoms/documentation/Atoms/Watch":{"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"role":"symbol","url":"\/documentation\/atoms\/watch","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","type":"topic","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"title":"Watch"},"doc://Atoms/documentation/Atoms/ViewContext":{"type":"topic","url":"\/documentation\/atoms\/viewcontext","abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"kind":"symbol","role":"symbol","title":"ViewContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","navigatorTitle":[{"kind":"identifier","text":"ViewContext"}]},"doc://Atoms/documentation/Atoms/WatchStateObject/init(_:fileID:line:)":{"abstract":[{"text":"Creates an instance with the atom to watch.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/atoms\/watchstateobject\/init(_:fileid:line:)","title":"init(_:fileID:line:)","role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)","kind":"symbol"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"title":"SwiftUICore.DynamicProperty","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP","type":"unresolvable"},"doc://Atoms/documentation/Atoms/WatchStateObject/Wrapper":{"navigatorTitle":[{"text":"Wrapper","kind":"identifier"}],"title":"WatchStateObject.Wrapper","abstract":[{"type":"text","text":"A wrapper of the underlying observable object that can create bindings to"},{"type":"text","text":" "},{"type":"text","text":"its properties using dynamic member lookup."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper","url":"\/documentation\/atoms\/watchstateobject\/wrapper","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Wrapper"}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"url":"\/documentation\/atoms\/observableobjectatom","kind":"symbol","title":"ObservableObjectAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"title":"WatchStateObject","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/watchstateobject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","role":"symbol"}}}