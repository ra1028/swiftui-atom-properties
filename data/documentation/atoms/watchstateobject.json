{"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"title":"Conforms To","type":"conformsTo"}],"seeAlsoSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"anchor":"Property-Wrappers","title":"Property Wrappers","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/watchstateobject"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WatchStateObject"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","text":"ObservableObjectAtom","preciseIdentifier":"s:5Atoms20ObservableObjectAtomP","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It starts watching the atom when the view accesses the "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue","type":"reference","isActive":true},{"type":"text","text":", and when the atom changes,"},{"text":" ","type":"text"},{"type":"text","text":"the view invalidates its appearance and recomputes the body."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See also "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","type":"reference"},{"text":" to have read-only access and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState"},{"type":"text","text":" to write value of "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true,"type":"reference"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"The interface of this property wrapper follows ","type":"text"},{"type":"codeVoice","code":"@StateObject"},{"type":"text","text":"."}]},{"text":"Example","level":2,"type":"heading","anchor":"Example"},{"syntax":"swift","code":["class Counter: ObservableObject {","    @Published var count = 0","","    func plus(_ value: Int) {","        count += value","    }","}","","struct CounterAtom: ObservableObjectAtom, Hashable {","    func object(context: Context) -> Counter {","        Counter()","    }","}","","struct CounterView: View {","    @WatchStateObject(CounterAtom())","    var counter","","    var body: some View {","        VStack {","            Text(\"Count: \\(counter.count)\")    \/\/ Read property, and start watching.","            Stepper(value: $counter.count) {}  \/\/ Use the property as a binding","            Button(\"+100\") {","                counter.plus(100)              \/\/ Call the method to update.","            }","        }","    }","}"],"type":"codeListing"}]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"title":"WatchStateObject","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WatchStateObject","kind":"identifier"}],"externalID":"s:5Atoms16WatchStateObjectV","symbolKind":"struct","role":"symbol","modules":[{"name":"Atoms"}]},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"sections":[],"topicSections":[{"anchor":"Structures","generated":true,"title":"Structures","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper"]},{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)"]},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue"],"generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"reference"},{"type":"text","text":"."}],"references":{"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom"},"doc://Atoms/documentation/Atoms/Watch":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Watch","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Watch"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","type":"topic","title":"Watch","url":"\/documentation\/atoms\/watch","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}]},"doc://Atoms/documentation/Atoms/WatchStateObject/init(_:fileID:line:)":{"title":"init(_:fileID:line:)","abstract":[{"type":"text","text":"Creates an instance with the atom to watch."}],"role":"symbol","type":"topic","url":"\/documentation\/atoms\/watchstateobject\/init(_:fileid:line:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)","kind":"symbol"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP","type":"unresolvable","title":"SwiftUICore.DynamicProperty"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"url":"\/documentation\/atoms\/watchstateobject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","title":"WatchStateObject","type":"topic","abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/ViewContext":{"abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"title":"ViewContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewContext"}],"url":"\/documentation\/atoms\/viewcontext"},"doc://Atoms/documentation/Atoms/WatchStateObject/wrappedValue":{"abstract":[{"text":"The underlying observable object associated with the given atom.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/atoms\/watchstateobject\/wrappedvalue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ObjectType","preciseIdentifier":"s:5Atoms20ObservableObjectAtomP0C4TypeQa"}],"kind":"symbol","title":"wrappedValue","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue"},"doc://Atoms/documentation/Atoms/WatchState":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","role":"symbol","url":"\/documentation\/atoms\/watchstate","navigatorTitle":[{"kind":"identifier","text":"WatchState"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}],"kind":"symbol","type":"topic","title":"WatchState","abstract":[{"text":"A property wrapper type that can watch and read-write access to the given atom conforms","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference"},{"type":"text","text":"."}]},"doc://Atoms/documentation/Atoms/WatchStateObject/projectedValue":{"abstract":[{"type":"text","text":"A projection of the state object that creates bindings to its properties."}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WatchStateObject","preciseIdentifier":"s:5Atoms16WatchStateObjectV"},{"text":"<","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Wrapper","preciseIdentifier":"s:5Atoms16WatchStateObjectV7WrapperV","kind":"typeIdentifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","title":"projectedValue","url":"\/documentation\/atoms\/watchstateobject\/projectedvalue"},"doc://Atoms/documentation/Atoms":{"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","url":"\/documentation\/atoms","role":"collection","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol"},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","url":"\/documentation\/atoms\/stateatom","title":"StateAtom"},"doc://Atoms/documentation/Atoms/WatchStateObject/Wrapper":{"url":"\/documentation\/atoms\/watchstateobject\/wrapper","abstract":[{"text":"A wrapper of the underlying observable object that can create bindings to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"its properties using dynamic member lookup."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapper","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Wrapper"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper","title":"WatchStateObject.Wrapper","role":"symbol"}}}