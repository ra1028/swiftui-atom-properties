{"metadata":{"role":"symbol","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WatchStateObject","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"externalID":"s:5Atoms16WatchStateObjectV","modules":[{"name":"Atoms"}],"title":"WatchStateObject","roleHeading":"Structure"},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/watchstateobject"]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"kind":"relationships"}],"sections":[],"seeAlsoSections":[{"anchor":"Property-Wrappers","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"title":"Property Wrappers"}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"A property wrapper type that can watch the given atom conforms to ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"type":"text","text":"."}],"topicSections":[{"anchor":"Structures","title":"Structures","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper"]},{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)"],"title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue"],"anchor":"Instance-Properties","title":"Instance Properties"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"ObservableObjectAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms20ObservableObjectAtomP"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"It starts watching the atom when the view accesses the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue"},{"type":"text","text":", and when the atom changes,"},{"type":"text","text":" "},{"text":"the view invalidates its appearance and recomputes the body.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See also "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","isActive":true,"type":"reference"},{"type":"text","text":" to have read-only access and "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","isActive":true},{"text":" to write value of ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true,"type":"reference"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"The interface of this property wrapper follows ","type":"text"},{"type":"codeVoice","code":"@StateObject"},{"text":".","type":"text"}]},{"text":"Example","type":"heading","anchor":"Example","level":2},{"syntax":"swift","type":"codeListing","code":["class Counter: ObservableObject {","    @Published var count = 0","","    func plus(_ value: Int) {","        count += value","    }","}","","struct CounterAtom: ObservableObjectAtom, Hashable {","    func object(context: Context) -> Counter {","        Counter()","    }","}","","struct CounterView: View {","    @WatchStateObject(CounterAtom())","    var counter","","    var body: some View {","        VStack {","            Text(\"Count: \\(counter.count)\")    \/\/ Read property, and start watching.","            Stepper(value: $counter.count) {}  \/\/ Use the property as a binding","            Button(\"+100\") {","                counter.plus(100)              \/\/ Call the method to update.","            }","        }","    }","}"]}]}],"references":{"doc://Atoms/documentation/Atoms/ViewContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","title":"ViewContext","role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/viewcontext","abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"type":"text","text":"interact with atoms from views."}],"type":"topic","navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/WatchStateObject/init(_:fileID:line:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/atoms\/watchstateobject\/init(_:fileid:line:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)","abstract":[{"text":"Creates an instance with the atom to watch.","type":"text"}],"title":"init(_:fileID:line:)"},"doc://Atoms/documentation/Atoms/WatchStateObject/wrappedValue":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms20ObservableObjectAtomP0C4TypeQa","text":"ObjectType"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue","abstract":[{"text":"The underlying observable object associated with the given atom.","type":"text"}],"url":"\/documentation\/atoms\/watchstateobject\/wrappedvalue","title":"wrappedValue","kind":"symbol","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/WatchStateObject/Wrapper":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Wrapper","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/watchstateobject\/wrapper","kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper","navigatorTitle":[{"kind":"identifier","text":"Wrapper"}],"abstract":[{"text":"A wrapper of the underlying observable object that can create bindings to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"its properties using dynamic member lookup."}],"title":"WatchStateObject.Wrapper"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"title":"SwiftUICore.DynamicProperty","type":"unresolvable","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"},"doc://Atoms/documentation/Atoms":{"role":"collection","type":"topic","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"kind":"symbol","title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/StateAtom":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateAtom"}],"type":"topic","url":"\/documentation\/atoms\/stateatom","kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"title":"StateAtom"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"url":"\/documentation\/atoms\/watchstateobject","title":"WatchStateObject","kind":"symbol","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/WatchStateObject/projectedValue":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Atoms16WatchStateObjectV","kind":"typeIdentifier","text":"WatchStateObject"},{"text":"<","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms16WatchStateObjectV7WrapperV","text":"Wrapper"}],"type":"topic","url":"\/documentation\/atoms\/watchstateobject\/projectedvalue","kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","title":"projectedValue","abstract":[{"type":"text","text":"A projection of the state object that creates bindings to its properties."}]},"doc://Atoms/documentation/Atoms/WatchState":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true},{"text":".","type":"text"}],"navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"url":"\/documentation\/atoms\/watchstate","title":"WatchState","kind":"symbol","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/Watch":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Watch","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/watch","kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","navigatorTitle":[{"kind":"identifier","text":"Watch"}],"title":"Watch","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","kind":"symbol","role":"symbol","type":"topic"}}}