{"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"title":"Property Wrappers","anchor":"Property-Wrappers"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchStateObject","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:5Atoms20ObservableObjectAtomP","text":"ObservableObjectAtom","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"It starts watching the atom when the view accesses the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue"},{"type":"text","text":", and when the atom changes,"},{"type":"text","text":" "},{"text":"the view invalidates its appearance and recomputes the body.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"See also ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","type":"reference","isActive":true},{"text":" to have read-only access and ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","type":"reference","isActive":true},{"text":" to write value of ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"The interface of this property wrapper follows ","type":"text"},{"type":"codeVoice","code":"@StateObject"},{"type":"text","text":"."}],"type":"paragraph"},{"anchor":"Example","text":"Example","type":"heading","level":2},{"type":"codeListing","syntax":"swift","code":["class Counter: ObservableObject {","    @Published var count = 0","","    func plus(_ value: Int) {","        count += value","    }","}","","struct CounterAtom: ObservableObjectAtom, Hashable {","    func object(context: Context) -> Counter {","        Counter()","    }","}","","struct CounterView: View {","    @WatchStateObject(CounterAtom())","    var counter","","    var body: some View {","        VStack {","            Text(\"Count: \\(counter.count)\")    \/\/ Read property, and start watching.","            Stepper(value: $counter.count) {}  \/\/ Use the property as a binding","            Button(\"+100\") {","                counter.plus(100)              \/\/ Call the method to update.","            }","        }","    }","}"]}]}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/watchstateobject"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"kind":"relationships","type":"conformsTo"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"},"kind":"symbol","metadata":{"externalID":"s:5Atoms16WatchStateObjectV","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"WatchStateObject","kind":"identifier"}],"role":"symbol","symbolKind":"struct","roleHeading":"Structure","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"modules":[{"name":"Atoms"}],"title":"WatchStateObject"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper"],"anchor":"Structures","title":"Structures"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue"]}],"references":{"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","url":"\/documentation\/atoms\/watchstate","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchState","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"title":"WatchState","role":"symbol"},"doc://Atoms/documentation/Atoms/ViewContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewContext"}],"navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"type":"topic","url":"\/documentation\/atoms\/viewcontext","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","title":"ViewContext","kind":"symbol"},"doc://Atoms/documentation/Atoms/WatchStateObject/Wrapper":{"url":"\/documentation\/atoms\/watchstateobject\/wrapper","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Wrapper","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper","abstract":[{"type":"text","text":"A wrapper of the underlying observable object that can create bindings to"},{"type":"text","text":" "},{"type":"text","text":"its properties using dynamic member lookup."}],"role":"symbol","navigatorTitle":[{"text":"Wrapper","kind":"identifier"}],"kind":"symbol","title":"WatchStateObject.Wrapper"},"doc://Atoms/documentation/Atoms/Watch":{"navigatorTitle":[{"kind":"identifier","text":"Watch"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Watch"}],"abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"title":"Watch","type":"topic","role":"symbol","url":"\/documentation\/atoms\/watch"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"url":"\/documentation\/atoms\/watchstateobject","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"title":"WatchStateObject","role":"symbol"},"doc://Atoms/documentation/Atoms/WatchStateObject/init(_:fileID:line:)":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"Node","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","url":"\/documentation\/atoms\/watchstateobject\/init(_:fileid:line:)","abstract":[{"text":"Creates an instance with the atom to watch.","type":"text"}],"kind":"symbol","title":"init(_:fileID:line:)"},"doc://Atoms/documentation/Atoms/WatchStateObject/wrappedValue":{"title":"wrappedValue","role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue","kind":"symbol","url":"\/documentation\/atoms\/watchstateobject\/wrappedvalue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"text":"ObjectType","preciseIdentifier":"s:5Atoms20ObservableObjectAtomP0C4TypeQa","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The underlying observable object associated with the given atom."}]},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"url":"\/documentation\/atoms\/observableobjectatom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"title":"ObservableObjectAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObjectAtom"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}]},"doc://Atoms/documentation/Atoms/WatchStateObject/projectedValue":{"url":"\/documentation\/atoms\/watchstateobject\/projectedvalue","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"WatchStateObject","preciseIdentifier":"s:5Atoms16WatchStateObjectV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Wrapper","preciseIdentifier":"s:5Atoms16WatchStateObjectV7WrapperV","kind":"typeIdentifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","abstract":[{"text":"A projection of the state object that creates bindings to its properties.","type":"text"}],"role":"symbol","kind":"symbol","title":"projectedValue"},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"role":"symbol","url":"\/documentation\/atoms\/stateatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","kind":"symbol","type":"topic","title":"StateAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}]},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"title":"SwiftUICore.DynamicProperty","type":"unresolvable","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"}}}