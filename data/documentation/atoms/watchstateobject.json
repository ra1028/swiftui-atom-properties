{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"variants":[{"paths":["\/documentation\/atoms\/watchstateobject"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:5Atoms20ObservableObjectAtomP","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","text":"ObservableObjectAtom","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"It starts watching the atom when the view accesses the "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue","isActive":true,"type":"reference"},{"type":"text","text":", and when the atom changes,"},{"text":" ","type":"text"},{"text":"the view invalidates its appearance and recomputes the body.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"See also ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","isActive":true,"type":"reference"},{"type":"text","text":" to have read-only access and "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","type":"reference"},{"type":"text","text":" to write value of "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true,"type":"reference"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"The interface of this property wrapper follows ","type":"text"},{"code":"@StateObject","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"heading","level":2,"anchor":"Example","text":"Example"},{"syntax":"swift","type":"codeListing","code":["class Counter: ObservableObject {","    @Published var count = 0","","    func plus(_ value: Int) {","        count += value","    }","}","","struct CounterAtom: ObservableObjectAtom, Hashable {","    func object(context: Context) -> Counter {","        Counter()","    }","}","","struct CounterView: View {","    @WatchStateObject(CounterAtom())","    var counter","","    var body: some View {","        VStack {","            Text(\"Count: \\(counter.count)\")    \/\/ Read property, and start watching.","            Stepper(value: $counter.count) {}  \/\/ Use the property as a binding","            Button(\"+100\") {","                counter.plus(100)              \/\/ Call the method to update.","            }","        }","    }","}"]}],"kind":"content"}],"metadata":{"modules":[{"name":"Atoms"}],"externalID":"s:5Atoms16WatchStateObjectV","role":"symbol","roleHeading":"Structure","symbolKind":"struct","title":"WatchStateObject","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchStateObject","kind":"identifier"}],"navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}]},"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"sections":[],"abstract":[{"text":"A property wrapper type that can watch the given atom conforms to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true,"type":"reference"},{"text":".","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper"],"generated":true,"anchor":"Structures","title":"Structures"},{"title":"Initializers","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)"],"anchor":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue"],"anchor":"Instance-Properties","generated":true}],"kind":"symbol","seeAlsoSections":[{"anchor":"Property-Wrappers","generated":true,"title":"Property Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","interfaceLanguage":"swift"},"references":{"doc://Atoms/documentation/Atoms/WatchStateObject/Wrapper":{"navigatorTitle":[{"kind":"identifier","text":"Wrapper"}],"title":"WatchStateObject.Wrapper","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Wrapper"}],"abstract":[{"type":"text","text":"A wrapper of the underlying observable object that can create bindings to"},{"type":"text","text":" "},{"text":"its properties using dynamic member lookup.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/watchstateobject\/wrapper","role":"symbol"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","role":"symbol","navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}]},"doc://Atoms/documentation/Atoms/StateAtom":{"url":"\/documentation\/atoms\/stateatom","title":"StateAtom","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}]},"doc://Atoms/documentation/Atoms/WatchStateObject/projectedValue":{"url":"\/documentation\/atoms\/watchstateobject\/projectedvalue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Atoms16WatchStateObjectV","text":"WatchStateObject","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":">."},{"preciseIdentifier":"s:5Atoms16WatchStateObjectV7WrapperV","text":"Wrapper","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A projection of the state object that creates bindings to its properties."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","title":"projectedValue","role":"symbol","type":"topic","kind":"symbol"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"type":"unresolvable","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP","title":"SwiftUICore.DynamicProperty"},"doc://Atoms/documentation/Atoms/WatchState":{"title":"WatchState","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","url":"\/documentation\/atoms\/watchstate","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"A property wrapper type that can watch and read-write access to the given atom conforms","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}]},"doc://Atoms/documentation/Atoms/WatchStateObject/wrappedValue":{"url":"\/documentation\/atoms\/watchstateobject\/wrappedvalue","abstract":[{"type":"text","text":"The underlying observable object associated with the given atom."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue","kind":"symbol","title":"wrappedValue","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms20ObservableObjectAtomP0C4TypeQa","text":"ObjectType","kind":"typeIdentifier"}]},"doc://Atoms/documentation/Atoms":{"url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"type":"topic","kind":"symbol","title":"Atoms","role":"collection"},"doc://Atoms/documentation/Atoms/ViewContext":{"url":"\/documentation\/atoms\/viewcontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}],"navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"title":"ViewContext","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/WatchStateObject/init(_:fileID:line:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)","abstract":[{"text":"Creates an instance with the atom to watch.","type":"text"}],"title":"init(_:fileID:line:)","type":"topic","url":"\/documentation\/atoms\/watchstateobject\/init(_:fileid:line:)","role":"symbol"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","url":"\/documentation\/atoms\/watchstateobject","type":"topic","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A property wrapper type that can watch the given atom conforms to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"title":"WatchStateObject"},"doc://Atoms/documentation/Atoms/Watch":{"title":"Watch","url":"\/documentation\/atoms\/watch","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Watch","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"type":"topic"}}}