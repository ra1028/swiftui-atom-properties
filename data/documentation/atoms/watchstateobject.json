{"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"WatchStateObject","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:5Atoms20ObservableObjectAtomP","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","text":"ObservableObjectAtom"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"It starts watching the atom when the view accesses the "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue","type":"reference","isActive":true},{"type":"text","text":", and when the atom changes,"},{"type":"text","text":" "},{"type":"text","text":"the view invalidates its appearance and recomputes the body."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"See also "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch"},{"text":" to have read-only access and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState"},{"type":"text","text":" to write value of "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"The interface of this property wrapper follows ","type":"text"},{"code":"@StateObject","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"anchor":"Example","text":"Example","type":"heading","level":2},{"code":["class Counter: ObservableObject {","    @Published var count = 0","","    func plus(_ value: Int) {","        count += value","    }","}","","struct CounterAtom: ObservableObjectAtom, Hashable {","    func object(context: Context) -> Counter {","        Counter()","    }","}","","struct CounterView: View {","    @WatchStateObject(CounterAtom())","    var counter","","    var body: some View {","        VStack {","            Text(\"Count: \\(counter.count)\")    \/\/ Read property, and start watching.","            Stepper(value: $counter.count) {}  \/\/ Use the property as a binding","            Button(\"+100\") {","                counter.plus(100)              \/\/ Call the method to update.","            }","        }","    }","}"],"type":"codeListing","syntax":"swift"}]}],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"generated":true,"anchor":"Property-Wrappers","title":"Property Wrappers"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/watchstateobject"]}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper"],"anchor":"Structures","generated":true},{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)"],"generated":true},{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue"],"title":"Instance Properties","anchor":"Instance-Properties"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"title":"Conforms To"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WatchStateObject"}],"roleHeading":"Structure","title":"WatchStateObject","modules":[{"name":"Atoms"}],"symbolKind":"struct","externalID":"s:5Atoms16WatchStateObjectV","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}]},"sections":[],"references":{"doc://Atoms/documentation/Atoms/WatchStateObject/wrappedValue":{"type":"topic","role":"symbol","url":"\/documentation\/atoms\/watchstateobject\/wrappedvalue","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"text":"ObjectType","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms20ObservableObjectAtomP0C4TypeQa"}],"title":"wrappedValue","abstract":[{"type":"text","text":"The underlying observable object associated with the given atom."}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","title":"WatchStateObject","kind":"symbol","url":"\/documentation\/atoms\/watchstateobject","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"text":".","type":"text"}]},"doc://Atoms/documentation/Atoms/Watch":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Watch"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"role":"symbol","abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","url":"\/documentation\/atoms\/watch","title":"Watch"},"doc://Atoms/documentation/Atoms/StateAtom":{"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","title":"StateAtom","kind":"symbol","url":"\/documentation\/atoms\/stateatom","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}]},"doc://Atoms/documentation/Atoms/WatchStateObject/Wrapper":{"navigatorTitle":[{"text":"Wrapper","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper","title":"WatchStateObject.Wrapper","url":"\/documentation\/atoms\/watchstateobject\/wrapper","abstract":[{"text":"A wrapper of the underlying observable object that can create bindings to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"its properties using dynamic member lookup."}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapper","kind":"identifier"}]},"doc://Atoms/documentation/Atoms":{"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","role":"collection","url":"\/documentation\/atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"type":"topic"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom"},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WatchState"}],"role":"symbol","abstract":[{"text":"A property wrapper type that can watch and read-write access to the given atom conforms","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true,"type":"reference"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","url":"\/documentation\/atoms\/watchstate","title":"WatchState"},"doc://Atoms/documentation/Atoms/WatchStateObject/init(_:fileID:line:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/atoms\/watchstateobject\/init(_:fileid:line:)","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)","title":"init(_:fileID:line:)","abstract":[{"type":"text","text":"Creates an instance with the atom to watch."}]},"doc://Atoms/documentation/Atoms/ViewContext":{"navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewContext"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","title":"ViewContext","kind":"symbol","url":"\/documentation\/atoms\/viewcontext","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"type":"text","text":"interact with atoms from views."}]},"doc://Atoms/documentation/Atoms/WatchStateObject/projectedValue":{"title":"projectedValue","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Atoms16WatchStateObjectV","kind":"typeIdentifier","text":"WatchStateObject"},{"text":"<","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Wrapper","preciseIdentifier":"s:5Atoms16WatchStateObjectV7WrapperV"}],"url":"\/documentation\/atoms\/watchstateobject\/projectedvalue","kind":"symbol","abstract":[{"text":"A projection of the state object that creates bindings to its properties.","type":"text"}]},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP","type":"unresolvable","title":"SwiftUICore.DynamicProperty"}}}