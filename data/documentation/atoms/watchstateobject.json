{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"text":"A property wrapper type that can watch the given atom conforms to ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"WatchStateObject","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","kind":"typeIdentifier","text":"ObservableObjectAtom","preciseIdentifier":"s:5Atoms20ObservableObjectAtomP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"It starts watching the atom when the view accesses the "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue","type":"reference","isActive":true},{"text":", and when the atom changes,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the view invalidates its appearance and recomputes the body."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"See also "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","isActive":true,"type":"reference"},{"type":"text","text":" to have read-only access and "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","isActive":true,"type":"reference"},{"text":" to write value of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"The interface of this property wrapper follows "},{"code":"@StateObject","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","level":2,"text":"Example","anchor":"Example"},{"syntax":"swift","code":["class Counter: ObservableObject {","    @Published var count = 0","","    func plus(_ value: Int) {","        count += value","    }","}","","struct CounterAtom: ObservableObjectAtom, Hashable {","    func object(context: Context) -> Counter {","        Counter()","    }","}","","struct CounterView: View {","    @WatchStateObject(CounterAtom())","    var counter","","    var body: some View {","        VStack {","            Text(\"Count: \\(counter.count)\")    \/\/ Read property, and start watching.","            Stepper(value: $counter.count) {}  \/\/ Use the property as a binding","            Button(\"+100\") {","                counter.plus(100)              \/\/ Call the method to update.","            }","        }","    }","}"],"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","interfaceLanguage":"swift"},"metadata":{"title":"WatchStateObject","modules":[{"name":"Atoms"}],"externalID":"s:5Atoms16WatchStateObjectV","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"role":"symbol","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"roleHeading":"Structure"},"variants":[{"paths":["\/documentation\/atoms\/watchstateobject"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper"],"title":"Structures","anchor":"Structures","generated":true},{"anchor":"Initializers","title":"Initializers","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)"]},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue"]}],"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"seeAlsoSections":[{"generated":true,"anchor":"Property-Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"title":"Property Wrappers"}],"references":{"doc://Atoms/documentation/Atoms/WatchStateObject":{"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true,"type":"reference"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchStateObject","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"type":"topic","url":"\/documentation\/atoms\/watchstateobject","title":"WatchStateObject"},"doc://Atoms/documentation/Atoms/WatchStateObject/Wrapper":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Wrapper"}],"title":"WatchStateObject.Wrapper","navigatorTitle":[{"kind":"identifier","text":"Wrapper"}],"abstract":[{"type":"text","text":"A wrapper of the underlying observable object that can create bindings to"},{"text":" ","type":"text"},{"text":"its properties using dynamic member lookup.","type":"text"}],"role":"symbol","url":"\/documentation\/atoms\/watchstateobject\/wrapper","kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper"},"doc://Atoms/documentation/Atoms/WatchStateObject/init(_:fileID:line:)":{"abstract":[{"text":"Creates an instance with the atom to watch.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/init(_:fileID:line:)","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/atoms\/watchstateobject\/init(_:fileid:line:)","title":"init(_:fileID:line:)"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"title":"SwiftUICore.DynamicProperty","type":"unresolvable","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"},"doc://Atoms/documentation/Atoms/ViewContext":{"abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ViewContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"type":"topic","url":"\/documentation\/atoms\/viewcontext","title":"ViewContext"},"doc://Atoms/documentation/Atoms/StateAtom":{"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom","role":"symbol","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","title":"StateAtom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/WatchStateObject/wrappedValue":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms20ObservableObjectAtomP0C4TypeQa","kind":"typeIdentifier","text":"ObjectType"}],"title":"wrappedValue","abstract":[{"type":"text","text":"The underlying observable object associated with the given atom."}],"role":"symbol","url":"\/documentation\/atoms\/watchstateobject\/wrappedvalue","kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/wrappedValue"},"doc://Atoms/documentation/Atoms/Watch":{"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Watch","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/watch","title":"Watch"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"type":"topic","navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/observableobjectatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","title":"ObservableObjectAtom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/WatchState":{"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true},{"type":"text","text":"."}],"type":"topic","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/watchstate","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","title":"WatchState","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchState","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/WatchStateObject/projectedValue":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Atoms16WatchStateObjectV","kind":"typeIdentifier","text":"WatchStateObject"},{"text":"<","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:5Atoms16WatchStateObjectV7WrapperV","kind":"typeIdentifier","text":"Wrapper"}],"title":"projectedValue","abstract":[{"type":"text","text":"A projection of the state object that creates bindings to its properties."}],"role":"symbol","url":"\/documentation\/atoms\/watchstateobject\/projectedvalue","kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue"}}}