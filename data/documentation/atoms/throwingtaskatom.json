{"variants":[{"paths":["\/documentation\/atoms\/throwingtaskatom"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"roleHeading":"Protocol","externalID":"s:5Atoms16ThrowingTaskAtomP","title":"ThrowingTaskAtom","modules":[{"name":"Atoms"}],"symbolKind":"protocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"}],"abstract":[{"text":"An atom type that provides a throwing ","type":"text"},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous, throwing function."}],"seeAlsoSections":[{"generated":true,"title":"Atoms","anchor":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"]}],"kind":"symbol","sections":[],"topicSections":[{"generated":true,"title":"Associated Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/Success"],"anchor":"Associated-Types"},{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/value(context:)"],"title":"Instance Methods","anchor":"Instance-Methods"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ThrowingTaskAtom","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms9AsyncAtomP","text":"AsyncAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This atom guarantees that the task to be identical instance and its state can be shared","type":"text"},{"text":" ","type":"text"},{"text":"at anywhere even when they are accessed simultaneously from multiple locations.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom"}]}],"style":"note","name":"See Also","type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","isActive":true}]}],"style":"note","type":"aside","name":"See Also"},{"anchor":"Output-Value","level":2,"text":"Output Value","type":"heading"},{"inlineContent":[{"type":"text","text":"Task<Self.Value, any Error>"}],"type":"paragraph"},{"type":"heading","anchor":"Example","level":2,"text":"Example"},{"syntax":"swift","code":["struct AsyncTextAtom: ThrowingTaskAtom, Hashable {","    func value(context: Context) async throws -> String {","        try await Task.sleep(nanoseconds: 1_000_000_000)","        return \"Swift\"","    }","}","","struct DelayedTitleView: View {","    @Watch(AsyncTextAtom())","    var text","","    var body: some View {","        Suspense(text) { text in","            Text(text)","        } suspending: {","            Text(\"Loading\")","        } catch: {","            Text(\"Failed\")","        }","    }","}"],"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"references":{"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"}],"kind":"symbol","title":"AsyncSequenceAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","abstract":[{"text":"An atom type that provides asynchronous, sequential elements of the given ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" value."}],"url":"\/documentation\/atoms\/asyncsequenceatom"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/value(context:)":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/value(context:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"value","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Context","preciseIdentifier":"s:5Atoms4AtomP7Contexta","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms16ThrowingTaskAtomP7SuccessQa","text":"Success","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Asynchronously produces a value to be provided via this atom."}],"title":"value(context:)","required":true,"url":"\/documentation\/atoms\/throwingtaskatom\/value(context:)"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","title":"ThrowingTaskAtom","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous, throwing function."}],"url":"\/documentation\/atoms\/throwingtaskatom"},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"title":"PublisherAtom","abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" value.","type":"text"}],"type":"topic","url":"\/documentation\/atoms\/publisheratom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublisherAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}]},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"topic","title":"AsyncPhase","role":"symbol","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncPhase","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}]},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ModifiedAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that applies a modifier to an atom.","type":"text"}],"url":"\/documentation\/atoms\/modifiedatom","kind":"symbol","navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}],"type":"topic","title":"ModifiedAtom","role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"title":"AsyncAtom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","url":"\/documentation\/atoms\/asyncatom","role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhaseAtom"}],"url":"\/documentation\/atoms\/asyncphaseatom","title":"AsyncPhaseAtom","type":"topic","abstract":[{"type":"text","text":"An atom that provides an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"text":" value from the asynchronous throwable function.","type":"text"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/Suspense":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Suspense","kind":"identifier"}],"abstract":[{"text":"A view that lets the content wait for the given task to provide a resulting value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or an error."}],"role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/suspense","title":"Suspense","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","navigatorTitle":[{"kind":"identifier","text":"Suspense"}]},"doc://Atoms/documentation/Atoms/StateAtom":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateAtom"}],"type":"topic","url":"\/documentation\/atoms\/stateatom","kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"title":"StateAtom"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","kind":"symbol","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/Success":{"abstract":[{"type":"text","text":"The type of success value that this atom produces."}],"type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Success"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/Success","url":"\/documentation\/atoms\/throwingtaskatom\/success","title":"Success","role":"symbol","required":true},"doc://Atoms/documentation/Atoms":{"role":"collection","type":"topic","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"kind":"symbol","title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/TaskAtom":{"title":"TaskAtom","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous function."}],"type":"topic","url":"\/documentation\/atoms\/taskatom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ValueAtom":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","title":"ValueAtom","abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"url":"\/documentation\/atoms\/valueatom"}}}