{"seeAlsoSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"anchor":"Atoms","generated":true,"title":"Atoms"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ThrowingTaskAtom","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"AsyncAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","preciseIdentifier":"s:5Atoms9AsyncAtomP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This atom guarantees that the task to be identical instance and its state can be shared","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"at anywhere even when they are accessed simultaneously from multiple locations."}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom"}]}],"name":"See Also","style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","isActive":true,"type":"reference"}],"type":"paragraph"}],"style":"note","type":"aside","name":"See Also"},{"type":"heading","anchor":"Output-Value","level":2,"text":"Output Value"},{"inlineContent":[{"text":"Task<Self.Value, any Error>","type":"text"}],"type":"paragraph"},{"type":"heading","level":2,"anchor":"Example","text":"Example"},{"syntax":"swift","type":"codeListing","code":["struct AsyncTextAtom: ThrowingTaskAtom, Hashable {","    func value(context: Context) async throws -> String {","        try await Task.sleep(nanoseconds: 1_000_000_000)","        return \"Swift\"","    }","}","","struct DelayedTitleView: View {","    @Watch(AsyncTextAtom())","    var text","","    var body: some View {","        Suspense(text) { text in","            Text(text)","        } suspending: {","            Text(\"Loading\")","        } catch: {","            Text(\"Failed\")","        }","    }","}"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atoms\/throwingtaskatom"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","interfaceLanguage":"swift"},"topicSections":[{"generated":true,"anchor":"Associated-Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/Success"],"title":"Associated Types"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/value(context:)"],"title":"Instance Methods","generated":true}],"metadata":{"externalID":"s:5Atoms16ThrowingTaskAtomP","modules":[{"name":"Atoms"}],"roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ThrowingTaskAtom","kind":"identifier"}],"navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"role":"symbol","symbolKind":"protocol","title":"ThrowingTaskAtom"},"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"kind":"relationships","title":"Inherits From"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"abstract":[{"text":"An atom type that provides a throwing ","type":"text"},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous, throwing function."}],"sections":[],"references":{"doc://Atoms/documentation/Atoms/Suspense":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","kind":"symbol","type":"topic","title":"Suspense","abstract":[{"text":"A view that lets the content wait for the given task to provide a resulting value","type":"text"},{"type":"text","text":" "},{"text":"or an error.","type":"text"}],"url":"\/documentation\/atoms\/suspense","navigatorTitle":[{"kind":"identifier","text":"Suspense"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Suspense","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/StateAtom":{"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","title":"StateAtom","kind":"symbol","url":"\/documentation\/atoms\/stateatom","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"kind":"symbol","title":"PublisherAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublisherAtom","kind":"identifier"}],"type":"topic","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/publisheratom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/throwingtaskatom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ThrowingTaskAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that provides a throwing ","type":"text"},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous, throwing function.","type":"text"}],"kind":"symbol","title":"ThrowingTaskAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom"},"doc://Atoms/documentation/Atoms/TaskAtom":{"kind":"symbol","title":"TaskAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskAtom","kind":"identifier"}],"type":"topic","abstract":[{"text":"An atom type that provides a nonthrowing ","type":"text"},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous function."}],"navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/taskatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom"},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","url":"\/documentation\/atoms\/asyncatom","type":"topic","abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAtom","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"title":"AsyncAtom"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/value(context:)":{"required":true,"url":"\/documentation\/atoms\/throwingtaskatom\/value(context:)","abstract":[{"type":"text","text":"Asynchronously produces a value to be provided via this atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/value(context:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP7Contexta"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms16ThrowingTaskAtomP7SuccessQa"}],"role":"symbol","title":"value(context:)","type":"topic"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/Success":{"abstract":[{"text":"The type of success value that this atom produces.","type":"text"}],"url":"\/documentation\/atoms\/throwingtaskatom\/success","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/Success","required":true,"title":"Success","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Success","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/Atom":{"url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","title":"Atom","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"title":"ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","kind":"symbol","abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","title":"AsyncPhase","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"type":"topic"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","role":"collection","url":"\/documentation\/atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"type":"topic"},"doc://Atoms/documentation/Atoms/ValueAtom":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","title":"ValueAtom","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"role":"symbol","url":"\/documentation\/atoms\/valueatom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"type":"topic"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","title":"AsyncSequenceAtom","navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"text":"as an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference"},{"type":"text","text":" value."}],"type":"topic"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhaseAtom"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","title":"AsyncPhaseAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","abstract":[{"text":"An atom that provides an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference"},{"type":"text","text":" value from the asynchronous throwable function."}]}}}