{"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","interfaceLanguage":"swift"},"metadata":{"externalID":"s:5Atoms20ObservableObjectAtomP","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableObjectAtom"}],"title":"ObservableObjectAtom","navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"roleHeading":"Protocol","symbolKind":"protocol","modules":[{"name":"Atoms"}]},"variants":[{"paths":["\/documentation\/atoms\/observableobjectatom"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Atom","preciseIdentifier":"s:5Atoms4AtomP","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"When published properties of the observable object provided through this atom changes, it","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"notifies updates to downstream atoms and views that are watching this atom."},{"text":" ","type":"text"},{"type":"text","text":"In case you want to get another atom value from the context later by methods in that"},{"text":" ","type":"text"},{"type":"text","text":"observable object, you can pass it as "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"If you watch other atoms through the context passed as parameter, the observable"},{"text":" ","type":"text"},{"type":"text","text":"object itself will be re-created with fresh state when the watching atom is updated."}],"type":"paragraph"}],"style":"note"},{"type":"heading","anchor":"Output-Value","text":"Output Value","level":2},{"type":"paragraph","inlineContent":[{"text":"Self.ObjectType","type":"text"}]},{"anchor":"Example","type":"heading","text":"Example","level":2},{"type":"codeListing","syntax":"swift","code":["class Contact: ObservableObject {","    @Published var name = \"\"","    @Published var age = 20","","    func haveBirthday() {","        age += 1","    }","}","","struct ContactAtom: ObservableObjectAtom, Hashable {","    func object(context: Context) -> Contact {","        Contact()","    }","}","","struct ContactView: View {","    @WatchStateObject(ContactAtom())","    var contact","","    var body: some View {","        VStack {","            TextField(\"Enter your name\", text: $contact.name)","            Text(\"Age: \\(contact.age)\")","            Button(\"Celebrate your birthday!\") {","                contact.haveBirthday()","            }","        }","    }","}"]}],"kind":"content"}],"seeAlsoSections":[{"title":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"anchor":"Atoms","generated":true}],"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"title":"Inherits From","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom\/ObjectType"],"generated":true,"anchor":"Associated-Types"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom\/object(context:)"],"anchor":"Instance-Methods"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Atoms/documentation/Atoms/ValueAtom":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","role":"symbol","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/valueatom","title":"ValueAtom","abstract":[{"type":"text","text":"An atom type that provides a read-only value."}]},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModifiedAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","role":"symbol","navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/modifiedatom","title":"ModifiedAtom","kind":"symbol"},"doc://Atoms/documentation/Atoms/TaskAtom":{"abstract":[{"text":"An atom type that provides a nonthrowing ","type":"text"},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous function.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","role":"symbol","navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/taskatom","title":"TaskAtom","kind":"symbol"},"doc://Atoms/documentation/Atoms/StateAtom":{"url":"\/documentation\/atoms\/stateatom","title":"StateAtom","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom/ObjectType":{"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"ObjectType","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"ObservableObject","preciseIdentifier":"s:7Combine16ObservableObjectP"}],"required":true,"abstract":[{"type":"text","text":"The type of observable object that this atom produces."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom\/ObjectType","title":"ObjectType","url":"\/documentation\/atoms\/observableobjectatom\/objecttype","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncPhase","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms":{"url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"type":"topic","kind":"symbol","title":"Atoms","role":"collection"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"url":"\/documentation\/atoms\/asyncsequenceatom","title":"AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" value."}]},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ThrowingTaskAtom","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskAtom"}],"title":"ThrowingTaskAtom","role":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"abstract":[{"text":"An atom that provides an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value from the asynchronous throwable function."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhaseAtom"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"title":"AsyncPhaseAtom","role":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom/object(context:)":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"object"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP7Contexta","text":"Context"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms20ObservableObjectAtomP0C4TypeQa","text":"ObjectType"}],"kind":"symbol","title":"object(context:)","url":"\/documentation\/atoms\/observableobjectatom\/object(context:)","abstract":[{"text":"Creates an observed object when this atom is actually used.","type":"text"}],"required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom\/object(context:)"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"kind":"symbol","url":"\/documentation\/atoms\/publisheratom","navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"title":"PublisherAtom","type":"topic","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PublisherAtom","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","role":"symbol","navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}]},"doc://Atoms/documentation/Atoms/AtomContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","url":"\/documentation\/atoms\/atomcontext","type":"topic","navigatorTitle":[{"text":"AtomContext","kind":"identifier"}],"abstract":[{"type":"text","text":"A context structure to read, write, and otherwise interact with atoms."}],"title":"AtomContext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomContext"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/Atom":{"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","navigatorTitle":[{"text":"Atom","kind":"identifier"}],"url":"\/documentation\/atoms\/atom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Atom","kind":"identifier"}],"title":"Atom","kind":"symbol"},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"}}}