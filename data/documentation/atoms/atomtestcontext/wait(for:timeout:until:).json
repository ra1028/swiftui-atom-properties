{"abstract":[{"type":"text","text":"Waits for the given atom until it will be in a certain state within a specified timeout,"},{"type":"text","text":" "},{"type":"text","text":"and then returns a boolean value indicating whether an update has happened."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wait"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":" "},{"text":"atom","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"duration","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":"? = nil, ","kind":"text"},{"text":"until","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Node"},{"text":" : ","kind":"text"},{"text":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP"}],"platforms":["macOS"]}]},{"parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An atom expecting an update to a certain state."}]}]},{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The maximum duration that this function can wait until"},{"type":"text","text":" "},{"text":"the next update. The default timeout interval is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" ","type":"text"},{"text":"which indicates no timeout.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A predicate that determines when to stop waiting.","type":"text"}]}],"name":"predicate"}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A boolean value indicating whether an update is done.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"syntax":"swift","code":["func testAsyncUpdate() async {","    let context = AtomTestContext()","","    let initialPhase = context.watch(AsyncCalculationAtom().phase)","    XCTAssertEqual(initialPhase, .suspending)","","    let didUpdate = await context.wait(for: AsyncCalculationAtom().phase, until: \\.isSuccess)","    let currentPhase = context.watch(AsyncCalculationAtom().phase)","","    XCTAssertTure(didUpdate)","    XCTAssertEqual(currentPhase, .success(123))","}"],"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atoms\/atomtestcontext\/wait(for:timeout:until:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","title":"wait(for:timeout:until:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"wait","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"until","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","text":"Produced"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"modules":[{"name":"Atoms"}],"externalID":"s:5Atoms15AtomTestContextV4wait3for7timeout5untilSbx_SdSgSb8ProducedQzctYaAA0B0RzlF"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/wait(for:timeout:until:)"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Atoms/documentation/Atoms/AtomTestContext":{"title":"AtomTestContext","role":"symbol","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomTestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/atomtestcontext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}]},"doc://Atoms/documentation/Atoms/Atom/Produced":{"type":"topic","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Produced"}],"kind":"symbol","abstract":[{"type":"text","text":"The type of value that this atom produces."}],"url":"\/documentation\/atoms\/atom\/produced","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","title":"Produced"},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomTestContext/wait(for:timeout:until:)":{"role":"symbol","abstract":[{"type":"text","text":"Waits for the given atom until it will be in a certain state within a specified timeout,"},{"text":" ","type":"text"},{"text":"and then returns a boolean value indicating whether an update has happened.","type":"text"}],"title":"wait(for:timeout:until:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"until"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/wait(for:timeout:until:)","url":"\/documentation\/atoms\/atomtestcontext\/wait(for:timeout:until:)","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"}}}