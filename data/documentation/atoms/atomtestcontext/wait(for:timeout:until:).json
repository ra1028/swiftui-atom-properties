{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"kind":"text","text":" "},{"kind":"internalParam","text":"atom"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":" "},{"kind":"internalParam","text":"duration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"until"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An atom expecting an update to a certain state."}]}]},{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The maximum duration that this function can wait until"},{"type":"text","text":" "},{"type":"text","text":"the next update. The default timeout interval is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"which indicates no timeout."}]}]},{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate that determines when to stop waiting."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A boolean value indicating whether an update is done."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"codeListing","syntax":"swift","code":["func testAsyncUpdate() async {","    let context = AtomTestContext()","","    let initialPhase = context.watch(AsyncCalculationAtom().phase)","    XCTAssertEqual(initialPhase, .suspending)","","    let didUpdate = await context.wait(for: AsyncCalculationAtom().phase, until: \\.isSuccess)","    let currentPhase = context.watch(AsyncCalculationAtom().phase)","","    XCTAssertTure(didUpdate)","    XCTAssertEqual(currentPhase, .success(123))","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/atoms\/atomtestcontext\/wait(for:timeout:until:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/wait(for:timeout:until:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Waits for the given atom until it will be in a certain state within a specified timeout,"},{"type":"text","text":" "},{"type":"text","text":"and then returns a boolean value indicating whether an update has happened."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"until"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"wait(for:timeout:until:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:5Atoms15AtomTestContextV4wait3for7timeout5untilSbx_SdSgSb8ProducedQzctYaAA0B0RzlF","modules":[{"name":"Atoms"}]},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"references":{"doc://Atoms/documentation/Atoms/Atom":{"role":"symbol","title":"Atom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"role":"symbol","title":"AtomTestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTestContext"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"url":"\/documentation\/atoms\/atomtestcontext"},"doc://Atoms/documentation/Atoms":{"role":"collection","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","type":"topic","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/AtomTestContext/wait(for:timeout:until:)":{"role":"symbol","title":"wait(for:timeout:until:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"until"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Waits for the given atom until it will be in a certain state within a specified timeout,"},{"type":"text","text":" "},{"type":"text","text":"and then returns a boolean value indicating whether an update has happened."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/wait(for:timeout:until:)","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/atomtestcontext\/wait(for:timeout:until:)"}}}