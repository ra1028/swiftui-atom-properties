{"abstract":[{"type":"text","text":"Waits for the given atom until it will be in a certain state within a specified timeout,"},{"type":"text","text":" "},{"type":"text","text":"and then returns a boolean value indicating whether an update has happened."}],"variants":[{"paths":["\/documentation\/atoms\/atomtestcontext\/wait(for:timeout:until:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"atom"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"timeout"},{"text":" ","kind":"text"},{"text":"duration","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":"? = nil, "},{"text":"until","kind":"externalParam"},{"kind":"text","text":" "},{"text":"predicate","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":" : "},{"text":"Atom","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"atom","content":[{"inlineContent":[{"type":"text","text":"An atom expecting an update to a certain state."}],"type":"paragraph"}]},{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The maximum duration that this function can wait until"},{"text":" ","type":"text"},{"type":"text","text":"the next update. The default timeout interval is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"which indicates no timeout."}]}]},{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate that determines when to stop waiting."}]}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A boolean value indicating whether an update is done."}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"syntax":"swift","type":"codeListing","code":["func testAsyncUpdate() async {","    let context = AtomTestContext()","","    let initialPhase = context.watch(AsyncCalculationAtom().phase)","    XCTAssertEqual(initialPhase, .suspending)","","    let didUpdate = await context.wait(for: AsyncCalculationAtom().phase, until: \\.isSuccess)","    let currentPhase = context.watch(AsyncCalculationAtom().phase)","","    XCTAssertTure(didUpdate)","    XCTAssertEqual(currentPhase, .success(123))","}"]}]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/wait(for:timeout:until:)"},"metadata":{"externalID":"s:5Atoms15AtomTestContextV4wait3for7timeout5untilSbx_SdSgSb8ProducedQzctYaAA0B0RzlF","title":"wait(for:timeout:until:)","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"until"},{"text":": (","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"modules":[{"name":"Atoms"}]},"references":{"doc://Atoms/documentation/Atoms/AtomTestContext":{"type":"topic","url":"\/documentation\/atoms\/atomtestcontext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"kind":"symbol","role":"symbol","title":"AtomTestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomTestContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","navigatorTitle":[{"text":"AtomTestContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom","title":"Atom","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomTestContext/wait(for:timeout:until:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/wait(for:timeout:until:)","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/atomtestcontext\/wait(for:timeout:until:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wait"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"text":"Node","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"until","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Waits for the given atom until it will be in a certain state within a specified timeout,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and then returns a boolean value indicating whether an update has happened."}],"role":"symbol","title":"wait(for:timeout:until:)"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","type":"topic","kind":"symbol","title":"Produced","required":true,"url":"\/documentation\/atoms\/atom\/produced","abstract":[{"text":"The type of value that this atom produces.","type":"text"}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Produced","kind":"identifier"}]}}}