{"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtestcontext\/wait(for:timeout:until:)"]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/wait(for:timeout:until:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"kind":"symbol","metadata":{"externalID":"s:5Atoms15AtomTestContextV4wait3for7timeout5untilSbx_SdSgSb8ProducedQzctYaAA0B0RzlF","title":"wait(for:timeout:until:)","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"until"},{"kind":"text","text":": ("},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"roleHeading":"Instance Method","modules":[{"name":"Atoms"}]},"abstract":[{"text":"Waits for the given atom until it will be in a certain state within a specified timeout,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and then returns a boolean value indicating whether an update has happened."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"for"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"atom"},{"kind":"text","text":": "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"timeout","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"duration","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":"? = nil, "},{"text":"until","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"predicate"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":" : ","kind":"text"},{"text":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An atom expecting an update to a certain state."}]}],"name":"atom"},{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The maximum duration that this function can wait until"},{"text":" ","type":"text"},{"text":"the next update. The default timeout interval is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" ","type":"text"},{"text":"which indicates no timeout.","type":"text"}]}]},{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate that determines when to stop waiting."}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A boolean value indicating whether an update is done."}]}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"codeListing","code":["func testAsyncUpdate() async {","    let context = AtomTestContext()","","    let initialPhase = context.watch(AsyncCalculationAtom().phase)","    XCTAssertEqual(initialPhase, .suspending)","","    let didUpdate = await context.wait(for: AsyncCalculationAtom().phase, until: \\.isSuccess)","    let currentPhase = context.watch(AsyncCalculationAtom().phase)","","    XCTAssertTure(didUpdate)","    XCTAssertEqual(currentPhase, .success(123))","}"],"syntax":"swift"}],"kind":"content"}],"references":{"doc://Atoms/documentation/Atoms/AtomTestContext/wait(for:timeout:until:)":{"type":"topic","title":"wait(for:timeout:until:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/wait(for:timeout:until:)","kind":"symbol","url":"\/documentation\/atoms\/atomtestcontext\/wait(for:timeout:until:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"until","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Waits for the given atom until it will be in a certain state within a specified timeout,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and then returns a boolean value indicating whether an update has happened."}]},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","url":"\/documentation\/atoms\/atom"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"title":"Produced","role":"symbol","abstract":[{"type":"text","text":"The type of value that this atom produces."}],"url":"\/documentation\/atoms\/atom\/produced","kind":"symbol","required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Produced","kind":"identifier"}]},"doc://Atoms/documentation/Atoms":{"kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms","type":"topic","role":"collection","title":"Atoms"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"url":"\/documentation\/atoms\/atomtestcontext","kind":"symbol","title":"AtomTestContext","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","navigatorTitle":[{"text":"AtomTestContext","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomTestContext"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}]}}}