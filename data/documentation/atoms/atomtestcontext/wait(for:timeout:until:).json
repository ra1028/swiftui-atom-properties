{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/wait(for:timeout:until:)"},"metadata":{"symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"Atoms"}],"externalID":"s:5Atoms15AtomTestContextV4wait3for7timeout5untilSbx_SdSgSb8ProducedQzctYaAA0B0RzlF","role":"symbol","title":"wait(for:timeout:until:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"until","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"text":" ","kind":"text"},{"text":"atom","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":" "},{"text":"duration","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"text":"until","kind":"externalParam"},{"kind":"text","text":" "},{"text":"predicate","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"An atom expecting an update to a certain state.","type":"text"}],"type":"paragraph"}],"name":"atom"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The maximum duration that this function can wait until"},{"type":"text","text":" "},{"text":"the next update. The default timeout interval is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"which indicates no timeout."}]}],"name":"duration"},{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"text":"A predicate that determines when to stop waiting.","type":"text"}]}]}]},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A boolean value indicating whether an update is done.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"code":["func testAsyncUpdate() async {","    let context = AtomTestContext()","","    let initialPhase = context.watch(AsyncCalculationAtom().phase)","    XCTAssertEqual(initialPhase, .suspending)","","    let didUpdate = await context.wait(for: AsyncCalculationAtom().phase, until: \\.isSuccess)","    let currentPhase = context.watch(AsyncCalculationAtom().phase)","","    XCTAssertTure(didUpdate)","    XCTAssertEqual(currentPhase, .success(123))","}"],"syntax":"swift","type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtestcontext\/wait(for:timeout:until:)"]}],"abstract":[{"type":"text","text":"Waits for the given atom until it will be in a certain state within a specified timeout,"},{"text":" ","type":"text"},{"text":"and then returns a boolean value indicating whether an update has happened.","type":"text"}],"kind":"symbol","sections":[],"references":{"doc://Atoms/documentation/Atoms/AtomTestContext":{"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomTestContext"}],"type":"topic","title":"AtomTestContext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"url":"\/documentation\/atoms\/atomtestcontext"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","type":"topic","title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom/Produced":{"type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Produced","kind":"identifier"}],"role":"symbol","abstract":[{"text":"The type of value that this atom produces.","type":"text"}],"url":"\/documentation\/atoms\/atom\/produced","required":true,"title":"Produced","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced"},"doc://Atoms/documentation/Atoms":{"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","url":"\/documentation\/atoms","role":"collection","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomTestContext/wait(for:timeout:until:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"wait","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Node","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"until"},{"kind":"text","text":": ("},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/wait(for:timeout:until:)","title":"wait(for:timeout:until:)","abstract":[{"type":"text","text":"Waits for the given atom until it will be in a certain state within a specified timeout,"},{"text":" ","type":"text"},{"text":"and then returns a boolean value indicating whether an update has happened.","type":"text"}],"url":"\/documentation\/atoms\/atomtestcontext\/wait(for:timeout:until:)","role":"symbol","type":"topic"}}}