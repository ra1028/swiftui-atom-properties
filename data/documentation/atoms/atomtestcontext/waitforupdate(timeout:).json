{"variants":[{"paths":["\/documentation\/atoms\/atomtestcontext\/waitforupdate(timeout:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Waits until any of the atoms watched through this context have been updated up to the"},{"text":" ","type":"text"},{"type":"text","text":"specified timeout, and then returns a boolean value indicating whether an update has happened."}],"metadata":{"role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"waitForUpdate"},{"text":"(","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"externalID":"s:5Atoms15AtomTestContextV13waitForUpdate7timeoutSbSdSg_tYaF","title":"waitForUpdate(timeout:)","modules":[{"name":"Atoms"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"waitForUpdate","kind":"identifier"},{"kind":"text","text":"("},{"text":"timeout","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"duration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"? = nil) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"duration","content":[{"inlineContent":[{"type":"text","text":"The maximum duration that this function can wait until"},{"type":"text","text":" "},{"type":"text","text":"the next update. The default timeout interval is "},{"type":"codeVoice","code":"nil"},{"text":" ","type":"text"},{"text":"which indicates no timeout.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"A boolean value indicating whether an update has happened.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"codeListing","code":["func testAsyncUpdate() async {","    let context = AtomTestContext()","","    let initialPhase = context.watch(AsyncCalculationAtom().phase)","    XCTAssertEqual(initialPhase, .suspending)","","    let didUpdate = await context.waitForUpdate()","    let currentPhase = context.watch(AsyncCalculationAtom().phase)","","    XCTAssertTure(didUpdate)","    XCTAssertEqual(currentPhase, .success(123))","}"],"syntax":"swift"}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/waitForUpdate(timeout:)","interfaceLanguage":"swift"},"references":{"doc://Atoms/documentation/Atoms/AtomTestContext":{"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomTestContext"}],"title":"AtomTestContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","url":"\/documentation\/atoms\/atomtestcontext","kind":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms":{"role":"collection","type":"topic","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"kind":"symbol","title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/AtomTestContext/waitForUpdate(timeout:)":{"abstract":[{"type":"text","text":"Waits until any of the atoms watched through this context have been updated up to the"},{"type":"text","text":" "},{"type":"text","text":"specified timeout, and then returns a boolean value indicating whether an update has happened."}],"title":"waitForUpdate(timeout:)","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/atomtestcontext\/waitforupdate(timeout:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/waitForUpdate(timeout:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"waitForUpdate"},{"text":"(","kind":"text"},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol"}}}