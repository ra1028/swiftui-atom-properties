{"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/waitForUpdate(timeout:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"waitForUpdate","kind":"identifier"},{"kind":"text","text":"("},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"duration"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"kind":"text","text":"? = nil) "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The maximum duration that this function can wait until"},{"type":"text","text":" "},{"type":"text","text":"the next update. The default timeout interval is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"which indicates no timeout."}]}]}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A boolean value indicating whether an update has happened."}]}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"syntax":"swift","code":["func testAsyncUpdate() async {","    let context = AtomTestContext()","","    let initialPhase = context.watch(AsyncCalculationAtom().phase)","    XCTAssertEqual(initialPhase, .suspending)","","    let didUpdate = await context.waitForUpdate()","    let currentPhase = context.watch(AsyncCalculationAtom().phase)","","    XCTAssertTure(didUpdate)","    XCTAssertEqual(currentPhase, .success(123))","}"],"type":"codeListing"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Waits until any of the atoms watched through this context have been updated up to the"},{"type":"text","text":" "},{"text":"specified timeout, and then returns a boolean value indicating whether an update has happened.","type":"text"}],"metadata":{"modules":[{"name":"Atoms"}],"externalID":"s:5Atoms15AtomTestContextV13waitForUpdate7timeoutSbSdSg_tYaF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"waitForUpdate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"roleHeading":"Instance Method","role":"symbol","title":"waitForUpdate(timeout:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtestcontext\/waitforupdate(timeout:)"]}],"references":{"doc://Atoms/documentation/Atoms/AtomTestContext":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomTestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/atomtestcontext","role":"symbol","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","title":"AtomTestContext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}]},"doc://Atoms/documentation/Atoms":{"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","role":"collection","url":"\/documentation\/atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"type":"topic"},"doc://Atoms/documentation/Atoms/AtomTestContext/waitForUpdate(timeout:)":{"abstract":[{"text":"Waits until any of the atoms watched through this context have been updated up to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified timeout, and then returns a boolean value indicating whether an update has happened."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/waitForUpdate(timeout:)","type":"topic","url":"\/documentation\/atoms\/atomtestcontext\/waitforupdate(timeout:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"waitForUpdate","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"waitForUpdate(timeout:)"}}}