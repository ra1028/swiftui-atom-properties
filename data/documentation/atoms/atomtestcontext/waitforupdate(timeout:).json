{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"waitForUpdate"},{"kind":"text","text":"("},{"text":"timeout","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"duration","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"? = nil) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"duration","content":[{"inlineContent":[{"type":"text","text":"The maximum duration that this function can wait until"},{"type":"text","text":" "},{"type":"text","text":"the next update. The default timeout interval is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"which indicates no timeout."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"text":"A boolean value indicating whether an update has happened.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"syntax":"swift","code":["func testAsyncUpdate() async {","    let context = AtomTestContext()","","    let initialPhase = context.watch(AsyncCalculationAtom().phase)","    XCTAssertEqual(initialPhase, .suspending)","","    let didUpdate = await context.waitForUpdate()","    let currentPhase = context.watch(AsyncCalculationAtom().phase)","","    XCTAssertTure(didUpdate)","    XCTAssertEqual(currentPhase, .success(123))","}"],"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/waitForUpdate(timeout:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"variants":[{"paths":["\/documentation\/atoms\/atomtestcontext\/waitforupdate(timeout:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"modules":[{"name":"Atoms"}],"title":"waitForUpdate(timeout:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"waitForUpdate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"externalID":"s:5Atoms15AtomTestContextV13waitForUpdate7timeoutSbSdSg_tYaF","roleHeading":"Instance Method","role":"symbol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Waits until any of the atoms watched through this context have been updated up to the","type":"text"},{"type":"text","text":" "},{"text":"specified timeout, and then returns a boolean value indicating whether an update has happened.","type":"text"}],"references":{"doc://Atoms/documentation/Atoms/AtomTestContext":{"type":"topic","url":"\/documentation\/atoms\/atomtestcontext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"kind":"symbol","role":"symbol","title":"AtomTestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomTestContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","navigatorTitle":[{"text":"AtomTestContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomTestContext/waitForUpdate(timeout:)":{"url":"\/documentation\/atoms\/atomtestcontext\/waitforupdate(timeout:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"waitForUpdate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"waitForUpdate(timeout:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/waitForUpdate(timeout:)","abstract":[{"type":"text","text":"Waits until any of the atoms watched through this context have been updated up to the"},{"type":"text","text":" "},{"text":"specified timeout, and then returns a boolean value indicating whether an update has happened.","type":"text"}],"role":"symbol"}}}