{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"metadata":{"modules":[{"name":"Atoms"}],"title":"waitForUpdate(timeout:)","role":"symbol","externalID":"s:5Atoms15AtomTestContextV13waitForUpdate7timeoutSbSdSg_tYaF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"waitForUpdate","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"symbolKind":"method","roleHeading":"Instance Method"},"abstract":[{"text":"Waits until any of the atoms watched through this context have been updated up to the","type":"text"},{"text":" ","type":"text"},{"text":"specified timeout, and then returns a boolean value indicating whether an update has happened.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtestcontext\/waitforupdate(timeout:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/waitForUpdate(timeout:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"text":"@","kind":"attribute"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"waitForUpdate"},{"kind":"text","text":"("},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":" "},{"text":"duration","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"? = nil) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The maximum duration that this function can wait until"},{"text":" ","type":"text"},{"type":"text","text":"the next update. The default timeout interval is "},{"code":"nil","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"which indicates no timeout."}]}],"name":"duration"}]},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"A boolean value indicating whether an update has happened.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"codeListing","syntax":"swift","code":["func testAsyncUpdate() async {","    let context = AtomTestContext()","","    let initialPhase = context.watch(AsyncCalculationAtom().phase)","    XCTAssertEqual(initialPhase, .suspending)","","    let didUpdate = await context.waitForUpdate()","    let currentPhase = context.watch(AsyncCalculationAtom().phase)","","    XCTAssertTure(didUpdate)","    XCTAssertEqual(currentPhase, .success(123))","}"]}]}],"references":{"doc://Atoms/documentation/Atoms/AtomTestContext":{"title":"AtomTestContext","role":"symbol","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomTestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/atomtestcontext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}]},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/AtomTestContext/waitForUpdate(timeout:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"waitForUpdate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"waitForUpdate(timeout:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/waitForUpdate(timeout:)","url":"\/documentation\/atoms\/atomtestcontext\/waitforupdate(timeout:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Waits until any of the atoms watched through this context have been updated up to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified timeout, and then returns a boolean value indicating whether an update has happened."}]}}}