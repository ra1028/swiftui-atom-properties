{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"waitForUpdate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":" "},{"kind":"internalParam","text":"duration"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":"? = nil) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The maximum duration that this function can wait until"},{"text":" ","type":"text"},{"type":"text","text":"the next update. The default timeout interval is "},{"code":"nil","type":"codeVoice"},{"text":" ","type":"text"},{"text":"which indicates no timeout.","type":"text"}]}],"name":"duration"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A boolean value indicating whether an update has happened.","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"syntax":"swift","code":["func testAsyncUpdate() async {","    let context = AtomTestContext()","","    let initialPhase = context.watch(AsyncCalculationAtom().phase)","    XCTAssertEqual(initialPhase, .suspending)","","    let didUpdate = await context.waitForUpdate()","    let currentPhase = context.watch(AsyncCalculationAtom().phase)","","    XCTAssertTure(didUpdate)","    XCTAssertEqual(currentPhase, .success(123))","}"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/waitForUpdate(timeout:)"},"metadata":{"title":"waitForUpdate(timeout:)","symbolKind":"method","role":"symbol","externalID":"s:5Atoms15AtomTestContextV13waitForUpdate7timeoutSbSdSg_tYaF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"waitForUpdate"},{"text":"(","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"modules":[{"name":"Atoms"}],"roleHeading":"Instance Method"},"variants":[{"paths":["\/documentation\/atoms\/atomtestcontext\/waitforupdate(timeout:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Waits until any of the atoms watched through this context have been updated up to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified timeout, and then returns a boolean value indicating whether an update has happened."}],"references":{"doc://Atoms/documentation/Atoms/AtomTestContext":{"role":"symbol","title":"AtomTestContext","url":"\/documentation\/atoms\/atomtestcontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTestContext"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"AtomTestContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms":{"url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"type":"topic","kind":"symbol","title":"Atoms","role":"collection"},"doc://Atoms/documentation/Atoms/AtomTestContext/waitForUpdate(timeout:)":{"url":"\/documentation\/atoms\/atomtestcontext\/waitforupdate(timeout:)","title":"waitForUpdate(timeout:)","abstract":[{"type":"text","text":"Waits until any of the atoms watched through this context have been updated up to the"},{"text":" ","type":"text"},{"text":"specified timeout, and then returns a boolean value indicating whether an update has happened.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"waitForUpdate"},{"kind":"text","text":"("},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/waitForUpdate(timeout:)"}}}