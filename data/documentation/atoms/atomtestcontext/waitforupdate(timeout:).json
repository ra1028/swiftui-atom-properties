{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"waitForUpdate","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":" "},{"text":"duration","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":"? = nil) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The maximum duration that this function can wait until"},{"type":"text","text":" "},{"type":"text","text":"the next update. The default timeout interval is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"which indicates no timeout."}]}],"name":"duration"}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"A boolean value indicating whether an update has happened."}],"type":"paragraph"}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"code":["func testAsyncUpdate() async {","    let context = AtomTestContext()","","    let initialPhase = context.watch(AsyncCalculationAtom().phase)","    XCTAssertEqual(initialPhase, .suspending)","","    let didUpdate = await context.waitForUpdate()","    let currentPhase = context.watch(AsyncCalculationAtom().phase)","","    XCTAssertTure(didUpdate)","    XCTAssertEqual(currentPhase, .success(123))","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"variants":[{"paths":["\/documentation\/atoms\/atomtestcontext\/waitforupdate(timeout:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Instance Method","role":"symbol","externalID":"s:5Atoms15AtomTestContextV13waitForUpdate7timeoutSbSdSg_tYaF","title":"waitForUpdate(timeout:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"waitForUpdate","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"modules":[{"name":"Atoms"}],"symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/waitForUpdate(timeout:)"},"kind":"symbol","abstract":[{"text":"Waits until any of the atoms watched through this context have been updated up to the","type":"text"},{"type":"text","text":" "},{"text":"specified timeout, and then returns a boolean value indicating whether an update has happened.","type":"text"}],"references":{"doc://Atoms/documentation/Atoms":{"abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"kind":"symbol","url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","type":"topic","title":"Atoms"},"doc://Atoms/documentation/Atoms/AtomTestContext/waitForUpdate(timeout:)":{"title":"waitForUpdate(timeout:)","abstract":[{"type":"text","text":"Waits until any of the atoms watched through this context have been updated up to the"},{"text":" ","type":"text"},{"type":"text","text":"specified timeout, and then returns a boolean value indicating whether an update has happened."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"waitForUpdate","kind":"identifier"},{"kind":"text","text":"("},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/atoms\/atomtestcontext\/waitforupdate(timeout:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/waitForUpdate(timeout:)","role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","title":"AtomTestContext","url":"\/documentation\/atoms\/atomtestcontext","abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms in testing.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomTestContext","kind":"identifier"}]}}}