{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtestcontext\/refresh(_:)-2ana6"]}],"sections":[],"abstract":[{"text":"Refreshes and then returns the value associated with the given refreshable atom.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/refresh(_:)-2ana6"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"attribute","text":"@"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"refresh"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"atom","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Produced","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:5Atoms9AsyncAtomP","text":"AsyncAtom","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An atom to refresh."}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"The value after the refreshing associated with the given atom is completed.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method accepts only asynchronous atoms such as types conforming to:"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","isActive":true},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"},{"type":"text","text":", "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","type":"reference"},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","isActive":true},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"It refreshes the value for the given atom and then returns, so the caller can await until"},{"type":"text","text":" "},{"text":"the atom completes the update.","type":"text"},{"text":" ","type":"text"},{"text":"Note that it can be used only in a context that supports concurrency.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let context = AtomTestContext()","let image = await context.refresh(AsyncImageDataAtom()).value","print(image) \/\/ Prints the data obtained through the network."]}]}],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"refresh"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Node"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"}],"externalID":"s:5Atoms15AtomTestContextV7refreshy8ProducedQzxYaAA05AsyncB0RzlF","modules":[{"name":"Atoms"}],"title":"refresh(_:)","role":"symbol"},"kind":"symbol","references":{"doc://Atoms/documentation/Atoms/AtomTestContext":{"url":"\/documentation\/atoms\/atomtestcontext","kind":"symbol","title":"AtomTestContext","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","navigatorTitle":[{"text":"AtomTestContext","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomTestContext"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}]},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"url":"\/documentation\/atoms\/throwingtaskatom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}],"kind":"symbol","type":"topic","title":"ThrowingTaskAtom","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","role":"symbol","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous, throwing function.","type":"text"}]},"doc://Atoms/documentation/Atoms/TaskAtom":{"role":"symbol","type":"topic","url":"\/documentation\/atoms\/taskatom","kind":"symbol","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"title":"TaskAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskAtom"}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"abstract":[{"text":"An atom type that provides asynchronous, sequential elements of the given ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}],"title":"AsyncSequenceAtom"},"doc://Atoms/documentation/Atoms/AtomTestContext/refresh(_:)-2ana6":{"abstract":[{"text":"Refreshes and then returns the value associated with the given refreshable atom.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/refresh(_:)-2ana6","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"refresh","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"}],"url":"\/documentation\/atoms\/atomtestcontext\/refresh(_:)-2ana6","title":"refresh(_:)","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"title":"AsyncAtom","role":"symbol","navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"url":"\/documentation\/atoms\/asyncatom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms":{"kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms","type":"topic","role":"collection","title":"Atoms"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"type":"topic","url":"\/documentation\/atoms\/asyncphase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"asynchronous process has not yet been determined."}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"title":"Produced","role":"symbol","abstract":[{"type":"text","text":"The type of value that this atom produces."}],"url":"\/documentation\/atoms\/atom\/produced","kind":"symbol","required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Produced","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"role":"symbol","type":"topic","url":"\/documentation\/atoms\/publisheratom","kind":"symbol","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"title":"PublisherAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}]}}}