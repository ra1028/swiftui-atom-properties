{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtestcontext\/lookup(_:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Returns the already cached value associated with a given atom without side effects.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookup"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"atom","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") -> "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":"? "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP","text":"Atom","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"text":"An atom to lookup.","type":"text"}]}]}]},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The already cached value associated with the given atom.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method returns the value only when it is already cached, otherwise, it returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It has no side effects such as the creation of new values or watching atoms."}]},{"code":["let context = AtomTestContext()","if let text = context.lookup(TextAtom()) {","    print(text)  \/\/ Prints the cached value associated with `TextAtom`.","}"],"type":"codeListing","syntax":"swift"}]}],"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/lookup(_:)"},"metadata":{"externalID":"s:5Atoms15AtomTestContextV6lookupy8ProducedQzSgxAA0B0RzlF","title":"lookup(_:)","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"Atoms"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookup"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Node","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":"?","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"references":{"doc://Atoms/documentation/Atoms/Atom/Produced":{"title":"Produced","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Produced"}],"required":true,"abstract":[{"type":"text","text":"The type of value that this atom produces."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","url":"\/documentation\/atoms\/atom\/produced","role":"symbol"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"},"doc://Atoms/documentation/Atoms/AtomTestContext/lookup(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lookup"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns the already cached value associated with a given atom without side effects.","type":"text"}],"url":"\/documentation\/atoms\/atomtestcontext\/lookup(_:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/lookup(_:)","type":"topic","title":"lookup(_:)"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"type":"topic","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"role":"symbol","url":"\/documentation\/atoms\/atomtestcontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomTestContext","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"title":"AtomTestContext","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"title":"Atom"}}}