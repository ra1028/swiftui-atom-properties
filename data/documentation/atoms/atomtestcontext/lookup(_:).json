{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/lookup(_:)"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lookup"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","text":"Produced"},{"text":"?","kind":"text"}],"role":"symbol","title":"lookup(_:)","modules":[{"name":"Atoms"}],"externalID":"s:5Atoms15AtomTestContextV6lookupy8ProducedQzSgxAA0B0RzlF","roleHeading":"Instance Method","symbolKind":"method"},"kind":"symbol","variants":[{"paths":["\/documentation\/atoms\/atomtestcontext\/lookup(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lookup","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"atom","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") -> "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","kind":"typeIdentifier"},{"text":"? ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Node","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","text":"Atom"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An atom to lookup.","type":"text"}]}],"name":"atom"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The already cached value associated with the given atom."}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method returns the value only when it is already cached, otherwise, it returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It has no side effects such as the creation of new values or watching atoms."}]},{"type":"codeListing","code":["let context = AtomTestContext()","if let text = context.lookup(TextAtom()) {","    print(text)  \/\/ Prints the cached value associated with `TextAtom`.","}"],"syntax":"swift"}]}],"sections":[],"abstract":[{"text":"Returns the already cached value associated with a given atom without side effects.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"references":{"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom","title":"Atom","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/AtomTestContext/lookup(_:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/lookup(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/atomtestcontext\/lookup(_:)","title":"lookup(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lookup"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":") -> ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the already cached value associated with a given atom without side effects."}]},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","type":"topic","kind":"symbol","title":"Produced","required":true,"url":"\/documentation\/atoms\/atom\/produced","abstract":[{"text":"The type of value that this atom produces.","type":"text"}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Produced","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomTestContext":{"type":"topic","url":"\/documentation\/atoms\/atomtestcontext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"kind":"symbol","role":"symbol","title":"AtomTestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomTestContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","navigatorTitle":[{"text":"AtomTestContext","kind":"identifier"}]}}}