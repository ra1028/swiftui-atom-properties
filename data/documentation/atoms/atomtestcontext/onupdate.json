{"abstract":[{"text":"A callback to perform when any of the atoms watched by this context is updated.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtestcontext\/onupdate"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onUpdate","kind":"identifier"},{"kind":"text","text":": (() -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"nonmutating"},{"kind":"text","text":" "},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"}],"metadata":{"symbolKind":"property","externalID":"s:5Atoms15AtomTestContextV8onUpdateyycSgvp","roleHeading":"Instance Property","title":"onUpdate","role":"symbol","modules":[{"name":"Atoms"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onUpdate","kind":"identifier"},{"text":": (() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?","kind":"text"}]},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/onUpdate","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://Atoms/documentation/Atoms/AtomTestContext/onUpdate":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"onUpdate","kind":"identifier"},{"kind":"text","text":": (() -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?"}],"abstract":[{"text":"A callback to perform when any of the atoms watched by this context is updated.","type":"text"}],"title":"onUpdate","kind":"symbol","url":"\/documentation\/atoms\/atomtestcontext\/onupdate","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/onUpdate","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"type":"topic","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"role":"symbol","url":"\/documentation\/atoms\/atomtestcontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomTestContext","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"title":"AtomTestContext","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"}}}