{"kind":"symbol","metadata":{"symbolKind":"method","modules":[{"name":"Atoms"}],"externalID":"s:5Atoms15AtomTestContextV7refreshy8ProducedQzxYaAA11RefreshableRzlF","platforms":[],"title":"refresh(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"refresh","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","text":"Produced"}],"role":"symbol","roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"refresh"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"atom","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","text":"Produced","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","text":"Refreshable","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms11RefreshableP"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"An atom to refresh.","type":"text"}],"type":"paragraph"}],"name":"atom"}]},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value after the refreshing associated with the given atom is completed."}]}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This method only accepts atoms that conform to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","type":"reference","isActive":true},{"type":"text","text":" protocol."},{"text":" ","type":"text"},{"text":"It refreshes the value with the custom refresh behavior, so the caller can await until","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the atom completes the update."},{"type":"text","text":" "},{"text":"Note that it can be used only in a context that supports concurrency.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let context = AtomTestContext()","let value = await context.refresh(CustomRefreshableAtom())","print(value)"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtestcontext\/refresh(_:)-1gi2e"]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/refresh(_:)-1gi2e","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"abstract":[{"text":"Refreshes and then returns the value associated with the given refreshable atom.","type":"text"}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"`Refreshable` is deprecated. Use a custom refresh function or other alternatives instead."}],"type":"paragraph"}],"references":{"doc://Atoms/documentation/Atoms/Atom/Produced":{"title":"Produced","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Produced"}],"required":true,"abstract":[{"type":"text","text":"The type of value that this atom produces."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","url":"\/documentation\/atoms\/atom\/produced","role":"symbol"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"},"doc://Atoms/documentation/Atoms/AtomTestContext/refresh(_:)-1gi2e":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/refresh(_:)-1gi2e","abstract":[{"text":"Refreshes and then returns the value associated with the given refreshable atom.","type":"text"}],"kind":"symbol","url":"\/documentation\/atoms\/atomtestcontext\/refresh(_:)-1gi2e","type":"topic","deprecated":true,"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"refresh"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"}],"title":"refresh(_:)"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"type":"topic","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"role":"symbol","url":"\/documentation\/atoms\/atomtestcontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomTestContext","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"title":"AtomTestContext","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"},"doc://Atoms/documentation/Atoms/Refreshable":{"type":"topic","url":"\/documentation\/atoms\/refreshable","role":"symbol","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","title":"Refreshable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Refreshable"}],"kind":"symbol","navigatorTitle":[{"text":"Refreshable","kind":"identifier"}],"deprecated":true}}}