{"metadata":{"role":"symbol","title":"reset(_:)","modules":[{"name":"Atoms"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"(some ","kind":"text"},{"text":"Atom","preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:5Atoms15AtomTestContextV5resetyyxAA0B0RzlF"},"abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtestcontext\/reset(_:)-2hphl"]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/reset(_:)-2hphl","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"atom","kind":"internalParam"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"},{"text":")","kind":"text"}]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"An atom to reset.","type":"text"}],"type":"paragraph"}],"name":"atom"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This method resets the value for the given atom and then notifies downstream","type":"text"},{"type":"text","text":" "},{"type":"text","text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly"},{"text":" ","type":"text"},{"text":"generated value will be produced.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let context = AtomTestContext()","print(context.watch(TextAtom())) \/\/ Prints \"Text\"","context[TextAtom()] = \"New text\"","print(context.read(TextAtom())) \/\/ Prints \"New text\"","context.reset(TextAtom())","print(context.read(TextAtom())) \/\/ Prints \"Text\""]}],"kind":"content"}],"sections":[],"kind":"symbol","references":{"doc://Atoms/documentation/Atoms/AtomTestContext/reset(_:)-2hphl":{"abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/reset(_:)-2hphl","title":"reset(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"(some ","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP","text":"Atom","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/atoms\/atomtestcontext\/reset(_:)-2hphl","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","title":"AtomTestContext","url":"\/documentation\/atoms\/atomtestcontext","abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms in testing.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomTestContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom":{"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Atom","kind":"identifier"}],"url":"\/documentation\/atoms\/atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","navigatorTitle":[{"text":"Atom","kind":"identifier"}],"role":"symbol","type":"topic","title":"Atom"},"doc://Atoms/documentation/Atoms":{"abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"kind":"symbol","url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","type":"topic","title":"Atoms"}}}