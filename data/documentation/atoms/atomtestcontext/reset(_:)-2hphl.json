{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"metadata":{"externalID":"s:5Atoms15AtomTestContextV5resetyyxAA0B0RzlF","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","title":"reset(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"(some ","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP","text":"Atom","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"Atoms"}]},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/reset(_:)-2hphl","interfaceLanguage":"swift"},"abstract":[{"text":"Resets the value associated with the given atom, and then notifies.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtestcontext\/reset(_:)-2hphl"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"atom"},{"kind":"text","text":": some "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"typeIdentifier","text":"Atom","preciseIdentifier":"s:5Atoms4AtomP"},{"kind":"text","text":")"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"text":"An atom to reset.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method resets the value for the given atom and then notifies downstream"},{"text":" ","type":"text"},{"text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"generated value will be produced."}]},{"code":["let context = AtomTestContext()","print(context.watch(TextAtom())) \/\/ Prints \"Text\"","context[TextAtom()] = \"New text\"","print(context.read(TextAtom())) \/\/ Prints \"New text\"","context.reset(TextAtom())","print(context.read(TextAtom())) \/\/ Prints \"Text\""],"syntax":"swift","type":"codeListing"}]}],"sections":[],"kind":"symbol","references":{"doc://Atoms/documentation/Atoms/AtomTestContext/reset(_:)-2hphl":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"kind":"text","text":"(some "},{"preciseIdentifier":"s:5Atoms4AtomP","text":"Atom","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/atoms\/atomtestcontext\/reset(_:)-2hphl","title":"reset(_:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/reset(_:)-2hphl","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","title":"AtomTestContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomTestContext","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"url":"\/documentation\/atoms\/atomtestcontext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/Atom":{"type":"topic","url":"\/documentation\/atoms\/atom","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"title":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"}}}