{"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"abstract":[{"type":"text","text":"Unwatches the given atom and do not receive any more updates of it."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtestcontext\/unwatch(_:)"]}],"metadata":{"roleHeading":"Instance Method","externalID":"s:5Atoms15AtomTestContextV7unwatchyyxAA0B0RzlF","modules":[{"name":"Atoms"}],"symbolKind":"method","role":"symbol","title":"unwatch(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"unwatch","kind":"identifier"},{"kind":"text","text":"(some "},{"text":"Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP"},{"text":")","kind":"text"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unwatch"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"atom"},{"kind":"text","text":": some "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier","text":"Atom"},{"text":")","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An atom to unwatch."}],"type":"paragraph"}],"name":"atom"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"It simulates cases where other atoms or views no longer watches to the atom."}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/unwatch(_:)"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://Atoms/documentation/Atoms/AtomTestContext/unwatch(_:)":{"title":"unwatch(_:)","url":"\/documentation\/atoms\/atomtestcontext\/unwatch(_:)","kind":"symbol","abstract":[{"type":"text","text":"Unwatches the given atom and do not receive any more updates of it."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/unwatch(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"unwatch","kind":"identifier"},{"kind":"text","text":"(some "},{"kind":"typeIdentifier","text":"Atom","preciseIdentifier":"s:5Atoms4AtomP"},{"kind":"text","text":")"}],"type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/Atom":{"type":"topic","url":"\/documentation\/atoms\/atom","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"title":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","title":"AtomTestContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomTestContext","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"url":"\/documentation\/atoms\/atomtestcontext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"type":"topic","role":"symbol"}}}