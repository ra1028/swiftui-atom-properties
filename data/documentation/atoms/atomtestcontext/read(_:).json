{"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"Instance Method","externalID":"s:5Atoms15AtomTestContextV4ready8ProducedQzxAA0B0RzlF","modules":[{"name":"Atoms"}],"symbolKind":"method","title":"read(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"read","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"read","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"atom","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"text":") -> ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","text":"Produced"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","text":"Atom","preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An atom to read."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The value associated with the given atom."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method returns a value for the given atom. Accessing the atom value with this method","type":"text"},{"type":"text","text":" "},{"text":"does not initiate watching the atom, so if none of the other atoms or views are watching,","type":"text"},{"text":" ","type":"text"},{"text":"the value will not be cached.","type":"text"}]},{"code":["let context = AtomTestContext()","print(context.read(TextAtom()))  \/\/ Prints the current value associated with `TextAtom`."],"type":"codeListing","syntax":"swift"}]}],"variants":[{"paths":["\/documentation\/atoms\/atomtestcontext\/read(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/read(_:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Accesses the value associated with the given atom without watching it."}],"references":{"doc://Atoms/documentation/Atoms/AtomTestContext":{"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomTestContext"}],"title":"AtomTestContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","url":"\/documentation\/atoms\/atomtestcontext","kind":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/AtomTestContext/read(_:)":{"url":"\/documentation\/atoms\/atomtestcontext\/read(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","text":"Produced"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/read(_:)","kind":"symbol","type":"topic","title":"read(_:)","abstract":[{"text":"Accesses the value associated with the given atom without watching it.","type":"text"}]},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms":{"role":"collection","type":"topic","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"kind":"symbol","title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"title":"Produced","url":"\/documentation\/atoms\/atom\/produced","abstract":[{"type":"text","text":"The type of value that this atom produces."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","type":"topic","required":true,"role":"symbol","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Produced","kind":"identifier"}]}}}