{"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"abstract":[{"type":"text","text":"Calls arbitrary reset function of the given atom."}],"variants":[{"paths":["\/documentation\/atoms\/atomtestcontext\/reset(_:)-4qvoc"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:5Atoms15AtomTestContextV5resetyyxAA10ResettableRzlF","title":"reset(_:)","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"kind":"text","text":"(some "},{"preciseIdentifier":"s:5Atoms10ResettableP","text":"Resettable","kind":"typeIdentifier"},{"kind":"text","text":")"}],"modules":[{"name":"Atoms"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"atom"},{"kind":"text","text":": some "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms10ResettableP","text":"Resettable"},{"text":")","kind":"text"}]}]},{"parameters":[{"name":"atom","content":[{"inlineContent":[{"type":"text","text":"An atom to reset."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method only accepts atoms that conform to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable"},{"type":"text","text":" protocol."},{"type":"text","text":" "},{"type":"text","text":"Calls custom reset function of the given atom. Hence, it does not generate any new cache value or notify subscribers."}]},{"syntax":"swift","code":["let context = ...","print(context.watch(ResettableTextAtom()) \/\/ Prints \"Text\"","context[ResettableTextAtom()] = \"New text\"","print(context.read(ResettableTextAtom())) \/\/ Prints \"New text\"","context.reset(ResettableTextAtom()) \/\/ Calls the custom reset function","print(context.read(ResettableTextAtom())) \/\/ Prints \"New text\""],"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/reset(_:)-4qvoc","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","references":{"doc://Atoms/documentation/Atoms/AtomTestContext/reset(_:)-4qvoc":{"title":"reset(_:)","url":"\/documentation\/atoms\/atomtestcontext\/reset(_:)-4qvoc","kind":"symbol","abstract":[{"type":"text","text":"Calls arbitrary reset function of the given atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/reset(_:)-4qvoc","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"text":"(some ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms10ResettableP","text":"Resettable"},{"text":")","kind":"text"}],"type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/Resettable":{"role":"symbol","navigatorTitle":[{"text":"Resettable","kind":"identifier"}],"url":"\/documentation\/atoms\/resettable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Resettable","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","type":"topic","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom reset behavior."}],"title":"Resettable"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","title":"AtomTestContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomTestContext","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"url":"\/documentation\/atoms\/atomtestcontext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms"}}}