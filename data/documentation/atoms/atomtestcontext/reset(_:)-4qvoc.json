{"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"text":"Node","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","externalID":"s:5Atoms15AtomTestContextV5resetyyxAA10ResettableRzlF","title":"reset(_:)","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Atoms"}]},"abstract":[{"type":"text","text":"Calls arbitrary reset function of the given atom."}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"atom"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Resettable","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","preciseIdentifier":"s:5Atoms10ResettableP"}]}]},{"parameters":[{"name":"atom","content":[{"inlineContent":[{"text":"An atom to reset.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method only accepts atoms that conform to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable"},{"text":" protocol.","type":"text"},{"type":"text","text":" "},{"text":"Calls custom reset function of the given atom. Hence, it does not generate any new cache value or notify subscribers.","type":"text"}]},{"code":["let context = ...","print(context.watch(ResettableTextAtom()) \/\/ Prints \"Text\"","context[ResettableTextAtom()] = \"New text\"","print(context.read(ResettableTextAtom())) \/\/ Prints \"New text\"","context.reset(ResettableTextAtom()) \/\/ Calls the custom reset function","print(context.read(ResettableTextAtom())) \/\/ Prints \"New text\""],"syntax":"swift","type":"codeListing"}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/reset(_:)-4qvoc","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtestcontext\/reset(_:)-4qvoc"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Atoms/documentation/Atoms":{"role":"collection","url":"\/documentation\/atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/Resettable":{"role":"symbol","url":"\/documentation\/atoms\/resettable","kind":"symbol","title":"Resettable","type":"topic","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom reset behavior."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Resettable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Resettable"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable"},"doc://Atoms/documentation/Atoms/AtomTestContext/reset(_:)-4qvoc":{"type":"topic","url":"\/documentation\/atoms\/atomtestcontext\/reset(_:)-4qvoc","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext\/reset(_:)-4qvoc","abstract":[{"text":"Calls arbitrary reset function of the given atom.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"text":"Node","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"reset(_:)","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomTestContext","kind":"identifier"}],"url":"\/documentation\/atoms\/atomtestcontext","navigatorTitle":[{"text":"AtomTestContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","kind":"symbol","title":"AtomTestContext"}}}