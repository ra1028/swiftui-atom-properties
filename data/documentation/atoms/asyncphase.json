{"sections":[],"abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"seeAlsoSections":[{"anchor":"Values","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"],"generated":true,"title":"Values"}],"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/failure(_:)","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/success(_:)","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/suspending"],"anchor":"Enumeration-Cases","generated":true,"title":"Enumeration Cases"},{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/init(_:)","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/init(catching:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/error","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/isFailure","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/isSuccess","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/isSuspending","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/value"],"generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/flatMap(_:)","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/flatMapError(_:)","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/map(_:)","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/mapError(_:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/asyncphase"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/Atoms\/s8CopyableP","doc:\/\/Atoms\/SQ","doc:\/\/Atoms\/SH","doc:\/\/Atoms\/s8SendableP"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"},{"kind":"text","text":"<"},{"text":"Success","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Failure"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"symbolKind":"enum","modules":[{"name":"Atoms"}],"externalID":"s:5Atoms10AsyncPhaseO","roleHeading":"Enumeration","title":"AsyncPhase","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AsyncPhase","kind":"identifier"}],"role":"symbol"},"references":{"doc://Atoms/documentation/Atoms/AsyncPhase/error":{"abstract":[{"text":"Returns the error value if ","type":"text"},{"type":"codeVoice","code":"self"},{"type":"text","text":" is "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/failure(_:)","type":"reference"},{"type":"text","text":", otherwise returns "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/error","title":"error","url":"\/documentation\/atoms\/asyncphase\/error","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"error"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":"?"}]},"doc://Atoms/documentation/Atoms/AsyncPhase/map(_:)":{"title":"map(_:)","role":"symbol","abstract":[{"type":"text","text":"Returns a new phase, mapping any success value using the given transformation."}],"type":"topic","kind":"symbol","url":"\/documentation\/atoms\/asyncphase\/map(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":") -> "},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncPhase","preciseIdentifier":"s:5Atoms10AsyncPhaseO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"NewSuccess"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/map(_:)"},"doc://Atoms/SH":{"identifier":"doc:\/\/Atoms\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://Atoms/SQ":{"identifier":"doc:\/\/Atoms\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://Atoms/documentation/Atoms/AsyncPhase/suspending":{"abstract":[{"type":"text","text":"A suspending phase in which the result has not yet been determined."}],"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"suspending"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/suspending","url":"\/documentation\/atoms\/asyncphase\/suspending","title":"AsyncPhase.suspending","role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhase/isSuspending":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isSuspending","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isSuspending","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/isSuspending","type":"topic","abstract":[{"type":"text","text":"A boolean value indicating whether "},{"type":"codeVoice","code":"self"},{"text":" is ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/suspending","type":"reference","isActive":true},{"type":"text","text":"."}],"url":"\/documentation\/atoms\/asyncphase\/issuspending","kind":"symbol"},"doc://Atoms/documentation/Atoms/DefaultScopeID":{"url":"\/documentation\/atoms\/defaultscopeid","kind":"symbol","role":"symbol","abstract":[{"text":"A default scope ID to find a matching scope inbetween scoped atoms and ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DefaultScopeID","kind":"identifier"}],"title":"DefaultScopeID","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DefaultScopeID"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"},"doc://Atoms/documentation/Atoms/AsyncPhase/failure(_:)":{"url":"\/documentation\/atoms\/asyncphase\/failure(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"failure"},{"text":"(","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"A failure, storing a "},{"type":"codeVoice","code":"Failure"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/failure(_:)","kind":"symbol","title":"AsyncPhase.failure(_:)","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}]},"doc://Atoms/documentation/Atoms/AsyncPhase/mapError(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapError"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"NewFailure"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Failure"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"NewFailure"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:5Atoms10AsyncPhaseO","kind":"typeIdentifier","text":"AsyncPhase"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"NewFailure"},{"kind":"text","text":">"}],"title":"mapError(_:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/mapError(_:)","type":"topic","abstract":[{"type":"text","text":"Returns a new phase, mapping any failure value using the given transformation."}],"url":"\/documentation\/atoms\/asyncphase\/maperror(_:)","kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhase/init(catching:)":{"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"catching","kind":"externalParam"},{"kind":"text","text":": () "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Failure"},{"text":") -> ","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}],"role":"symbol","abstract":[{"type":"text","text":"Creates a new phase by evaluating a async throwing closure, capturing the"},{"type":"text","text":" "},{"type":"text","text":"returned value as a success, or thrown error as a failure."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/init(catching:)","url":"\/documentation\/atoms\/asyncphase\/init(catching:)","title":"init(catching:)","type":"topic"},"doc://Atoms/documentation/Atoms":{"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","url":"\/documentation\/atoms","role":"collection","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol"},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Atoms/s8CopyableP":{"identifier":"doc:\/\/Atoms\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://Atoms/documentation/Atoms/AsyncPhase/isFailure":{"type":"topic","title":"isFailure","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isFailure","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/atoms\/asyncphase\/isfailure","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/isFailure","abstract":[{"type":"text","text":"A boolean value indicating whether "},{"code":"self","type":"codeVoice"},{"text":" is ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/failure(_:)"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/Snapshot":{"navigatorTitle":[{"text":"Snapshot","kind":"identifier"}],"type":"topic","title":"Snapshot","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Snapshot","kind":"identifier"}],"url":"\/documentation\/atoms\/snapshot","abstract":[{"type":"text","text":"A snapshot structure that captures specific set of values of atoms and their dependency graph."}],"role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhase/flatMapError(_:)":{"abstract":[{"type":"text","text":"Returns a new phase, mapping any failure value using the given transformation"},{"type":"text","text":" "},{"type":"text","text":"and unwrapping the produced result."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/flatMapError(_:)","title":"flatMapError(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMapError","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewFailure","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms10AsyncPhaseO","text":"AsyncPhase"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewFailure"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:5Atoms10AsyncPhaseO","text":"AsyncPhase","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"NewFailure"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/atoms\/asyncphase\/flatmaperror(_:)"},"doc://Atoms/documentation/Atoms/AsyncPhase/value":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"value"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/value","role":"symbol","title":"value","abstract":[{"type":"text","text":"Returns the success value if "},{"code":"self","type":"codeVoice"},{"type":"text","text":" is "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/success(_:)","type":"reference"},{"type":"text","text":", otherwise returns "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/atoms\/asyncphase\/value","type":"topic"},"doc://Atoms/documentation/Atoms/AsyncPhase/init(_:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/init(_:)","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Failure","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"url":"\/documentation\/atoms\/asyncphase\/init(_:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Creates a new phase with the given result by mapping either of a ","type":"text"},{"type":"codeVoice","code":"success"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"text","text":"a "},{"code":"failure","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Atoms/documentation/Atoms/AsyncPhase/flatMap(_:)":{"role":"symbol","title":"flatMap(_:)","abstract":[{"type":"text","text":"Returns a new phase, mapping any success value using the given transformation"},{"type":"text","text":" "},{"type":"text","text":"and unwrapping the produced result."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/flatMap(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"text":"NewSuccess","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Success","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncPhase","preciseIdentifier":"s:5Atoms10AsyncPhaseO"},{"kind":"text","text":"<"},{"text":"NewSuccess","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Failure","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"AsyncPhase","preciseIdentifier":"s:5Atoms10AsyncPhaseO"},{"kind":"text","text":"<"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/atoms\/asyncphase\/flatmap(_:)"},"doc://Atoms/documentation/Atoms/AsyncPhase/isSuccess":{"abstract":[{"text":"A boolean value indicating whether ","type":"text"},{"code":"self","type":"codeVoice"},{"type":"text","text":" is "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/success(_:)","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/isSuccess","title":"isSuccess","url":"\/documentation\/atoms\/asyncphase\/issuccess","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isSuccess","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://Atoms/documentation/Atoms/AsyncPhase/success(_:)":{"title":"AsyncPhase.success(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"success","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Success"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"A success, storing a "},{"code":"Success","type":"codeVoice"},{"type":"text","text":" value."}],"role":"symbol","type":"topic","url":"\/documentation\/atoms\/asyncphase\/success(_:)","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/success(_:)"},"doc://Atoms/documentation/Atoms/AtomScope":{"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomScope"}],"title":"AtomScope","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomScope"}],"kind":"symbol","abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","url":"\/documentation\/atoms\/atomscope"}}}