{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped\/ScopeID-swift.associatedtype"},"sections":[],"metadata":{"roleHeading":"Associated Type","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ScopeID"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"text":" = ","kind":"text"},{"text":"DefaultScopeID","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms14DefaultScopeIDV"}],"title":"ScopeID","required":true,"externalID":"s:5Atoms6ScopedP7ScopeIDQa","modules":[{"name":"Atoms"}],"symbolKind":"associatedtype","role":"symbol"},"abstract":[{"type":"text","text":"A type of the scope ID which is to find a matching scope."}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/Scoped"]]},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/scoped\/scopeid-swift.associatedtype"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"ScopeID","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms14DefaultScopeIDV","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID","text":"DefaultScopeID"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://Atoms/documentation/Atoms/Scoped":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Scoped","kind":"identifier"}],"title":"Scoped","url":"\/documentation\/atoms\/scoped","type":"topic","abstract":[{"type":"text","text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor"},{"text":" ","type":"text"},{"type":"text","text":"of where it is used and prevents it from being shared out of scope."}],"navigatorTitle":[{"text":"Scoped","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/Scoped/ScopeID-swift.associatedtype":{"type":"topic","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"ScopeID","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms14DefaultScopeIDV","text":"DefaultScopeID"}],"kind":"symbol","title":"ScopeID","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped\/ScopeID-swift.associatedtype","abstract":[{"type":"text","text":"A type of the scope ID which is to find a matching scope."}],"url":"\/documentation\/atoms\/scoped\/scopeid-swift.associatedtype"},"doc://Atoms/documentation/Atoms/AtomScope":{"abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","title":"AtomScope","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomScope"}],"navigatorTitle":[{"text":"AtomScope","kind":"identifier"}],"url":"\/documentation\/atoms\/atomscope","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms/DefaultScopeID":{"kind":"symbol","abstract":[{"text":"A default scope ID to find a matching scope inbetween scoped atoms and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope"},{"type":"text","text":"."}],"role":"symbol","url":"\/documentation\/atoms\/defaultscopeid","navigatorTitle":[{"kind":"identifier","text":"DefaultScopeID"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID","title":"DefaultScopeID","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DefaultScopeID","kind":"identifier"}]},"doc://Atoms/documentation/Atoms":{"abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"kind":"symbol","url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","type":"topic","title":"Atoms"}}}