{"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch\/init(_:fileID:line:)"],"generated":true},{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue"],"title":"Instance Properties","anchor":"Instance-Properties"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/watch"]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","interfaceLanguage":"swift"},"sections":[],"seeAlsoSections":[{"title":"Property Wrappers","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"anchor":"Property-Wrappers"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"It starts watching the atom when the view accesses the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue","type":"reference"},{"text":", and when the atom value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"changes, the view invalidates its appearance and recomputes the body."}]},{"type":"paragraph","inlineContent":[{"text":"See also ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","type":"reference","isActive":true},{"text":" to write value of ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","isActive":true},{"type":"text","text":" to receive updates of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"text":".","type":"text"}]},{"type":"heading","text":"Example","anchor":"Example","level":2},{"code":["struct CountDisplay: View {","    @Watch(CounterAtom())","    var count","","    var body: some View {","        Text(\"Count: \\(count)\")  \/\/ Read value, and start watching.","    }","}"],"type":"codeListing","syntax":"swift"}]}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"navigatorTitle":[{"kind":"identifier","text":"Watch"}],"modules":[{"name":"Atoms"}],"role":"symbol","title":"Watch","symbolKind":"struct","externalID":"s:5Atoms5WatchV"},"kind":"symbol","references":{"doc://Atoms/7SwiftUI15DynamicPropertyP":{"type":"unresolvable","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP","title":"SwiftUICore.DynamicProperty"},"doc://Atoms/documentation/Atoms/Watch/wrappedValue":{"title":"wrappedValue","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}],"url":"\/documentation\/atoms\/watch\/wrappedvalue","type":"topic","abstract":[{"text":"The underlying value associated with the given atom.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue"},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/stateatom","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","role":"symbol"},"doc://Atoms/documentation/Atoms/Watch":{"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"role":"symbol","url":"\/documentation\/atoms\/watch","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","type":"topic","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"title":"Watch"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom","title":"Atom","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"title":"WatchStateObject","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/watchstateobject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","role":"symbol"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"url":"\/documentation\/atoms\/observableobjectatom","kind":"symbol","title":"ObservableObjectAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/ViewContext":{"type":"topic","url":"\/documentation\/atoms\/viewcontext","abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"kind":"symbol","role":"symbol","title":"ViewContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","navigatorTitle":[{"kind":"identifier","text":"ViewContext"}]},"doc://Atoms/documentation/Atoms/Watch/init(_:fileID:line:)":{"role":"symbol","title":"init(_:fileID:line:)","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/init(_:fileID:line:)","url":"\/documentation\/atoms\/watch\/init(_:fileid:line:)","abstract":[{"type":"text","text":"Creates an instance with the atom to watch."}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}]},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WatchState"}],"role":"symbol","url":"\/documentation\/atoms\/watchstate","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","type":"topic","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"title":"WatchState"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"}}}