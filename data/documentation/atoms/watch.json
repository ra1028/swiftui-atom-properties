{"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Watch","kind":"identifier"}],"externalID":"s:5Atoms5WatchV","role":"symbol","title":"Watch","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"Atoms"}]},"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"topicSections":[{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch\/init(_:fileID:line:)"]},{"generated":true,"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue"]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"type":"conformsTo"}],"seeAlsoSections":[{"title":"Property Wrappers","generated":true,"anchor":"Property-Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":" : ","kind":"text"},{"text":"Atom","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"text":"It starts watching the atom when the view accesses the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue","isActive":true},{"text":", and when the atom value","type":"text"},{"type":"text","text":" "},{"text":"changes, the view invalidates its appearance and recomputes the body.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"See also "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","type":"reference"},{"type":"text","text":" to write value of "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"},{"text":" to receive updates of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"type":"codeListing","syntax":"swift","code":["struct CountDisplay: View {","    @Watch(CounterAtom())","    var count","","    var body: some View {","        Text(\"Count: \\(count)\")  \/\/ Read value, and start watching.","    }","}"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/watch"]}],"references":{"doc://Atoms/documentation/Atoms/Watch/init(_:fileID:line:)":{"kind":"symbol","abstract":[{"text":"Creates an instance with the atom to watch.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/init(_:fileID:line:)","role":"symbol","url":"\/documentation\/atoms\/watch\/init(_:fileid:line:)","type":"topic","title":"init(_:fileID:line:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"type":"unresolvable","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP","title":"SwiftUICore.DynamicProperty"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"abstract":[{"text":"An atom type that instantiates an observable object.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableObjectAtom"}]},"doc://Atoms/documentation/Atoms/WatchStateObject":{"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"url":"\/documentation\/atoms\/watchstateobject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","kind":"symbol","title":"WatchStateObject"},"doc://Atoms/documentation/Atoms/Atom":{"kind":"symbol","title":"Atom","abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","url":"\/documentation\/atoms\/atom","navigatorTitle":[{"text":"Atom","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"type":"topic"},"doc://Atoms/documentation/Atoms/ViewContext":{"navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"type":"topic","url":"\/documentation\/atoms\/viewcontext","abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewContext"}],"role":"symbol","title":"ViewContext","kind":"symbol"},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"title":"StateAtom","url":"\/documentation\/atoms\/stateatom","type":"topic","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms":{"role":"collection","url":"\/documentation\/atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/Watch/wrappedValue":{"abstract":[{"type":"text","text":"The underlying value associated with the given atom."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue","kind":"symbol","type":"topic","title":"wrappedValue","role":"symbol","url":"\/documentation\/atoms\/watch\/wrappedvalue"},"doc://Atoms/documentation/Atoms/Watch":{"navigatorTitle":[{"kind":"identifier","text":"Watch"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","kind":"symbol","abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"role":"symbol","url":"\/documentation\/atoms\/watch","type":"topic","title":"Watch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Watch"}]},"doc://Atoms/documentation/Atoms/WatchState":{"role":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference"},{"text":".","type":"text"}],"title":"WatchState","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"WatchState","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/watchstate"}}}