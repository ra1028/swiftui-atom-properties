{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/watch"]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"Watch"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Watch","kind":"identifier"}],"modules":[{"name":"Atoms"}],"externalID":"s:5Atoms5WatchV","symbolKind":"struct","title":"Watch","role":"symbol","roleHeading":"Structure"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"title":"Conforms To","type":"conformsTo"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/Watch"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"seeAlsoSections":[{"anchor":"Property-Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"generated":true,"title":"Property Wrappers"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Watch","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:5Atoms4AtomP","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"typeIdentifier","text":"Atom"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"It starts watching the atom when the view accesses the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue","isActive":true},{"text":", and when the atom value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"changes, the view invalidates its appearance and recomputes the body."}]},{"type":"paragraph","inlineContent":[{"text":"See also ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState"},{"type":"text","text":" to write value of "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"},{"text":" to receive updates of","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"text":"Example","level":2,"type":"heading","anchor":"Example"},{"type":"codeListing","code":["struct CountDisplay: View {","    @Watch(CounterAtom())","    var count","","    var body: some View {","        Text(\"Count: \\(count)\")  \/\/ Read value, and start watching.","    }","}"],"syntax":"swift"}]}],"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch\/init(_:fileID:line:)"],"generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Atoms/documentation/Atoms/Watch/wrappedValue":{"url":"\/documentation\/atoms\/watch\/wrappedvalue","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"}],"kind":"symbol","title":"wrappedValue","role":"symbol","abstract":[{"text":"The underlying value associated with the given atom.","type":"text"}],"type":"topic"},"doc://Atoms/documentation/Atoms/Watch/init(_:fileID:line:)":{"role":"symbol","type":"topic","title":"init(_:fileID:line:)","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/init(_:fileID:line:)","abstract":[{"text":"Creates an instance with the atom to watch.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"url":"\/documentation\/atoms\/watch\/init(_:fileid:line:)"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"url":"\/documentation\/atoms\/watchstateobject","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"title":"WatchStateObject","role":"symbol"},"doc://Atoms/documentation/Atoms/ViewContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewContext"}],"navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"type":"topic","url":"\/documentation\/atoms\/viewcontext","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","title":"ViewContext","kind":"symbol"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"type":"unresolvable","title":"SwiftUICore.DynamicProperty","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"},"doc://Atoms/documentation/Atoms/Watch":{"navigatorTitle":[{"kind":"identifier","text":"Watch"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Watch"}],"abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"title":"Watch","type":"topic","role":"symbol","url":"\/documentation\/atoms\/watch"},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"role":"symbol","url":"\/documentation\/atoms\/stateatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","kind":"symbol","type":"topic","title":"StateAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom":{"type":"topic","url":"\/documentation\/atoms\/atom","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"title":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"url":"\/documentation\/atoms\/observableobjectatom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"title":"ObservableObjectAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObjectAtom"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}]},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","url":"\/documentation\/atoms\/watchstate","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchState","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"title":"WatchState","role":"symbol"}}}