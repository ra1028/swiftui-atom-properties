{"seeAlsoSections":[{"title":"Property Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"title":"Watch","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:5Atoms5WatchV","modules":[{"name":"Atoms"}],"navigatorTitle":[{"kind":"identifier","text":"Watch"}]},"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"sections":[],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch\/init(_:fileID:line:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue"]}],"variants":[{"paths":["\/documentation\/atoms\/watch"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It starts watching the atom when the view accesses the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue"},{"type":"text","text":", and when the atom value"},{"type":"text","text":" "},{"type":"text","text":"changes, the view invalidates its appearance and recomputes the body."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See also "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState"},{"type":"text","text":" to write value of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"},{"type":"text","text":" to receive updates of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}]},{"anchor":"Example","level":2,"type":"heading","text":"Example"},{"type":"codeListing","syntax":"swift","code":["struct CountDisplay: View {","    @Watch(CounterAtom())","    var count","","    var body: some View {","        Text(\"Count: \\(count)\")  \/\/ Read value, and start watching.","    }","}"]}]}],"references":{"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"role":"symbol","title":"ObservableObjectAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObjectAtom"}],"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"url":"\/documentation\/atoms\/observableobjectatom"},"doc://Atoms/documentation/Atoms/Watch/init(_:fileID:line:)":{"role":"symbol","title":"init(_:fileID:line:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates an instance with the atom to watch."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/init(_:fileID:line:)","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/watch\/init(_:fileid:line:)"},"doc://Atoms/documentation/Atoms":{"role":"collection","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","type":"topic","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/Watch":{"role":"symbol","title":"Watch","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Watch"}],"url":"\/documentation\/atoms\/watch"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"role":"symbol","title":"WatchStateObject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"url":"\/documentation\/atoms\/watchstateobject"},"doc://Atoms/documentation/Atoms/Atom":{"role":"symbol","title":"Atom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom"},"doc://Atoms/documentation/Atoms/StateAtom":{"role":"symbol","title":"StateAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom"},"doc://Atoms/documentation/Atoms/WatchState":{"role":"symbol","title":"WatchState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WatchState"}],"url":"\/documentation\/atoms\/watchstate"},"doc://Atoms/documentation/Atoms/ViewContext":{"role":"symbol","title":"ViewContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewContext"}],"abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"type":"text","text":"interact with atoms from views."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"url":"\/documentation\/atoms\/viewcontext"},"doc://Atoms/documentation/Atoms/Watch/wrappedValue":{"role":"symbol","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced"}],"abstract":[{"type":"text","text":"The underlying value associated with the given atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/watch\/wrappedvalue"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"type":"unresolvable","title":"SwiftUI.DynamicProperty","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"}}}