{"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Watch","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"It starts watching the atom when the view accesses the "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue","isActive":true,"type":"reference"},{"type":"text","text":", and when the atom value"},{"text":" ","type":"text"},{"type":"text","text":"changes, the view invalidates its appearance and recomputes the body."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"See also ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","isActive":true},{"text":" to write value of ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","type":"reference"},{"text":" to receive updates of","type":"text"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"reference"},{"text":".","type":"text"}]},{"level":2,"anchor":"Example","text":"Example","type":"heading"},{"syntax":"swift","code":["struct CountDisplay: View {","    @Watch(CounterAtom())","    var count","","    var body: some View {","        Text(\"Count: \\(count)\")  \/\/ Read value, and start watching.","    }","}"],"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/atoms\/watch"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch\/init(_:fileID:line:)"],"title":"Initializers","anchor":"Initializers","generated":true},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue"],"generated":true}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"anchor":"Property-Wrappers","title":"Property Wrappers","generated":true}],"metadata":{"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Watch","kind":"identifier"}],"externalID":"s:5Atoms5WatchV","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"modules":[{"name":"Atoms"}],"role":"symbol","roleHeading":"Structure","title":"Watch"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/Watch"},"references":{"doc://Atoms/documentation/Atoms/WatchStateObject":{"url":"\/documentation\/atoms\/watchstateobject","abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"title":"WatchStateObject"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"title":"ObservableObjectAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"title":"Atom"},"doc://Atoms/documentation/Atoms/Watch":{"abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"kind":"symbol","role":"symbol","title":"Watch","url":"\/documentation\/atoms\/watch","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Watch"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","role":"symbol","title":"WatchState","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}],"url":"\/documentation\/atoms\/watchstate","type":"topic","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","navigatorTitle":[{"text":"WatchState","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Watch/wrappedValue":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"}],"title":"wrappedValue","url":"\/documentation\/atoms\/watch\/wrappedvalue","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The underlying value associated with the given atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue","role":"symbol"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"type":"unresolvable","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP","title":"SwiftUICore.DynamicProperty"},"doc://Atoms/documentation/Atoms/Watch/init(_:fileID:line:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"title":"init(_:fileID:line:)","url":"\/documentation\/atoms\/watch\/init(_:fileid:line:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Creates an instance with the atom to watch."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/init(_:fileID:line:)","role":"symbol"},"doc://Atoms/documentation/Atoms/ViewContext":{"kind":"symbol","role":"symbol","title":"ViewContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ViewContext","kind":"identifier"}],"url":"\/documentation\/atoms\/viewcontext","type":"topic","abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","navigatorTitle":[{"text":"ViewContext","kind":"identifier"}]}}}