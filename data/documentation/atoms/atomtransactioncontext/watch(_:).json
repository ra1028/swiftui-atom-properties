{"metadata":{"externalID":"s:5Atoms22AtomTransactionContextV5watchy8ProducedQzxAA0B0RzlF","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"watch"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}],"title":"watch(_:)","modules":[{"name":"Atoms"}],"roleHeading":"Instance Method"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/watch(_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Accesses the value associated with the given atom for reading and initiates watch to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"receive its updates."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"watch","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"atom","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"text":") -> ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"text":"An atom to watch.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"The value associated with the given atom."}],"type":"paragraph"}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This method returns a value for the given atom and initiates watching the atom so that","type":"text"},{"text":" ","type":"text"},{"text":"the current context gets updated when the atom notifies updates.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The value associated with the atom is cached until it is no longer watched or until"},{"type":"text","text":" "},{"text":"it is updated with a new value.","type":"text"}]},{"syntax":"swift","code":["let context = ...","let text = context.watch(TextAtom())","print(text) \/\/ Prints the current value associated with `TextAtom`."],"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atoms\/atomtransactioncontext\/watch(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"title":"AtomTransactionContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomTransactionContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/atomtransactioncontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","kind":"symbol","navigatorTitle":[{"text":"AtomTransactionContext","kind":"identifier"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"role":"symbol"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"title":"Produced","url":"\/documentation\/atoms\/atom\/produced","abstract":[{"type":"text","text":"The type of value that this atom produces."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","type":"topic","required":true,"role":"symbol","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Produced","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomTransactionContext/watch(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"watch"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"}],"type":"topic","url":"\/documentation\/atoms\/atomtransactioncontext\/watch(_:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/watch(_:)","abstract":[{"text":"Accesses the value associated with the given atom for reading and initiates watch to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"receive its updates."}],"kind":"symbol","title":"watch(_:)"},"doc://Atoms/documentation/Atoms":{"role":"collection","type":"topic","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"kind":"symbol","title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms"}}}