{"kind":"symbol","variants":[{"paths":["\/documentation\/atoms\/atomtransactioncontext\/refresh(_:)-8qx3a"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext"]]},"sections":[],"metadata":{"externalID":"s:5Atoms22AtomTransactionContextV7refreshy8ProducedQzxYaAA05AsyncB0RzlF","role":"symbol","symbolKind":"method","title":"refresh(_:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"refresh","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"}],"modules":[{"name":"Atoms"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"refresh","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"atom"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","preciseIdentifier":"s:5Atoms9AsyncAtomP"}]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"An atom to refresh.","type":"text"}],"type":"paragraph"}],"name":"atom"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The value after the refreshing associated with the given atom is completed."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method accepts only asynchronous atoms such as types conforming to:"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom"},{"type":"text","text":", "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","isActive":true,"type":"reference"},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","isActive":true},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"It refreshes the value for the given atom and then returns, so the caller can await until"},{"text":" ","type":"text"},{"text":"the atom completes the update.","type":"text"},{"type":"text","text":" "},{"text":"Note that it can be used only in a context that supports concurrency.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let context = ...","let image = await context.refresh(AsyncImageDataAtom()).value","print(image) \/\/ Prints the data obtained through the network."],"type":"codeListing"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/refresh(_:)-8qx3a"},"abstract":[{"type":"text","text":"Refreshes and then returns the value associated with the given refreshable atom."}],"references":{"doc://Atoms/documentation/Atoms":{"url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"type":"topic","kind":"symbol","title":"Atoms","role":"collection"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncPhase","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/TaskAtom":{"abstract":[{"text":"An atom type that provides a nonthrowing ","type":"text"},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous function.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","role":"symbol","navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/taskatom","title":"TaskAtom","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomTransactionContext/refresh(_:)-8qx3a":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/refresh(_:)-8qx3a","abstract":[{"type":"text","text":"Refreshes and then returns the value associated with the given refreshable atom."}],"role":"symbol","type":"topic","title":"refresh(_:)","kind":"symbol","url":"\/documentation\/atoms\/atomtransactioncontext\/refresh(_:)-8qx3a","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"refresh"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}]},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"navigatorTitle":[{"text":"AtomTransactionContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTransactionContext"}],"title":"AtomTransactionContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","role":"symbol","url":"\/documentation\/atoms\/atomtransactioncontext","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"abstract":[{"text":"The type of value that this atom produces.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","url":"\/documentation\/atoms\/atom\/produced","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Produced"}],"title":"Produced","kind":"symbol"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"kind":"symbol","url":"\/documentation\/atoms\/publisheratom","navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"title":"PublisherAtom","type":"topic","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PublisherAtom","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ThrowingTaskAtom","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskAtom"}],"title":"ThrowingTaskAtom","role":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"url":"\/documentation\/atoms\/asyncsequenceatom","title":"AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" value."}]},"doc://Atoms/documentation/Atoms/AsyncAtom":{"url":"\/documentation\/atoms\/asyncatom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}],"abstract":[{"text":"Declares that a type can produce a refreshable value that can be accessed from everywhere.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncAtom"}],"title":"AsyncAtom","role":"symbol","type":"topic","kind":"symbol"}}}