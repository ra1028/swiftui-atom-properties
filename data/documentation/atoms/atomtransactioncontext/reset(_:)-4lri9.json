{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"atom"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"typeIdentifier","text":"Atom","preciseIdentifier":"s:5Atoms4AtomP"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An atom to reset.","type":"text"}]}],"name":"atom"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method resets the value for the given atom and then notifies downstream"},{"text":" ","type":"text"},{"type":"text","text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly"},{"type":"text","text":" "},{"type":"text","text":"generated value will be produced."}]},{"code":["let context = ...","print(context.watch(ResettableTextAtom())) \/\/ Prints \"Text\"","context[ResettableTextAtom()] = \"New text\"","print(context.read(ResettableTextAtom())) \/\/ Prints \"New text\"","context.reset(ResettableTextAtom())","print(context.read(ResettableTextAtom())) \/\/ Prints \"Text\""],"type":"codeListing","syntax":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtransactioncontext\/reset(_:)-4lri9"]}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:5Atoms22AtomTransactionContextV5resetyyxAA0B0RzlF","role":"symbol","roleHeading":"Instance Method","title":"reset(_:)","modules":[{"name":"Atoms"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/reset(_:)-4lri9"},"references":{"doc://Atoms/documentation/Atoms":{"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","url":"\/documentation\/atoms","role":"collection","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomTransactionContext/reset(_:)-4lri9":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/reset(_:)-4lri9","url":"\/documentation\/atoms\/atomtransactioncontext\/reset(_:)-4lri9","title":"reset(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"type":"topic","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomTransactionContext","kind":"identifier"}],"title":"AtomTransactionContext","url":"\/documentation\/atoms\/atomtransactioncontext","navigatorTitle":[{"kind":"identifier","text":"AtomTransactionContext"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","type":"topic","title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}]}}}