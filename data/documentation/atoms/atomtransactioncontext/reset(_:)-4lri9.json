{"sections":[],"kind":"symbol","metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"(some ","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier","text":"Atom"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","symbolKind":"method","title":"reset(_:)","modules":[{"name":"Atoms"}],"externalID":"s:5Atoms22AtomTransactionContextV5resetyyxAA0B0RzlF"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext"]]},"variants":[{"paths":["\/documentation\/atoms\/atomtransactioncontext\/reset(_:)-4lri9"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"atom"},{"text":": some ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"typeIdentifier","text":"Atom","preciseIdentifier":"s:5Atoms4AtomP"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An atom to reset."}]}]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method resets the value for the given atom and then notifies downstream"},{"text":" ","type":"text"},{"text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly","type":"text"},{"type":"text","text":" "},{"text":"generated value will be produced.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let context = ...","print(context.watch(ResettableTextAtom())) \/\/ Prints \"Text\"","context[ResettableTextAtom()] = \"New text\"","print(context.read(ResettableTextAtom())) \/\/ Prints \"New text\"","context.reset(ResettableTextAtom())","print(context.read(ResettableTextAtom())) \/\/ Prints \"Text\""]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/reset(_:)-4lri9"},"abstract":[{"text":"Resets the value associated with the given atom, and then notifies.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Atoms/documentation/Atoms/Atom":{"type":"topic","url":"\/documentation\/atoms\/atom","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"title":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},"doc://Atoms/documentation/Atoms/AtomTransactionContext/reset(_:)-4lri9":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"kind":"text","text":"(some "},{"text":"Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP"},{"text":")","kind":"text"}],"url":"\/documentation\/atoms\/atomtransactioncontext\/reset(_:)-4lri9","title":"reset(_:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/reset(_:)-4lri9","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"url":"\/documentation\/atoms\/atomtransactioncontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTransactionContext"}],"title":"AtomTransactionContext","navigatorTitle":[{"text":"AtomTransactionContext","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms"}}}