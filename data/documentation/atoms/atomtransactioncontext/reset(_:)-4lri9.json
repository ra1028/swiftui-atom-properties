{"kind":"symbol","identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/reset(_:)-4lri9","interfaceLanguage":"swift"},"metadata":{"externalID":"s:5Atoms22AtomTransactionContextV5resetyyxAA0B0RzlF","role":"symbol","modules":[{"name":"Atoms"}],"symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"kind":"text","text":"(some "},{"preciseIdentifier":"s:5Atoms4AtomP","text":"Atom","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"reset(_:)"},"variants":[{"paths":["\/documentation\/atoms\/atomtransactioncontext\/reset(_:)-4lri9"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"atom"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","text":"Atom","preciseIdentifier":"s:5Atoms4AtomP","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},{"text":")","kind":"text"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An atom to reset."}],"type":"paragraph"}],"name":"atom"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This method resets the value for the given atom and then notifies downstream"},{"text":" ","type":"text"},{"type":"text","text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly"},{"text":" ","type":"text"},{"text":"generated value will be produced.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let context = ...","print(context.watch(ResettableTextAtom())) \/\/ Prints \"Text\"","context[ResettableTextAtom()] = \"New text\"","print(context.read(ResettableTextAtom())) \/\/ Prints \"New text\"","context.reset(ResettableTextAtom())","print(context.read(ResettableTextAtom())) \/\/ Prints \"Text\""],"syntax":"swift"}]}],"references":{"doc://Atoms/documentation/Atoms":{"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","role":"collection","url":"\/documentation\/atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"type":"topic"},"doc://Atoms/documentation/Atoms/AtomTransactionContext/reset(_:)-4lri9":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/reset(_:)-4lri9","abstract":[{"text":"Resets the value associated with the given atom, and then notifies.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"(some ","kind":"text"},{"kind":"typeIdentifier","text":"Atom","preciseIdentifier":"s:5Atoms4AtomP"},{"kind":"text","text":")"}],"title":"reset(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/atomtransactioncontext\/reset(_:)-4lri9"},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"kind":"symbol","url":"\/documentation\/atoms\/atomtransactioncontext","title":"AtomTransactionContext","role":"symbol","navigatorTitle":[{"text":"AtomTransactionContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","type":"topic","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomTransactionContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom":{"url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","title":"Atom","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"}}}