{"kind":"symbol","metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":")"}],"externalID":"s:5Atoms22AtomTransactionContextV5resetyyxAA0B0RzlF","role":"symbol","title":"reset(_:)","symbolKind":"method","modules":[{"name":"Atoms"}],"roleHeading":"Instance Method"},"variants":[{"paths":["\/documentation\/atoms\/atomtransactioncontext\/reset(_:)-4lri9"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/reset(_:)-4lri9","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"atom"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Node"},{"text":" : ","kind":"text"},{"text":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An atom to reset."}]}],"name":"atom"}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This method resets the value for the given atom and then notifies downstream","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly"},{"text":" ","type":"text"},{"type":"text","text":"generated value will be produced."}],"type":"paragraph"},{"code":["let context = ...","print(context.watch(ResettableTextAtom())) \/\/ Prints \"Text\"","context[ResettableTextAtom()] = \"New text\"","print(context.read(ResettableTextAtom())) \/\/ Prints \"New text\"","context.reset(ResettableTextAtom())","print(context.read(ResettableTextAtom())) \/\/ Prints \"Text\""],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext"]]},"references":{"doc://Atoms/documentation/Atoms":{"role":"collection","url":"\/documentation\/atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/AtomTransactionContext/reset(_:)-4lri9":{"title":"reset(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/reset(_:)-4lri9","abstract":[{"text":"Resets the value associated with the given atom, and then notifies.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":")"}],"url":"\/documentation\/atoms\/atomtransactioncontext\/reset(_:)-4lri9"},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"navigatorTitle":[{"kind":"identifier","text":"AtomTransactionContext"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/atomtransactioncontext","type":"topic","title":"AtomTransactionContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTransactionContext"}]},"doc://Atoms/documentation/Atoms/Atom":{"kind":"symbol","title":"Atom","abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","url":"\/documentation\/atoms\/atom","navigatorTitle":[{"text":"Atom","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"type":"topic"}}}