{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext"]]},"abstract":[{"text":"Resets the value associated with the given atom, and then notifies.","type":"text"}],"kind":"symbol","identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/reset(_:)-4lri9","interfaceLanguage":"swift"},"sections":[],"metadata":{"modules":[{"name":"Atoms"}],"roleHeading":"Instance Method","symbolKind":"method","externalID":"s:5Atoms22AtomTransactionContextV5resetyyxAA0B0RzlF","title":"reset(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"kind":"text","text":"(some "},{"text":"Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP"},{"text":")","kind":"text"}]},"variants":[{"paths":["\/documentation\/atoms\/atomtransactioncontext\/reset(_:)-4lri9"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"atom","kind":"internalParam"},{"kind":"text","text":": some "},{"text":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP"},{"kind":"text","text":")"}]}]},{"parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"text":"An atom to reset.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method resets the value for the given atom and then notifies downstream"},{"type":"text","text":" "},{"text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly","type":"text"},{"type":"text","text":" "},{"text":"generated value will be produced.","type":"text"}]},{"type":"codeListing","code":["let context = ...","print(context.watch(ResettableTextAtom())) \/\/ Prints \"Text\"","context[ResettableTextAtom()] = \"New text\"","print(context.read(ResettableTextAtom())) \/\/ Prints \"New text\"","context.reset(ResettableTextAtom())","print(context.read(ResettableTextAtom())) \/\/ Prints \"Text\""],"syntax":"swift"}]}],"references":{"doc://Atoms/documentation/Atoms/AtomTransactionContext/reset(_:)-4lri9":{"title":"reset(_:)","abstract":[{"text":"Resets the value associated with the given atom, and then notifies.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"(some "},{"text":"Atom","preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/atoms\/atomtransactioncontext\/reset(_:)-4lri9","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/reset(_:)-4lri9"},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"title":"AtomTransactionContext","abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomTransactionContext"}],"navigatorTitle":[{"kind":"identifier","text":"AtomTransactionContext"}],"url":"\/documentation\/atoms\/atomtransactioncontext","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","type":"topic"},"doc://Atoms/documentation/Atoms/Atom":{"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Atom","kind":"identifier"}],"url":"\/documentation\/atoms\/atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","navigatorTitle":[{"text":"Atom","kind":"identifier"}],"role":"symbol","type":"topic","title":"Atom"},"doc://Atoms/documentation/Atoms":{"abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"kind":"symbol","url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","type":"topic","title":"Atoms"}}}