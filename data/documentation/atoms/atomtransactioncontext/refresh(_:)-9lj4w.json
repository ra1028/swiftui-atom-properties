{"metadata":{"externalID":"s:5Atoms22AtomTransactionContextV7refreshy8ProducedQzxYaAA11RefreshableRzlF","modules":[{"name":"Atoms"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"refresh"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","title":"refresh(_:)"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext"]]},"kind":"symbol","abstract":[{"text":"Refreshes and then returns the value associated with the given refreshable atom.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/refresh(_:)-9lj4w"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"refresh"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"atom"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","text":"Produced","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms11RefreshableP","text":"Refreshable"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"atom","content":[{"inlineContent":[{"type":"text","text":"An atom to refresh."}],"type":"paragraph"}]}]},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"The value after the refreshing associated with the given atom is completed.","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This method only accepts atoms that conform to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","isActive":true,"type":"reference"},{"type":"text","text":" protocol."},{"text":" ","type":"text"},{"text":"It refreshes the value with the custom refresh behavior, so the caller can await until","type":"text"},{"type":"text","text":" "},{"text":"the atom completes the update.","type":"text"},{"type":"text","text":" "},{"text":"Note that it can be used only in a context that supports concurrency.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let context = ...","let value = await context.refresh(CustomRefreshableAtom())","print(value)"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomtransactioncontext\/refresh(_:)-9lj4w"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"title":"AtomTransactionContext","abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomTransactionContext"}],"navigatorTitle":[{"kind":"identifier","text":"AtomTransactionContext"}],"url":"\/documentation\/atoms\/atomtransactioncontext","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","type":"topic"},"doc://Atoms/documentation/Atoms/AtomTransactionContext/refresh(_:)-9lj4w":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext\/refresh(_:)-9lj4w","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"refresh"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}],"url":"\/documentation\/atoms\/atomtransactioncontext\/refresh(_:)-9lj4w","title":"refresh(_:)","type":"topic","abstract":[{"type":"text","text":"Refreshes and then returns the value associated with the given refreshable atom."}],"role":"symbol"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"abstract":[{"type":"text","text":"The type of value that this atom produces."}],"kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Produced"}],"url":"\/documentation\/atoms\/atom\/produced","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","role":"symbol","type":"topic","title":"Produced"},"doc://Atoms/documentation/Atoms/Refreshable":{"type":"topic","title":"Refreshable","url":"\/documentation\/atoms\/refreshable","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","abstract":[{"text":"An attribute protocol that allows an atom to have a custom refresh behavior.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Refreshable"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Refreshable","kind":"identifier"}]},"doc://Atoms/documentation/Atoms":{"abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"kind":"symbol","url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","type":"topic","title":"Atoms"}}}