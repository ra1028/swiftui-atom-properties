{"kind":"symbol","metadata":{"title":"projectedValue","modules":[{"name":"Atoms"}],"externalID":"s:5Atoms16WatchStateObjectV14projectedValueAC7WrapperVyx_Gvp","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms16WatchStateObjectV","text":"WatchStateObject"},{"text":"<","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Wrapper","preciseIdentifier":"s:5Atoms16WatchStateObjectV7WrapperV","kind":"typeIdentifier"}],"role":"symbol","roleHeading":"Instance Property"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/watchstateobject\/projectedvalue"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"projectedValue"},{"text":": ","kind":"text"},{"text":"WatchStateObject","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","preciseIdentifier":"s:5Atoms16WatchStateObjectV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms16WatchStateObjectV7WrapperV","text":"Wrapper","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the projected value to pass a binding value down a view hierarchy."},{"type":"text","text":" "},{"type":"text","text":"To get the projected value, prefix the property variable with "},{"type":"codeVoice","code":"$"},{"text":".","type":"text"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"]]},"sections":[],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","interfaceLanguage":"swift"},"abstract":[{"text":"A projection of the state object that creates bindings to its properties.","type":"text"}],"references":{"doc://Atoms/documentation/Atoms/WatchStateObject/projectedValue":{"type":"topic","url":"\/documentation\/atoms\/watchstateobject\/projectedvalue","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/projectedValue","abstract":[{"text":"A projection of the state object that creates bindings to its properties.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"WatchStateObject","preciseIdentifier":"s:5Atoms16WatchStateObjectV"},{"kind":"text","text":"<"},{"text":"Node","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Wrapper","preciseIdentifier":"s:5Atoms16WatchStateObjectV7WrapperV"}],"role":"symbol","title":"projectedValue","kind":"symbol"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"url":"\/documentation\/atoms\/watchstateobject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","kind":"symbol","title":"WatchStateObject"},"doc://Atoms/documentation/Atoms/WatchStateObject/Wrapper":{"navigatorTitle":[{"text":"Wrapper","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/watchstateobject\/wrapper","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject\/Wrapper","abstract":[{"type":"text","text":"A wrapper of the underlying observable object that can create bindings to"},{"type":"text","text":" "},{"type":"text","text":"its properties using dynamic member lookup."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Wrapper","kind":"identifier"}],"role":"symbol","title":"WatchStateObject.Wrapper","kind":"symbol"},"doc://Atoms/documentation/Atoms":{"role":"collection","url":"\/documentation\/atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"abstract":[{"text":"An atom type that instantiates an observable object.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableObjectAtom"}]}}}