{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property provides primary access to the value’s data. However, you don’t"},{"type":"text","text":" "},{"type":"text","text":"access "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue"},{"type":"text","text":" directly. Instead, you use the property variable created"},{"type":"text","text":" "},{"type":"text","text":"with the "},{"type":"codeVoice","code":"@Watch"},{"type":"text","text":" attribute."},{"type":"text","text":" "},{"type":"text","text":"Accessing this property starts watching the atom."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/atoms\/watch\/wrappedvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The underlying value associated with the given atom."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced"}],"title":"wrappedValue","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:5Atoms5WatchV12wrappedValue8ProducedQzvp","modules":[{"name":"Atoms"}]},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/Watch"]]},"references":{"doc://Atoms/documentation/Atoms/Watch/wrappedValue":{"role":"symbol","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced"}],"abstract":[{"type":"text","text":"The underlying value associated with the given atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch\/wrappedValue","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/watch\/wrappedvalue"},"doc://Atoms/documentation/Atoms/Watch":{"role":"symbol","title":"Watch","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Watch"}],"url":"\/documentation\/atoms\/watch"},"doc://Atoms/documentation/Atoms":{"role":"collection","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","type":"topic","url":"\/documentation\/atoms"}}}