{"metadata":{"modules":[{"name":"Atoms"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Resettable"}],"platforms":[],"navigatorTitle":[{"text":"Resettable","kind":"identifier"}],"symbolKind":"protocol","externalID":"s:5Atoms10ResettableP","title":"Resettable","roleHeading":"Protocol","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/resettable"]}],"abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom reset behavior."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"generated":true,"title":"Deprecated","anchor":"Deprecated","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable"},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Resettable","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","text":"Atom"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"It is useful when creating a wrapper atom and you want to transparently reset the atom underneath."},{"type":"text","text":" "},{"type":"text","text":"Note that the custom reset will not be triggered when the atom is overridden."}],"type":"paragraph"},{"code":["struct UserAtom: ValueAtom, Resettable, Hashable {","    func value(context: Context) -> AsyncPhase<User?, Never> {","        context.watch(FetchUserAtom().phase)","    }","","    func reset(context: CurrentContext) {","        context.reset(FetchUserAtom())","    }","}","","private struct FetchUserAtom: TaskAtom, Hashable {","    func value(context: Context) async -> User? {","        await fetchUser()","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Resettable\/reset(context:)"],"generated":true,"anchor":"Instance-Methods"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"`Resettable` is deprecated. Use a custom reset function or other alternatives instead."}]}],"kind":"symbol","relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"type":"inheritsFrom","title":"Inherits From"}],"references":{"doc://Atoms/documentation/Atoms/Resettable/reset(context:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP14CurrentContexta","text":"CurrentContext","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"reset(context:)","required":true,"abstract":[{"type":"text","text":"Arbitrary reset method to be executed on atom reset."}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/resettable\/reset(context:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable\/reset(context:)","deprecated":true,"type":"topic"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"},"doc://Atoms/documentation/Atoms/Resettable":{"title":"Resettable","url":"\/documentation\/atoms\/resettable","abstract":[{"text":"An attribute protocol that allows an atom to have a custom reset behavior.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Resettable","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","role":"symbol","type":"topic","deprecated":true,"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Resettable"}]},"doc://Atoms/documentation/Atoms/EmptyEffect":{"navigatorTitle":[{"kind":"identifier","text":"EmptyEffect"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","url":"\/documentation\/atoms\/emptyeffect","abstract":[{"type":"text","text":"An effect that doesnâ€™t produce any effects."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyEffect"}],"deprecated":true,"title":"EmptyEffect","type":"topic","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"title":"Atom"},"doc://Atoms/documentation/Atoms/Refreshable":{"type":"topic","url":"\/documentation\/atoms\/refreshable","role":"symbol","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","title":"Refreshable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Refreshable"}],"kind":"symbol","navigatorTitle":[{"text":"Refreshable","kind":"identifier"}],"deprecated":true},"doc://Atoms/documentation/Atoms/MergedEffect":{"url":"\/documentation\/atoms\/mergedeffect","title":"MergedEffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","role":"symbol","abstract":[{"type":"text","text":"An atom effect that merges multiple atom effects into one."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergedEffect"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"MergedEffect","kind":"identifier"}],"deprecated":true},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"}}}