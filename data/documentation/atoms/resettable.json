{"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"`Resettable` is deprecated. Use a custom reset function or other alternatives instead."}]}],"topicSections":[{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Resettable\/reset(context:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Resettable","kind":"identifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","text":"Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP"}],"languages":["swift"]}]},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"It is useful when creating a wrapper atom and you want to transparently reset the atom underneath.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that the custom reset will not be triggered when the atom is overridden."}]},{"syntax":"swift","code":["struct UserAtom: ValueAtom, Resettable, Hashable {","    func value(context: Context) -> AsyncPhase<User?, Never> {","        context.watch(FetchUserAtom().phase)","    }","","    func reset(context: CurrentContext) {","        context.reset(FetchUserAtom())","    }","}","","private struct FetchUserAtom: TaskAtom, Hashable {","    func value(context: Context) async -> User? {","        await fetchUser()","    }","}"],"type":"codeListing"}],"kind":"content"}],"metadata":{"externalID":"s:5Atoms10ResettableP","platforms":[],"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Resettable"}],"role":"symbol","roleHeading":"Protocol","modules":[{"name":"Atoms"}],"navigatorTitle":[{"text":"Resettable","kind":"identifier"}],"title":"Resettable"},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/atoms\/resettable"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"An attribute protocol that allows an atom to have a custom reset behavior.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"}],"sections":[],"seeAlsoSections":[{"generated":true,"title":"Deprecated","anchor":"Deprecated","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"]}],"references":{"doc://Atoms/documentation/Atoms/Refreshable":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"deprecated":true,"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Refreshable"}],"role":"symbol","title":"Refreshable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Refreshable","kind":"identifier"}],"url":"\/documentation\/atoms\/refreshable"},"doc://Atoms/documentation/Atoms/Resettable/reset(context:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"kind":"text","text":"("},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CurrentContext","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP14CurrentContexta"},{"text":")","kind":"text"}],"deprecated":true,"url":"\/documentation\/atoms\/resettable\/reset(context:)","type":"topic","abstract":[{"text":"Arbitrary reset method to be executed on atom reset.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable\/reset(context:)","required":true,"title":"reset(context:)","kind":"symbol","role":"symbol"},"doc://Atoms/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable"},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms/MergedEffect":{"deprecated":true,"type":"topic","role":"symbol","kind":"symbol","title":"MergedEffect","abstract":[{"text":"An atom effect that merges multiple atom effects into one.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","navigatorTitle":[{"text":"MergedEffect","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergedEffect"}],"url":"\/documentation\/atoms\/mergedeffect"},"doc://Atoms/documentation/Atoms/EmptyEffect":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyEffect"}],"navigatorTitle":[{"kind":"identifier","text":"EmptyEffect"}],"kind":"symbol","role":"symbol","abstract":[{"text":"An effect that doesnâ€™t produce any effects.","type":"text"}],"title":"EmptyEffect","url":"\/documentation\/atoms\/emptyeffect","deprecated":true},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/Resettable":{"deprecated":true,"type":"topic","role":"symbol","kind":"symbol","title":"Resettable","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom reset behavior."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","navigatorTitle":[{"text":"Resettable","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Resettable","kind":"identifier"}],"url":"\/documentation\/atoms\/resettable"}}}