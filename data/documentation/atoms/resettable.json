{"seeAlsoSections":[{"title":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","doc:\/\/Atoms\/documentation\/Atoms\/Refreshable"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Resettable"}],"title":"Resettable","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:5Atoms10ResettableP","modules":[{"name":"Atoms"}],"navigatorTitle":[{"kind":"identifier","text":"Resettable"}]},"abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom reset behavior."}],"sections":[],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Resettable\/reset(context:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Resettable\/ResetContext"]}],"variants":[{"paths":["\/documentation\/atoms\/resettable"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Resettable"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is useful when creating a wrapper atom and you want to transparently reset the atom underneath."},{"type":"text","text":" "},{"type":"text","text":"Note that the custom reset will not be triggered when the atom is overridden."}]},{"type":"codeListing","syntax":"swift","code":["struct UserAtom: ValueAtom, Resettable, Hashable {","    func value(context: Context) -> AsyncPhase<User?, Never> {","        context.watch(FetchUserAtom().phase)","    }","","    func reset(context: CurrentContext) {","        context.reset(FetchUserAtom())","    }","}","","private struct FetchUserAtom: TaskAtom, Hashable {","    func value(context: Context) async -> User? {","        await fetchUser()","    }","}"]}]}],"references":{"doc://Atoms/documentation/Atoms/Atom":{"role":"symbol","title":"Atom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom"},"doc://Atoms/documentation/Atoms":{"role":"collection","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","type":"topic","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/KeepAlive":{"role":"symbol","title":"KeepAlive","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeepAlive"}],"abstract":[{"type":"text","text":"An attribute protocol to allow the value of an atom to continue being retained"},{"type":"text","text":" "},{"type":"text","text":"even after they are no longer watched."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeepAlive"}],"url":"\/documentation\/atoms\/keepalive"},"doc://Atoms/documentation/Atoms/Resettable/reset(context:)":{"role":"symbol","title":"reset(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CurrentContext","preciseIdentifier":"s:5Atoms4AtomP14CurrentContexta"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Arbitrary reset method to be executed on atom reset."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable\/reset(context:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/atoms\/resettable\/reset(context:)"},"doc://Atoms/documentation/Atoms/Scoped":{"role":"symbol","title":"Scoped","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scoped"}],"abstract":[{"type":"text","text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor"},{"type":"text","text":" "},{"type":"text","text":"of where it is used and prevents it from being shared out of scope."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Scoped"}],"url":"\/documentation\/atoms\/scoped"},"doc://Atoms/documentation/Atoms/Refreshable":{"role":"symbol","title":"Refreshable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Refreshable"}],"abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Refreshable"}],"url":"\/documentation\/atoms\/refreshable"},"doc://Atoms/documentation/Atoms/Resettable":{"role":"symbol","title":"Resettable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Resettable"}],"abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom reset behavior."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Resettable"}],"url":"\/documentation\/atoms\/resettable"},"doc://Atoms/documentation/Atoms/Resettable/ResetContext":{"deprecated":true,"role":"symbol","title":"Resettable.ResetContext","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResetContext"}],"abstract":[],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable\/ResetContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ResetContext"}],"url":"\/documentation\/atoms\/resettable\/resetcontext"}}}