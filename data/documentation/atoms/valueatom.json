{"topicSections":[{"anchor":"Associated-Types","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/Value"],"title":"Associated Types"},{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/value(context:)"],"anchor":"Instance-Methods","title":"Instance Methods"}],"metadata":{"navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAtom","kind":"identifier"}],"modules":[{"name":"Atoms"}],"externalID":"s:5Atoms9ValueAtomP","title":"ValueAtom","role":"symbol","symbolKind":"protocol"},"abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"title":"Inherits From"}],"sections":[],"seeAlsoSections":[{"title":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"generated":true,"anchor":"Atoms"}],"variants":[{"paths":["\/documentation\/atoms\/valueatom"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ValueAtom","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:5Atoms4AtomP","text":"Atom","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value is cached until it will no longer be watched or any of watching atoms will notify update."},{"text":" ","type":"text"},{"text":"This atom can be used to combine one or more other atoms and transform result to another value.","type":"text"},{"type":"text","text":" "},{"text":"Moreover, it can also be used to do dependency injection in compile safe and overridable for testing,","type":"text"},{"type":"text","text":" "},{"text":"by providing a dependency instance required in another atom.","type":"text"}]},{"level":2,"text":"Output Value","type":"heading","anchor":"Output-Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Self.Value"}]},{"level":2,"anchor":"Example","text":"Example","type":"heading"},{"syntax":"swift","type":"codeListing","code":["struct CharacterCountAtom: ValueAtom, Hashable {","    func value(context: Context) -> Int {","        let text = context.watch(TextAtom())","        return text.count","    }","}","","struct CharacterCountView: View {","    @Watch(CharacterCountAtom())","    var count","","    var body: some View {","        Text(\"Character count: \\(count)\")","    }","}"]}]}],"references":{"doc://Atoms/documentation/Atoms/StateAtom":{"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","title":"StateAtom","kind":"symbol","url":"\/documentation\/atoms\/stateatom","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"kind":"symbol","title":"PublisherAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublisherAtom","kind":"identifier"}],"type":"topic","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/publisheratom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/throwingtaskatom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ThrowingTaskAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that provides a throwing ","type":"text"},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous, throwing function.","type":"text"}],"kind":"symbol","title":"ThrowingTaskAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom"},"doc://Atoms/documentation/Atoms/ValueAtom/Value":{"abstract":[{"type":"text","text":"The type of value that this atom produces."}],"type":"topic","url":"\/documentation\/atoms\/valueatom\/value","role":"symbol","required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/Value","kind":"symbol","title":"Value","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/TaskAtom":{"kind":"symbol","title":"TaskAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskAtom","kind":"identifier"}],"type":"topic","abstract":[{"text":"An atom type that provides a nonthrowing ","type":"text"},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous function."}],"navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/taskatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom"},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Atoms/documentation/Atoms/Atom":{"url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","title":"Atom","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"title":"ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","kind":"symbol","abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","title":"AsyncPhase","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"type":"topic"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","role":"collection","url":"\/documentation\/atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"type":"topic"},"doc://Atoms/documentation/Atoms/ValueAtom":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","title":"ValueAtom","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"role":"symbol","url":"\/documentation\/atoms\/valueatom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"type":"topic"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","title":"AsyncSequenceAtom","navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"text":"as an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference"},{"type":"text","text":" value."}],"type":"topic"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhaseAtom"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","title":"AsyncPhaseAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","abstract":[{"text":"An atom that provides an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference"},{"type":"text","text":" value from the asynchronous throwable function."}]},"doc://Atoms/documentation/Atoms/ValueAtom/value(context:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"value"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Context","preciseIdentifier":"s:5Atoms4AtomP7Contexta","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms9ValueAtomP0B0Qa","text":"Value","kind":"typeIdentifier"}],"required":true,"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Creates a constant value to be provided via this atom.","type":"text"}],"title":"value(context:)","url":"\/documentation\/atoms\/valueatom\/value(context:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/value(context:)"}}}