{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom"},"kind":"symbol","metadata":{"title":"ValueAtom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueAtom"}],"externalID":"s:5Atoms9ValueAtomP","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"role":"symbol","roleHeading":"Protocol","symbolKind":"protocol","modules":[{"name":"Atoms"}]},"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"title":"Inherits From"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/valueatom"]}],"sections":[],"abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","text":"Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"The value is cached until it will no longer be watched or any of watching atoms will notify update."},{"text":" ","type":"text"},{"type":"text","text":"This atom can be used to combine one or more other atoms and transform result to another value."},{"type":"text","text":" "},{"type":"text","text":"Moreover, it can also be used to do dependency injection in compile safe and overridable for testing,"},{"type":"text","text":" "},{"type":"text","text":"by providing a dependency instance required in another atom."}],"type":"paragraph"},{"level":2,"text":"Output Value","anchor":"Output-Value","type":"heading"},{"inlineContent":[{"type":"text","text":"Self.Value"}],"type":"paragraph"},{"text":"Example","type":"heading","level":2,"anchor":"Example"},{"syntax":"swift","type":"codeListing","code":["struct CharacterCountAtom: ValueAtom, Hashable {","    func value(context: Context) -> Int {","        let text = context.watch(TextAtom())","        return text.count","    }","}","","struct CharacterCountView: View {","    @Watch(CharacterCountAtom())","    var count","","    var body: some View {","        Text(\"Character count: \\(count)\")","    }","}"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"generated":true,"title":"Atoms","anchor":"Atoms"}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/Value"],"generated":true,"anchor":"Associated-Types"},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/value(context:)"],"generated":true}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://Atoms/documentation/Atoms/ModifiedAtom":{"title":"ModifiedAtom","role":"symbol","abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModifiedAtom"}],"type":"topic","url":"\/documentation\/atoms\/modifiedatom"},"doc://Atoms/documentation/Atoms":{"role":"collection","url":"\/documentation\/atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","title":"AsyncPhaseAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"abstract":[{"text":"An atom that provides an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value from the asynchronous throwable function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncPhaseAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ValueAtom/value(context:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/value(context:)","title":"value(context:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"value"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP7Contexta","text":"Context"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms9ValueAtomP0B0Qa","text":"Value","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Creates a constant value to be provided via this atom."}],"url":"\/documentation\/atoms\/valueatom\/value(context:)","required":true,"role":"symbol"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"kind":"symbol","url":"\/documentation\/atoms\/publisheratom","title":"PublisherAtom","navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"code":"Publisher","type":"codeVoice"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublisherAtom"}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"abstract":[{"text":"An atom type that instantiates an observable object.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableObjectAtom"}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","title":"AsyncSequenceAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/TaskAtom":{"kind":"symbol","url":"\/documentation\/atoms\/taskatom","title":"TaskAtom","navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous function."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","title":"AsyncPhase","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/asyncphase","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncPhase","kind":"identifier"}],"abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom":{"kind":"symbol","title":"Atom","abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","url":"\/documentation\/atoms\/atom","navigatorTitle":[{"text":"Atom","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"type":"topic"},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"title":"StateAtom","url":"\/documentation\/atoms\/stateatom","type":"topic","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms/ValueAtom":{"kind":"symbol","url":"\/documentation\/atoms\/valueatom","title":"ValueAtom","navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ValueAtom/Value":{"kind":"symbol","title":"Value","required":true,"abstract":[{"text":"The type of value that this atom produces.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/Value","url":"\/documentation\/atoms\/valueatom\/value","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"type":"topic"},"doc://Atoms/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"type":"topic","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThrowingTaskAtom"}],"navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"title":"ThrowingTaskAtom"}}}