{"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/valueatom"]}],"sections":[],"kind":"symbol","metadata":{"title":"ValueAtom","modules":[{"name":"Atoms"}],"role":"symbol","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueAtom"}],"symbolKind":"protocol","externalID":"s:5Atoms9ValueAtomP","navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"topicSections":[{"anchor":"Associated-Types","title":"Associated Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/Value"],"generated":true},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/value(context:)"],"title":"Instance Methods","generated":true}],"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"title":"Inherits From","kind":"relationships"}],"seeAlsoSections":[{"generated":true,"title":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"anchor":"Atoms"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueAtom"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP","text":"Atom","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The value is cached until it will no longer be watched or any of watching atoms will notify update."},{"text":" ","type":"text"},{"text":"This atom can be used to combine one or more other atoms and transform result to another value.","type":"text"},{"text":" ","type":"text"},{"text":"Moreover, it can also be used to do dependency injection in compile safe and overridable for testing,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"by providing a dependency instance required in another atom."}],"type":"paragraph"},{"anchor":"Output-Value","type":"heading","text":"Output Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Self.Value"}]},{"anchor":"Example","level":2,"text":"Example","type":"heading"},{"syntax":"swift","type":"codeListing","code":["struct CharacterCountAtom: ValueAtom, Hashable {","    func value(context: Context) -> Int {","        let text = context.watch(TextAtom())","        return text.count","    }","}","","struct CharacterCountView: View {","    @Watch(CharacterCountAtom())","    var count","","    var body: some View {","        Text(\"Character count: \\(count)\")","    }","}"]}],"kind":"content"}],"references":{"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","url":"\/documentation\/atoms\/stateatom","title":"StateAtom"},"doc://Atoms/documentation/Atoms":{"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","url":"\/documentation\/atoms","role":"collection","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}]},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"abstract":[{"type":"text","text":"An atom that provides an "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" value from the asynchronous throwable function."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncPhaseAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","url":"\/documentation\/atoms\/asyncphaseatom","title":"AsyncPhaseAtom"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}],"type":"topic","title":"ThrowingTaskAtom","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/throwingtaskatom","kind":"symbol","abstract":[{"text":"An atom type that provides a throwing ","type":"text"},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"text":" value.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","url":"\/documentation\/atoms\/asyncsequenceatom","title":"AsyncSequenceAtom"},"doc://Atoms/documentation/Atoms/ValueAtom":{"abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAtom"}],"role":"symbol","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","url":"\/documentation\/atoms\/valueatom","title":"ValueAtom"},"doc://Atoms/documentation/Atoms/ValueAtom/Value":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"The type of value that this atom produces."}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"title":"Value","url":"\/documentation\/atoms\/valueatom\/value","kind":"symbol","required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/Value"},"doc://Atoms/documentation/Atoms/ValueAtom/value(context:)":{"abstract":[{"text":"Creates a constant value to be provided via this atom.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"value","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP7Contexta","text":"Context","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms9ValueAtomP0B0Qa","text":"Value","kind":"typeIdentifier"}],"role":"symbol","type":"topic","required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/value(context:)","title":"value(context:)","url":"\/documentation\/atoms\/valueatom\/value(context:)"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","type":"topic","title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom"},"doc://Atoms/documentation/Atoms/TaskAtom":{"abstract":[{"text":"An atom type that provides a nonthrowing ","type":"text"},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","url":"\/documentation\/atoms\/taskatom","title":"TaskAtom"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"type":"topic","title":"ModifiedAtom","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that applies a modifier to an atom.","type":"text"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}],"type":"topic","title":"PublisherAtom","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"url":"\/documentation\/atoms\/publisheratom","kind":"symbol","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"code":"Publisher","type":"codeVoice"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"}}}