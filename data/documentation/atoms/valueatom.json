{"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/Value"],"anchor":"Associated-Types","generated":true},{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/value(context:)"],"anchor":"Instance-Methods","title":"Instance Methods"}],"relationshipsSections":[{"title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"type":"inheritsFrom"}],"seeAlsoSections":[{"title":"Atoms","anchor":"Atoms","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"]}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAtom"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"The value is cached until it will no longer be watched or any of watching atoms will notify update.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This atom can be used to combine one or more other atoms and transform result to another value."},{"text":" ","type":"text"},{"type":"text","text":"Moreover, it can also be used to do dependency injection in compile safe and overridable for testing,"},{"text":" ","type":"text"},{"type":"text","text":"by providing a dependency instance required in another atom."}],"type":"paragraph"},{"type":"heading","text":"Output Value","level":2,"anchor":"Output-Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Self.Value"}]},{"level":2,"text":"Example","anchor":"Example","type":"heading"},{"type":"codeListing","syntax":"swift","code":["struct CharacterCountAtom: ValueAtom, Hashable {","    func value(context: Context) -> Int {","        let text = context.watch(TextAtom())","        return text.count","    }","}","","struct CharacterCountView: View {","    @Watch(CharacterCountAtom())","    var count","","    var body: some View {","        Text(\"Character count: \\(count)\")","    }","}"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/valueatom"]}],"abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"role":"symbol","externalID":"s:5Atoms9ValueAtomP","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"}],"roleHeading":"Protocol","title":"ValueAtom","modules":[{"name":"Atoms"}],"symbolKind":"protocol"},"references":{"doc://Atoms/documentation/Atoms/TaskAtom":{"title":"TaskAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskAtom"}],"url":"\/documentation\/atoms\/taskatom","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","kind":"symbol","url":"\/documentation\/atoms\/modifiedatom","abstract":[{"text":"An atom type that applies a modifier to an atom.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}],"title":"ModifiedAtom"},"doc://Atoms/documentation/Atoms/ValueAtom/Value":{"title":"Value","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"url":"\/documentation\/atoms\/valueatom\/value","abstract":[{"type":"text","text":"The type of value that this atom produces."}],"type":"topic","required":true,"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/Value"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","kind":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous, throwing function.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}],"title":"ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"title":"PublisherAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublisherAtom"}],"url":"\/documentation\/atoms\/publisheratom","abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"code":"Publisher","type":"codeVoice"},{"text":" as an ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"text":" value.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"text":"as an ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequenceAtom"}],"title":"AsyncSequenceAtom"},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","abstract":[{"type":"text","text":"An atom that provides an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"text":" value from the asynchronous throwable function.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncPhaseAtom","kind":"identifier"}],"title":"AsyncPhaseAtom"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"title":"AsyncPhase","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhase"}],"url":"\/documentation\/atoms\/asyncphase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"title":"Atom"},"doc://Atoms/documentation/Atoms/ValueAtom":{"title":"ValueAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAtom"}],"url":"\/documentation\/atoms\/valueatom","abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom"},"doc://Atoms/documentation/Atoms/ValueAtom/value(context:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom\/value(context:)","kind":"symbol","url":"\/documentation\/atoms\/valueatom\/value(context:)","abstract":[{"type":"text","text":"Creates a constant value to be provided via this atom."}],"required":true,"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:5Atoms4AtomP7Contexta"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms9ValueAtomP0B0Qa","text":"Value","kind":"typeIdentifier"}],"title":"value(context:)"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"title":"ObservableObjectAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"}}}