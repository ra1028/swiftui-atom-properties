{"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"watch"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"atom"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","text":"Produced"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","text":"Atom","preciseIdentifier":"s:5Atoms4AtomP"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An atom to watch.","type":"text"}]}],"name":"atom"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value associated with the given atom."}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This method returns a value for the given atom and initiates watching the atom so that","type":"text"},{"text":" ","type":"text"},{"text":"the current context gets updated when the atom notifies updates.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The value associated with the atom is cached until it is no longer watched or until"},{"type":"text","text":" "},{"text":"it is updated with a new value.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let context = ...","let text = context.watch(TextAtom())","print(text) \/\/ Prints the current value associated with `TextAtom`."]}]}],"abstract":[{"text":"Accesses the value associated with the given atom for reading and initiates watch to","type":"text"},{"text":" ","type":"text"},{"text":"receive its updates.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext\/watch(_:)"},"variants":[{"paths":["\/documentation\/atoms\/atomviewcontext\/watch(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Instance Method","externalID":"s:5Atoms15AtomViewContextV5watchy8ProducedQzxAA0B0RzlF","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"watch","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Node"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}],"title":"watch(_:)","modules":[{"name":"Atoms"}]},"references":{"doc://Atoms/documentation/Atoms/AtomViewContext/watch(_:)":{"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext\/watch(_:)","url":"\/documentation\/atoms\/atomviewcontext\/watch(_:)","abstract":[{"type":"text","text":"Accesses the value associated with the given atom for reading and initiates watch to"},{"text":" ","type":"text"},{"text":"receive its updates.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"watch"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}],"kind":"symbol","title":"watch(_:)"},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomViewContext":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","kind":"symbol","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomViewContext","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomViewContext"}],"title":"AtomViewContext","role":"symbol","url":"\/documentation\/atoms\/atomviewcontext"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"type":"topic","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Produced"}],"kind":"symbol","abstract":[{"type":"text","text":"The type of value that this atom produces."}],"url":"\/documentation\/atoms\/atom\/produced","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","title":"Produced"},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"}}}