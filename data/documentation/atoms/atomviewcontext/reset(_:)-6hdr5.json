{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomviewcontext\/reset(_:)-6hdr5"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"atom","kind":"internalParam"},{"kind":"text","text":": some "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An atom to reset."}],"type":"paragraph"}],"name":"atom"}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method resets the value for the given atom and then notifies downstream"},{"text":" ","type":"text"},{"type":"text","text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly"},{"text":" ","type":"text"},{"type":"text","text":"generated value will be produced."}]},{"syntax":"swift","type":"codeListing","code":["let context = ...","print(context.watch(TextAtom())) \/\/ Prints \"Text\"","context[TextAtom()] = \"New text\"","print(context.read(TextAtom())) \/\/ Prints \"New text\"","context.reset(TextAtom())","print(context.read(TextAtom())) \/\/ Prints \"Text\""]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext"]]},"sections":[],"metadata":{"externalID":"s:5Atoms15AtomViewContextV5resetyyxAA0B0RzlF","roleHeading":"Instance Method","role":"symbol","title":"reset(_:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"kind":"text","text":"(some "},{"preciseIdentifier":"s:5Atoms4AtomP","text":"Atom","kind":"typeIdentifier"},{"kind":"text","text":")"}],"modules":[{"name":"Atoms"}]},"abstract":[{"text":"Resets the value associated with the given atom, and then notifies.","type":"text"}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext\/reset(_:)-6hdr5","interfaceLanguage":"swift"},"references":{"doc://Atoms/documentation/Atoms/Atom":{"type":"topic","url":"\/documentation\/atoms\/atom","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"title":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},"doc://Atoms/documentation/Atoms/AtomViewContext/reset(_:)-6hdr5":{"url":"\/documentation\/atoms\/atomviewcontext\/reset(_:)-6hdr5","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"kind":"text","text":"(some "},{"preciseIdentifier":"s:5Atoms4AtomP","text":"Atom","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"reset(_:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext\/reset(_:)-6hdr5","type":"topic","abstract":[{"text":"Resets the value associated with the given atom, and then notifies.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomViewContext":{"url":"\/documentation\/atoms\/atomviewcontext","navigatorTitle":[{"text":"AtomViewContext","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomViewContext"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"title":"AtomViewContext","role":"symbol"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms"}}}