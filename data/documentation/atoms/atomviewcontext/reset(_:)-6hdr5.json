{"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"kind":"text","text":"(some "},{"text":"Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP"},{"kind":"text","text":")"}],"modules":[{"name":"Atoms"}],"title":"reset(_:)","symbolKind":"method","externalID":"s:5Atoms15AtomViewContextV5resetyyxAA0B0RzlF","roleHeading":"Instance Method","role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"variants":[{"paths":["\/documentation\/atoms\/atomviewcontext\/reset(_:)-6hdr5"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext\/reset(_:)-6hdr5","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"atom"},{"text":": some ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier","text":"Atom"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"atom","content":[{"inlineContent":[{"text":"An atom to reset.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This method resets the value for the given atom and then notifies downstream","type":"text"},{"type":"text","text":" "},{"text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"generated value will be produced."}]},{"syntax":"swift","code":["let context = ...","print(context.watch(TextAtom())) \/\/ Prints \"Text\"","context[TextAtom()] = \"New text\"","print(context.read(TextAtom())) \/\/ Prints \"New text\"","context.reset(TextAtom())","print(context.read(TextAtom())) \/\/ Prints \"Text\""],"type":"codeListing"}],"kind":"content"}],"references":{"doc://Atoms/documentation/Atoms/AtomViewContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","title":"AtomViewContext","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomViewContext"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/atomviewcontext","navigatorTitle":[{"text":"AtomViewContext","kind":"identifier"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}]},"doc://Atoms/documentation/Atoms/AtomViewContext/reset(_:)-6hdr5":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext\/reset(_:)-6hdr5","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"title":"reset(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"text":"(some ","kind":"text"},{"text":"Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP"},{"kind":"text","text":")"}],"url":"\/documentation\/atoms\/atomviewcontext\/reset(_:)-6hdr5"},"doc://Atoms/documentation/Atoms":{"role":"collection","type":"topic","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"kind":"symbol","title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]}}}