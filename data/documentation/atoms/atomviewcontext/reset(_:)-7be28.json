{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:5Atoms15AtomViewContextV5resetyyxAA10ResettableRzlF","modules":[{"name":"Atoms"}],"symbolKind":"method","role":"symbol","title":"reset(_:)","roleHeading":"Instance Method"},"kind":"symbol","variants":[{"paths":["\/documentation\/atoms\/atomviewcontext\/reset(_:)-7be28"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Calls arbitrary reset function of the given atom."}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext\/reset(_:)-7be28","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"atom"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","preciseIdentifier":"s:5Atoms10ResettableP","text":"Resettable","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"An atom to reset.","type":"text"}],"type":"paragraph"}],"name":"atom"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method only accepts atoms that conform to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","isActive":true,"type":"reference"},{"text":" protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Calls custom reset function of the given atom. Hence, it does not generate any new cache value or notify subscribers.","type":"text"}],"type":"paragraph"},{"code":["let context = ...","print(context.watch(ResettableTextAtom()) \/\/ Prints \"Text\"","context[ResettableTextAtom()] = \"New text\"","print(context.read(ResettableTextAtom())) \/\/ Prints \"New text\"","context.reset(ResettableTextAtom()) \/\/ Calls the custom reset function","print(context.read(ResettableTextAtom())) \/\/ Prints \"New text\""],"syntax":"swift","type":"codeListing"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext"]]},"references":{"doc://Atoms/documentation/Atoms/Resettable":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Resettable","kind":"identifier"}],"title":"Resettable","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","url":"\/documentation\/atoms\/resettable","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Resettable"}],"abstract":[{"text":"An attribute protocol that allows an atom to have a custom reset behavior.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomViewContext/reset(_:)-7be28":{"url":"\/documentation\/atoms\/atomviewcontext\/reset(_:)-7be28","kind":"symbol","abstract":[{"type":"text","text":"Calls arbitrary reset function of the given atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext\/reset(_:)-7be28","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":")"}],"title":"reset(_:)","type":"topic"},"doc://Atoms/documentation/Atoms":{"url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"type":"topic","kind":"symbol","title":"Atoms","role":"collection"},"doc://Atoms/documentation/Atoms/AtomViewContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomViewContext"}],"title":"AtomViewContext","url":"\/documentation\/atoms\/atomviewcontext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomViewContext"}]}}}