{"metadata":{"roleHeading":"Protocol","role":"symbol","modules":[{"name":"Atoms"}],"title":"Scoped","externalID":"s:5Atoms6ScopedP","symbolKind":"protocol","navigatorTitle":[{"text":"Scoped","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scoped"}]},"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"type":"inheritsFrom","kind":"relationships"},{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"type":"conformingTypes"}],"topicSections":[{"anchor":"Associated-Types","title":"Associated Types","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped\/ScopeID-swift.associatedtype"]},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped\/scopeID-2kb9d"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"seeAlsoSections":[{"generated":true,"title":"Attributes","anchor":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scoped"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier","text":"Atom"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"If multiple scopes are nested, you can define an arbitrary ","type":"text"},{"type":"codeVoice","code":"scopeID"},{"type":"text","text":" to ensure that"},{"text":" ","type":"text"},{"type":"text","text":"values are stored in a particular scope."},{"text":" ","type":"text"},{"text":"The atom with ","type":"text"},{"code":"scopeID","type":"codeVoice"},{"type":"text","text":" searches for the nearest "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","type":"reference","isActive":true},{"text":" with the matching ID in","type":"text"},{"type":"text","text":" "},{"text":"ancestor views, and if not found, the state is shared within the app.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Note that other atoms that depend on the scoped atom will be in a shared state and must be"},{"type":"text","text":" "},{"text":"given this attribute as well in order to scope them as well.","type":"text"}],"type":"paragraph"},{"anchor":"Example","type":"heading","text":"Example","level":2},{"syntax":"swift","type":"codeListing","code":["struct SearchScopeID: Hashable {}","","struct SearchQueryAtom: StateAtom, Scoped, Hashable {","    var scopeID: SearchScopeID {","        SearchScopeID()","    }","","    func defaultValue(context: Context) -> String {","         \"\"","    }","}","","AtomScope(id: SearchScopeID()) {","    SearchPane()","}"]}],"kind":"content"}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/scoped"]}],"abstract":[{"text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor","type":"text"},{"text":" ","type":"text"},{"text":"of where it is used and prevents it from being shared out of scope.","type":"text"}],"references":{"doc://Atoms/documentation/Atoms/Scoped/scopeID-2kb9d":{"kind":"symbol","abstract":[{"text":"A scope ID which is to find a matching scope.","type":"text"}],"role":"symbol","type":"topic","defaultImplementations":1,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scopeID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms6ScopedP7ScopeIDQa","kind":"typeIdentifier","text":"ScopeID"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped\/scopeID-2kb9d","title":"scopeID","url":"\/documentation\/atoms\/scoped\/scopeid-2kb9d","required":true},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"role":"symbol","type":"topic","url":"\/documentation\/atoms\/modifiedatom","navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","title":"ModifiedAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}],"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Node"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Scoped"},{"type":"text","text":", "},{"code":"Modifier","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomModifier","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Node.Produced","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Modifier.Base","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"An atom type that applies a modifier to an atom.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomScope":{"abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"kind":"symbol","url":"\/documentation\/atoms\/atomscope","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomScope"}],"navigatorTitle":[{"text":"AtomScope","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","title":"AtomScope","type":"topic"},"doc://Atoms/documentation/Atoms/KeepAlive":{"title":"KeepAlive","navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeepAlive"}],"url":"\/documentation\/atoms\/keepalive","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","type":"topic","abstract":[{"type":"text","text":"An attribute protocol to allow the value of an atom to continue being retained"},{"type":"text","text":" "},{"type":"text","text":"even after they are no longer watched."}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms/Scoped/ScopeID-swift.associatedtype":{"type":"topic","role":"symbol","kind":"symbol","title":"ScopeID","abstract":[{"type":"text","text":"A type of the scope ID which is to find a matching scope."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped\/ScopeID-swift.associatedtype","required":true,"url":"\/documentation\/atoms\/scoped\/scopeid-swift.associatedtype","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"ScopeID","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:5Atoms14DefaultScopeIDV","text":"DefaultScopeID","kind":"typeIdentifier"}]},"doc://Atoms/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Atoms\/s8SendableP","type":"unresolvable"},"doc://Atoms/documentation/Atoms/Scoped":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor"},{"text":" ","type":"text"},{"text":"of where it is used and prevents it from being shared out of scope.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Scoped","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","navigatorTitle":[{"text":"Scoped","kind":"identifier"}],"url":"\/documentation\/atoms\/scoped","kind":"symbol","title":"Scoped"}}}