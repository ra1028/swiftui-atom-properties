{"topicSections":[{"anchor":"Associated-Types","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Effect","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Key-swift.associatedtype","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced"],"title":"Associated Types"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/key-8ipu8","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/producer-qr7z"],"anchor":"Instance-Properties"},{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/effect(context:)-4wm5m","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/modifier(_:)"],"anchor":"Instance-Methods","title":"Instance Methods"},{"title":"Type Aliases","generated":true,"anchor":"Type-Aliases","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Context","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/CurrentContext"]}],"variants":[{"paths":["\/documentation\/atoms\/atom"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"metadata":{"roleHeading":"Protocol","externalID":"s:5Atoms4AtomP","modules":[{"name":"Atoms"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"role":"symbol","title":"Atom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"symbolKind":"protocol"},"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/Atoms\/s8SendableP"],"type":"inheritsFrom"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/Resettable","doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom"],"kind":"relationships","type":"inheritedBy","title":"Inherited By"},{"type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"kind":"relationships"}],"sections":[],"seeAlsoSections":[{"generated":true,"anchor":"Misc","title":"Misc","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","text":"Produced"},{"text":"> : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The value produced by an atom is created only when the atom is watched from somewhere,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and is immediately released when no longer watched."}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},"references":{"doc://Atoms/documentation/Atoms/Atom/effect(context:)-4wm5m":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/effect(context:)-4wm5m","url":"\/documentation\/atoms\/atom\/effect(context:)-4wm5m","title":"effect(context:)","kind":"symbol","required":true,"role":"symbol","abstract":[{"type":"text","text":"An effect for managing side effects that are synchronized with this atom’s lifecycle."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"effect"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CurrentContext","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP14CurrentContexta"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:5Atoms4AtomP6EffectQa"}],"defaultImplementations":1},"doc://Atoms/documentation/Atoms/AsyncPhase":{"abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncPhase","kind":"identifier"}],"kind":"symbol","title":"AsyncPhase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol"},"doc://Atoms/documentation/Atoms/Scoped":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Scoped","kind":"identifier"}],"abstract":[{"type":"text","text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor"},{"text":" ","type":"text"},{"text":"of where it is used and prevents it from being shared out of scope.","type":"text"}],"url":"\/documentation\/atoms\/scoped","type":"topic","title":"Scoped","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Scoped","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped"},"doc://Atoms/documentation/Atoms/Atom/Key-swift.associatedtype":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Key-swift.associatedtype","type":"topic","url":"\/documentation\/atoms\/atom\/key-swift.associatedtype","title":"Key","kind":"symbol","required":true,"role":"symbol","abstract":[{"text":"A type representing the stable identity of this atom.","type":"text"}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Key","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]},"doc://Atoms/documentation/Atoms/EmptyEffect":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"EmptyEffect","kind":"identifier"}],"abstract":[{"text":"An effect that doesn’t produce any effects.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"EmptyEffect"}],"url":"\/documentation\/atoms\/emptyeffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","type":"topic","role":"symbol","title":"EmptyEffect","kind":"symbol"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"abstract":[{"text":"An atom type that applies a modifier to an atom.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ModifiedAtom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"title":"ModifiedAtom","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Node"},{"type":"text","text":" conforms to "},{"code":"AsyncAtom","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Modifier"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AsyncAtomModifier"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Node.Produced"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Modifier.Base"},{"type":"text","text":"."}]},"url":"\/documentation\/atoms\/modifiedatom","kind":"symbol"},"doc://Atoms/documentation/Atoms/AnimationModifier":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","url":"\/documentation\/atoms\/animationmodifier","role":"symbol","abstract":[{"type":"text","text":"A modifier that animates the view watching the atom when the value updates."}],"type":"topic","kind":"symbol","title":"AnimationModifier","navigatorTitle":[{"text":"AnimationModifier","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnimationModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomStore":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomStore"}],"abstract":[{"text":"An object that stores the state of atoms and its dependency graph.","type":"text"}],"navigatorTitle":[{"text":"AtomStore","kind":"identifier"}],"url":"\/documentation\/atoms\/atomstore","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","type":"topic","role":"symbol","title":"AtomStore","kind":"symbol"},"doc://Atoms/documentation/Atoms/Atom/Context":{"abstract":[{"type":"text","text":"A type of the context structure to read, watch, and otherwise interact"},{"type":"text","text":" "},{"type":"text","text":"with other atoms."}],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Context","kind":"identifier"}],"kind":"symbol","title":"Atom.Context","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Context","navigatorTitle":[{"kind":"identifier","text":"Context"}],"url":"\/documentation\/atoms\/atom\/context","role":"symbol"},"doc://Atoms/documentation/Atoms/TaskAtom":{"navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","type":"topic","kind":"symbol","title":"TaskAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskAtom"}],"url":"\/documentation\/atoms\/taskatom","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}]},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhaseAtom"}],"kind":"symbol","title":"AsyncPhaseAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","url":"\/documentation\/atoms\/asyncphaseatom","type":"topic","navigatorTitle":[{"text":"AsyncPhaseAtom","kind":"identifier"}],"abstract":[{"text":"An atom that provides an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value from the asynchronous throwable function."}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncAtomModifier":{"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","kind":"symbol","url":"\/documentation\/atoms\/asyncatommodifier","title":"AsyncAtomModifier","navigatorTitle":[{"text":"AsyncAtomModifier","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncAtomModifier"}],"abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new refreshable value modified from the original value."}]},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"},"doc://Atoms/documentation/Atoms/Atom/CurrentContext":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"CurrentContext","kind":"identifier"}],"abstract":[{"text":"A type of the context structure to read, set, and otherwise interact","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with other atoms."}],"url":"\/documentation\/atoms\/atom\/currentcontext","type":"topic","title":"Atom.CurrentContext","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CurrentContext"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/CurrentContext"},"doc://Atoms/documentation/Atoms/ChangesModifier":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","url":"\/documentation\/atoms\/changesmodifier","role":"symbol","abstract":[{"text":"A modifier that prevents the atom from updating its child views or atoms when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"its new value is the same as its old value."}],"type":"topic","kind":"symbol","title":"ChangesModifier","navigatorTitle":[{"kind":"identifier","text":"ChangesModifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ChangesModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom/key-8ipu8":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/key-8ipu8","type":"topic","url":"\/documentation\/atoms\/atom\/key-8ipu8","title":"key","kind":"symbol","required":true,"role":"symbol","abstract":[{"text":"A unique value used to identify the atom.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"key"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Key","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP3KeyQa"}],"defaultImplementations":1},"doc://Atoms/documentation/Atoms/AsyncAtom":{"navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","type":"topic","kind":"symbol","title":"AsyncAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncAtom"}],"url":"\/documentation\/atoms\/asyncatom","abstract":[{"text":"Declares that a type can produce a refreshable value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"title":"AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"url":"\/documentation\/atoms\/asyncsequenceatom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceAtom"}],"navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms/TaskPhaseModifier":{"abstract":[{"type":"text","text":"An atom that provides a sequential value of the base atom as an enum"},{"text":" ","type":"text"},{"type":"text","text":"representation "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" that changes overtime."}],"type":"topic","title":"TaskPhaseModifier","navigatorTitle":[{"text":"TaskPhaseModifier","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskPhaseModifier"}],"role":"symbol","url":"\/documentation\/atoms\/taskphasemodifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","kind":"symbol"},"doc://Atoms/documentation/Atoms/Refreshable":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Refreshable"}],"abstract":[{"text":"An attribute protocol that allows an atom to have a custom refresh behavior.","type":"text"}],"url":"\/documentation\/atoms\/refreshable","type":"topic","title":"Refreshable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Refreshable","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable"},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/stateatom","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","role":"symbol"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","type":"topic","kind":"symbol","title":"Produced","required":true,"url":"\/documentation\/atoms\/atom\/produced","abstract":[{"text":"The type of value that this atom produces.","type":"text"}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Produced","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom/modifier(_:)":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/modifier(_:)","url":"\/documentation\/atoms\/atom\/modifier(_:)","title":"modifier(_:)","kind":"symbol","role":"symbol","abstract":[{"text":"Applies a modifier to an atom and returns a new atom.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"modifier","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}]},"doc://Atoms/documentation/Atoms/ValueAtom":{"type":"topic","url":"\/documentation\/atoms\/valueatom","abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"kind":"symbol","role":"symbol","title":"ValueAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ValueAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Resettable":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Resettable"}],"abstract":[{"text":"An attribute protocol that allows an atom to have a custom reset behavior.","type":"text"}],"url":"\/documentation\/atoms\/resettable","type":"topic","title":"Resettable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Resettable","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable"},"doc://Atoms/documentation/Atoms/AtomProducer":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","url":"\/documentation\/atoms\/atomproducer","role":"symbol","abstract":[{"type":"text","text":"Produces the value of an atom."}],"type":"topic","kind":"symbol","title":"AtomProducer","navigatorTitle":[{"kind":"identifier","text":"AtomProducer"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomProducer","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"url":"\/documentation\/atoms\/observableobjectatom","kind":"symbol","title":"ObservableObjectAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/AtomModifier":{"type":"topic","url":"\/documentation\/atoms\/atommodifier","abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new value modified from the original value."}],"kind":"symbol","role":"symbol","title":"AtomModifier","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomModifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","navigatorTitle":[{"kind":"identifier","text":"AtomModifier"}]},"doc://Atoms/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Atoms\/s8SendableP"},"doc://Atoms/documentation/Atoms/ChangesOfModifier":{"abstract":[{"text":"A modifier that derives a partial property with the specified key path from the original atom","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and prevent it from updating its downstream when its new value is equivalent to old value."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChangesOfModifier"}],"navigatorTitle":[{"kind":"identifier","text":"ChangesOfModifier"}],"kind":"symbol","url":"\/documentation\/atoms\/changesofmodifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","title":"ChangesOfModifier","type":"topic"},"doc://Atoms/documentation/Atoms/Atom/Effect":{"kind":"symbol","required":true,"role":"symbol","abstract":[{"type":"text","text":"The type of effect for managing side effects."}],"url":"\/documentation\/atoms\/atom\/effect","type":"topic","title":"Effect","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Effect","kind":"identifier"},{"kind":"text","text":" : "},{"text":"AtomEffect","preciseIdentifier":"s:5Atoms10AtomEffectP","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","text":"EmptyEffect","preciseIdentifier":"s:5Atoms11EmptyEffectV"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Effect"},"doc://Atoms/documentation/Atoms/KeepAlive":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","type":"topic","url":"\/documentation\/atoms\/keepalive","title":"KeepAlive","kind":"symbol","navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"role":"symbol","abstract":[{"text":"An attribute protocol to allow the value of an atom to continue being retained","type":"text"},{"text":" ","type":"text"},{"text":"even after they are no longer watched.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeepAlive"}]},"doc://Atoms/documentation/Atoms/Atom/producer-qr7z":{"kind":"symbol","required":true,"role":"symbol","abstract":[{"type":"text","text":"A producer that produces the value of this atom."}],"url":"\/documentation\/atoms\/atom\/producer-qr7z","type":"topic","title":"producer","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"producer","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomProducer","preciseIdentifier":"s:5Atoms12AtomProducerV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/producer-qr7z","defaultImplementations":8},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom","title":"Atom","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"title":"ThrowingTaskAtom","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ThrowingTaskAtom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskAtom"}],"url":"\/documentation\/atoms\/throwingtaskatom","type":"topic","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous, throwing function.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/AtomRefreshProducer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomRefreshProducer"}],"abstract":[{"text":"Produces the refreshed value of an atom.","type":"text"}],"navigatorTitle":[{"text":"AtomRefreshProducer","kind":"identifier"}],"url":"\/documentation\/atoms\/atomrefreshproducer","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer","type":"topic","role":"symbol","title":"AtomRefreshProducer","kind":"symbol"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","type":"topic","kind":"symbol","title":"PublisherAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/publisheratom","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"code":"Publisher","type":"codeVoice"},{"text":" as an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}]}}}