{"metadata":{"platforms":[],"title":"Refreshable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Refreshable","kind":"identifier"}],"symbolKind":"protocol","externalID":"s:5Atoms11RefreshableP","modules":[{"name":"Atoms"}],"role":"symbol","roleHeading":"Protocol","navigatorTitle":[{"text":"Refreshable","kind":"identifier"}]},"topicSections":[{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Refreshable\/refresh(context:)"],"title":"Instance Methods"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Refreshable"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","text":"Atom"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is useful when creating a wrapper atom and you want to transparently refresh the atom underneath."},{"type":"text","text":" "},{"text":"Note that the custom refresh will not be triggered when the atom is overridden.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct UserAtom: ValueAtom, Refreshable, Hashable {","    func value(context: Context) -> AsyncPhase<User?, Never> {","        context.watch(FetchUserAtom().phase)","    }","","    func refresh(context: CurrentContext) async -> AsyncPhase<User?, Never> {","        await context.refresh(FetchUserAtom().phase)","    }","}","","private struct FetchUserAtom: TaskAtom, Hashable {","    func value(context: Context) async -> User? {","        await fetchUser()","    }","}"]}]}],"sections":[],"kind":"symbol","relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"`Refreshable` is deprecated. Use a custom refresh function or other alternatives instead.","type":"text"}]}],"abstract":[{"text":"An attribute protocol that allows an atom to have a custom refresh behavior.","type":"text"}],"seeAlsoSections":[{"anchor":"Deprecated","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Resettable","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"],"title":"Deprecated","generated":true}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/refreshable"]}],"references":{"doc://Atoms/documentation/Atoms/Resettable":{"title":"Resettable","url":"\/documentation\/atoms\/resettable","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Resettable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Resettable"}],"type":"topic","role":"symbol","deprecated":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","abstract":[{"text":"An attribute protocol that allows an atom to have a custom reset behavior.","type":"text"}]},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms/Refreshable/refresh(context:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"refresh"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"CurrentContext","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP14CurrentContexta"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"}],"type":"topic","title":"refresh(context:)","url":"\/documentation\/atoms\/refreshable\/refresh(context:)","kind":"symbol","role":"symbol","deprecated":true,"abstract":[{"text":"Refreshes and then return a result value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable\/refresh(context:)","required":true},"doc://Atoms/documentation/Atoms/Refreshable":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","kind":"symbol","title":"Refreshable","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Refreshable","kind":"identifier"}],"url":"\/documentation\/atoms\/refreshable","deprecated":true,"navigatorTitle":[{"text":"Refreshable","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/EmptyEffect":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","kind":"symbol","type":"topic","abstract":[{"text":"An effect that doesnâ€™t produce any effects.","type":"text"}],"title":"EmptyEffect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"EmptyEffect","kind":"identifier"}],"url":"\/documentation\/atoms\/emptyeffect","deprecated":true,"navigatorTitle":[{"text":"EmptyEffect","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/MergedEffect":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"An atom effect that merges multiple atom effects into one."}],"title":"MergedEffect","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergedEffect"}],"url":"\/documentation\/atoms\/mergedeffect","deprecated":true,"navigatorTitle":[{"text":"MergedEffect","kind":"identifier"}]},"doc://Atoms/documentation/Atoms":{"role":"collection","type":"topic","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"kind":"symbol","title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms"},"doc://Atoms/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable"}}}