{"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"sections":[],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Refreshable"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"}],"platforms":["macOS"]}]},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"It is useful when creating a wrapper atom and you want to transparently refresh the atom underneath.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that the custom refresh will not be triggered when the atom is overridden."}]},{"syntax":"swift","code":["struct UserAtom: ValueAtom, Refreshable, Hashable {","    func value(context: Context) -> AsyncPhase<User?, Never> {","        context.watch(FetchUserAtom().phase)","    }","","    func refresh(context: CurrentContext) async -> AsyncPhase<User?, Never> {","        await context.refresh(FetchUserAtom().phase)","    }","}","","private struct FetchUserAtom: TaskAtom, Hashable {","    func value(context: Context) async -> User? {","        await fetchUser()","    }","}"],"type":"codeListing"}],"kind":"content"}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"`Refreshable` is deprecated. Use a custom refresh function or other alternatives instead."}],"type":"paragraph"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"seeAlsoSections":[{"anchor":"Deprecated","generated":true,"title":"Deprecated","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Resettable","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"]}],"metadata":{"roleHeading":"Protocol","title":"Refreshable","role":"symbol","modules":[{"name":"Atoms"}],"externalID":"s:5Atoms11RefreshableP","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Refreshable"}],"navigatorTitle":[{"kind":"identifier","text":"Refreshable"}],"symbolKind":"protocol","platforms":[]},"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/refreshable"]}],"topicSections":[{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Refreshable\/refresh(context:)"]}],"kind":"symbol","references":{"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Atoms/documentation/Atoms/Resettable":{"url":"\/documentation\/atoms\/resettable","title":"Resettable","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","role":"symbol","abstract":[{"text":"An attribute protocol that allows an atom to have a custom reset behavior.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Resettable","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Resettable"}],"deprecated":true},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"},"doc://Atoms/documentation/Atoms/Refreshable":{"type":"topic","url":"\/documentation\/atoms\/refreshable","role":"symbol","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","title":"Refreshable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Refreshable"}],"kind":"symbol","navigatorTitle":[{"text":"Refreshable","kind":"identifier"}],"deprecated":true},"doc://Atoms/documentation/Atoms/Refreshable/refresh(context:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable\/refresh(context:)","required":true,"url":"\/documentation\/atoms\/refreshable\/refresh(context:)","abstract":[{"text":"Refreshes and then return a result value.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"refresh"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP14CurrentContexta","text":"CurrentContext","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"}],"deprecated":true,"title":"refresh(context:)","type":"topic","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/MergedEffect":{"url":"\/documentation\/atoms\/mergedeffect","title":"MergedEffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","role":"symbol","abstract":[{"type":"text","text":"An atom effect that merges multiple atom effects into one."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergedEffect"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"MergedEffect","kind":"identifier"}],"deprecated":true},"doc://Atoms/documentation/Atoms/EmptyEffect":{"navigatorTitle":[{"kind":"identifier","text":"EmptyEffect"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","url":"\/documentation\/atoms\/emptyeffect","abstract":[{"type":"text","text":"An effect that doesnâ€™t produce any effects."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyEffect"}],"deprecated":true,"title":"EmptyEffect","type":"topic","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"title":"Atom"}}}