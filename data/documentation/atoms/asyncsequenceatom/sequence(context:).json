{"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom"]]},"variants":[{"paths":["\/documentation\/atoms\/asyncsequenceatom\/sequence(context:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sequence","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Context","preciseIdentifier":"s:5Atoms4AtomP7Contexta","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Context","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms17AsyncSequenceAtomP0C0Qa","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence","kind":"typeIdentifier","text":"Sequence"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A context structure to read, watch, and otherwise","type":"text"},{"type":"text","text":" "},{"text":"interact with other atoms.","type":"text"}],"type":"paragraph"}],"name":"context"}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"text":"An asynchronous sequence that produces asynchronous, sequential elements.","type":"text"}],"type":"paragraph"}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"The sequence that is produced by this method must be instantiated anew each time this method","type":"text"},{"type":"text","text":" "},{"text":"is called. Otherwise, it could throw a fatal error because Swift Concurrency  doesnâ€™t allow","type":"text"},{"type":"text","text":" "},{"text":"single ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" instance to be shared between multiple locations.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Creates an asynchronous sequence to be started when this atom is actually used.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Atoms"}],"role":"symbol","symbolKind":"method","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sequence","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP7Contexta","text":"Context"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17AsyncSequenceAtomP0C0Qa"}],"title":"sequence(context:)","externalID":"s:5Atoms17AsyncSequenceAtomP8sequence7context0C0QzAA0D18TransactionContextV_tF"},"kind":"symbol","references":{"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/Sequence":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"The type of asynchronous sequence that this atom manages."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence","title":"Sequence","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Sequence"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci","text":"AsyncSequence"}],"required":true,"url":"\/documentation\/atoms\/asyncsequenceatom\/sequence","kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/sequence(context:)":{"kind":"symbol","abstract":[{"text":"Creates an asynchronous sequence to be started when this atom is actually used.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sequence"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:5Atoms4AtomP7Contexta"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17AsyncSequenceAtomP0C0Qa"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)","title":"sequence(context:)","url":"\/documentation\/atoms\/asyncsequenceatom\/sequence(context:)","required":true},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" value.","type":"text"}],"kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","type":"topic","role":"symbol","title":"AsyncSequenceAtom","navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom/Context":{"abstract":[{"text":"A type of the context structure to read, watch, and otherwise interact","type":"text"},{"type":"text","text":" "},{"text":"with other atoms.","type":"text"}],"title":"Atom.Context","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Context"}],"url":"\/documentation\/atoms\/atom\/context","navigatorTitle":[{"kind":"identifier","text":"Context"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Context"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase","kind":"symbol"},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"}}}