{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/asyncsequenceatom\/sequence(context:)"]}],"kind":"symbol","metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sequence","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP7Contexta","text":"Context","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17AsyncSequenceAtomP0C0Qa","text":"Sequence"}],"modules":[{"name":"Atoms"}],"symbolKind":"method","title":"sequence(context:)","role":"symbol","externalID":"s:5Atoms17AsyncSequenceAtomP8sequence7context0C0QzAA0D18TransactionContextV_tF","required":true},"abstract":[{"type":"text","text":"Creates an asynchronous sequence to be started when this atom is actually used."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sequence","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Context","text":"Context","preciseIdentifier":"s:5Atoms4AtomP7Contexta"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence","text":"Sequence","preciseIdentifier":"s:5Atoms17AsyncSequenceAtomP0C0Qa"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"type":"text","text":"interact with other atoms."}],"type":"paragraph"}],"name":"context"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An asynchronous sequence that produces asynchronous, sequential elements."}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The sequence that is produced by this method must be instantiated anew each time this method"},{"type":"text","text":" "},{"text":"is called. Otherwise, it could throw a fatal error because Swift Concurrency  doesnâ€™t allow","type":"text"},{"text":" ","type":"text"},{"text":"single ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" instance to be shared between multiple locations."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)"},"references":{"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/sequence(context:)":{"abstract":[{"text":"Creates an asynchronous sequence to be started when this atom is actually used.","type":"text"}],"required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sequence"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","preciseIdentifier":"s:5Atoms4AtomP7Contexta","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms17AsyncSequenceAtomP0C0Qa","text":"Sequence","kind":"typeIdentifier"}],"url":"\/documentation\/atoms\/asyncsequenceatom\/sequence(context:)","title":"sequence(context:)","role":"symbol","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms":{"role":"collection","url":"\/documentation\/atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/Atom/Context":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Context","url":"\/documentation\/atoms\/atom\/context","navigatorTitle":[{"kind":"identifier","text":"Context"}],"abstract":[{"type":"text","text":"A type of the context structure to read, watch, and otherwise interact"},{"type":"text","text":" "},{"type":"text","text":"with other atoms."}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"title":"Atom.Context","role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/Sequence":{"abstract":[{"text":"The type of asynchronous sequence that this atom manages.","type":"text"}],"required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Sequence"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sci","text":"AsyncSequence","kind":"typeIdentifier"}],"url":"\/documentation\/atoms\/asyncsequenceatom\/sequence","title":"Sequence","role":"symbol","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","title":"AsyncSequenceAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","title":"AsyncPhase","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/asyncphase","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncPhase","kind":"identifier"}],"abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}]}}}