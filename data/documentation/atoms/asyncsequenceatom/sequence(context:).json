{"sections":[],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sequence","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP7Contexta","text":"Context"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:5Atoms17AsyncSequenceAtomP0C0Qa"}],"roleHeading":"Instance Method","externalID":"s:5Atoms17AsyncSequenceAtomP8sequence7context0C0QzAA0D18TransactionContextV_tF","symbolKind":"method","title":"sequence(context:)","modules":[{"name":"Atoms"}],"role":"symbol","required":true},"abstract":[{"text":"Creates an asynchronous sequence to be started when this atom is actually used.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/asyncsequenceatom\/sequence(context:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sequence"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP7Contexta","text":"Context","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Context"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17AsyncSequenceAtomP0C0Qa","text":"Sequence"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"text":"interact with other atoms.","type":"text"}],"type":"paragraph"}],"name":"context"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An asynchronous sequence that produces asynchronous, sequential elements.","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The sequence that is produced by this method must be instantiated anew each time this method","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is called. Otherwise, it could throw a fatal error because Swift Concurrency  doesnâ€™t allow"},{"type":"text","text":" "},{"type":"text","text":"single "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" instance to be shared between multiple locations."}]}]}],"references":{"doc://Atoms/documentation/Atoms/Atom/Context":{"abstract":[{"type":"text","text":"A type of the context structure to read, watch, and otherwise interact"},{"type":"text","text":" "},{"type":"text","text":"with other atoms."}],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Context","kind":"identifier"}],"kind":"symbol","title":"Atom.Context","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Context","navigatorTitle":[{"kind":"identifier","text":"Context"}],"url":"\/documentation\/atoms\/atom\/context","role":"symbol"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/Sequence":{"abstract":[{"type":"text","text":"The type of asynchronous sequence that this atom manages."}],"type":"topic","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sequence","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci","text":"AsyncSequence"}],"kind":"symbol","title":"Sequence","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence","url":"\/documentation\/atoms\/asyncsequenceatom\/sequence","role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/sequence(context:)":{"title":"sequence(context:)","abstract":[{"type":"text","text":"Creates an asynchronous sequence to be started when this atom is actually used."}],"url":"\/documentation\/atoms\/asyncsequenceatom\/sequence(context:)","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sequence"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP7Contexta"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17AsyncSequenceAtomP0C0Qa"}],"required":true,"role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncPhase","kind":"identifier"}],"kind":"symbol","title":"AsyncPhase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"title":"AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"url":"\/documentation\/atoms\/asyncsequenceatom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceAtom"}],"navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","kind":"symbol"}}}