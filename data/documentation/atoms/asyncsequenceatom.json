{"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom"},"metadata":{"title":"AsyncSequenceAtom","role":"symbol","roleHeading":"Protocol","externalID":"s:5Atoms17AsyncSequenceAtomP","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"symbolKind":"protocol","modules":[{"name":"Atoms"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequenceAtom"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"An atom type that provides asynchronous, sequential elements of the given ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference"},{"type":"text","text":" value."}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence"],"title":"Associated Types","anchor":"Associated-Types"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"}],"kind":"symbol","relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"title":"Inherits From"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","preciseIdentifier":"s:5Atoms9AsyncAtomP"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"The sequential elements emitted by the ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" will be converted into an enum representation"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"text":" that changes overtime. When the sequence emits new elements, it notifies changes to","type":"text"},{"type":"text","text":" "},{"text":"downstream atoms and views, so that they can consume it without suspension points which spawn with","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"await"},{"text":" keyword.","type":"text"}]},{"anchor":"Output-Value","type":"heading","level":2,"text":"Output Value"},{"inlineContent":[{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"text":"<Self.Sequence.Element, any Error>","type":"text"}],"type":"paragraph"},{"type":"heading","level":2,"anchor":"Example","text":"Example"},{"type":"codeListing","code":["struct QuakeMonitorAtom: AsyncSequenceAtom, Hashable {","    func sequence(context: Context) -> AsyncStream<Quake> {","        AsyncStream { continuation in","            let monitor = QuakeMonitor()","            monitor.quakeHandler = { quake in","                continuation.yield(quake)","            }","            continuation.onTermination = { @Sendable _ in","                monitor.stopMonitoring()","            }","            monitor.startMonitoring()","        }","    }","}","","struct QuakeMonitorView: View {","    @Watch(QuakeMonitorAtom())","    var quakes","","    var body: some View {","        switch quakes {","        case .suspending, .failure:","            Text(\"Calm\")","","        case .success(let quake):","            Text(\"Quake: \\(quake.date)\")","        }","    }","}"],"syntax":"swift"}]}],"seeAlsoSections":[{"generated":true,"anchor":"Atoms","title":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/asyncsequenceatom"]}],"references":{"doc://Atoms/documentation/Atoms/ValueAtom":{"type":"topic","title":"ValueAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","url":"\/documentation\/atoms\/valueatom","role":"symbol","abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}]},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase","kind":"symbol"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"type":"topic","navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/observableobjectatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","title":"ObservableObjectAtom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/sequence(context:)":{"kind":"symbol","abstract":[{"text":"Creates an asynchronous sequence to be started when this atom is actually used.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sequence"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:5Atoms4AtomP7Contexta"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17AsyncSequenceAtomP0C0Qa"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)","title":"sequence(context:)","url":"\/documentation\/atoms\/asyncsequenceatom\/sequence(context:)","required":true},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/Sequence":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"The type of asynchronous sequence that this atom manages."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence","title":"Sequence","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Sequence"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci","text":"AsyncSequence"}],"required":true,"url":"\/documentation\/atoms\/asyncsequenceatom\/sequence","kind":"symbol"},"doc://Atoms/documentation/Atoms/StateAtom":{"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom","role":"symbol","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","title":"StateAtom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncAtom":{"url":"\/documentation\/atoms\/asyncatom","kind":"symbol","navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","type":"topic","role":"symbol","title":"AsyncAtom","abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"kind":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","type":"topic","role":"symbol","title":"ThrowingTaskAtom","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}]},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" value.","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"role":"symbol","title":"PublisherAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/publisheratom"},"doc://Atoms/documentation/Atoms/TaskAtom":{"type":"topic","title":"TaskAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","url":"\/documentation\/atoms\/taskatom","role":"symbol","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous function.","type":"text"}],"navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"type":"topic","abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"kind":"symbol","title":"ModifiedAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ModifiedAtom"}],"role":"symbol","navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" value.","type":"text"}],"kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","type":"topic","role":"symbol","title":"AsyncSequenceAtom","navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","abstract":[{"text":"An atom that provides an ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value from the asynchronous throwable function."}],"kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","type":"topic","role":"symbol","title":"AsyncPhaseAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhaseAtom"}]}}}