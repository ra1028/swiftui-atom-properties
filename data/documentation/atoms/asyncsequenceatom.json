{"abstract":[{"text":"An atom type that provides asynchronous, sequential elements of the given ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"text":"as an ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/asyncsequenceatom"]}],"topicSections":[{"generated":true,"title":"Associated Types","anchor":"Associated-Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence"]},{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)"],"generated":true}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom"},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"symbolKind":"protocol","externalID":"s:5Atoms17AsyncSequenceAtomP","modules":[{"name":"Atoms"}],"title":"AsyncSequenceAtom","roleHeading":"Protocol"},"relationshipsSections":[{"title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"type":"inheritsFrom"}],"seeAlsoSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"generated":true,"title":"Atoms","anchor":"Atoms"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","text":"AsyncAtom","preciseIdentifier":"s:5Atoms9AsyncAtomP"}],"platforms":["macOS"]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"text":"The sequential elements emitted by the ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" will be converted into an enum representation","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" that changes overtime. When the sequence emits new elements, it notifies changes to"},{"text":" ","type":"text"},{"type":"text","text":"downstream atoms and views, so that they can consume it without suspension points which spawn with"},{"type":"text","text":" "},{"type":"codeVoice","code":"await"},{"type":"text","text":" keyword."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Output Value","anchor":"Output-Value"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":"<Self.Sequence.Element, any Error>"}]},{"anchor":"Example","text":"Example","type":"heading","level":2},{"code":["struct QuakeMonitorAtom: AsyncSequenceAtom, Hashable {","    func sequence(context: Context) -> AsyncStream<Quake> {","        AsyncStream { continuation in","            let monitor = QuakeMonitor()","            monitor.quakeHandler = { quake in","                continuation.yield(quake)","            }","            continuation.onTermination = { @Sendable _ in","                monitor.stopMonitoring()","            }","            monitor.startMonitoring()","        }","    }","}","","struct QuakeMonitorView: View {","    @Watch(QuakeMonitorAtom())","    var quakes","","    var body: some View {","        switch quakes {","        case .suspending, .failure:","            Text(\"Calm\")","","        case .success(let quake):","            Text(\"Quake: \\(quake.date)\")","        }","    }","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"sections":[],"references":{"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"abstract":[{"type":"text","text":"An atom that provides an "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" value from the asynchronous throwable function."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncPhaseAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","url":"\/documentation\/atoms\/asyncphaseatom","title":"AsyncPhaseAtom"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","type":"topic","title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/TaskAtom":{"abstract":[{"text":"An atom type that provides a nonthrowing ","type":"text"},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","url":"\/documentation\/atoms\/taskatom","title":"TaskAtom"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"text":" value.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","url":"\/documentation\/atoms\/asyncsequenceatom","title":"AsyncSequenceAtom"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAtom","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"kind":"symbol","url":"\/documentation\/atoms\/asyncatom","navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"title":"AsyncAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"type":"topic","title":"ModifiedAtom","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that applies a modifier to an atom.","type":"text"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","url":"\/documentation\/atoms\/stateatom","title":"StateAtom"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}]},"doc://Atoms/documentation/Atoms":{"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","url":"\/documentation\/atoms","role":"collection","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/sequence(context:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sequence"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP7Contexta"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Sequence","preciseIdentifier":"s:5Atoms17AsyncSequenceAtomP0C0Qa","kind":"typeIdentifier"}],"kind":"symbol","required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)","title":"sequence(context:)","type":"topic","abstract":[{"text":"Creates an asynchronous sequence to be started when this atom is actually used.","type":"text"}],"role":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom\/sequence(context:)"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}],"type":"topic","title":"ThrowingTaskAtom","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/throwingtaskatom","kind":"symbol","abstract":[{"text":"An atom type that provides a throwing ","type":"text"},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}],"type":"topic","title":"PublisherAtom","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"url":"\/documentation\/atoms\/publisheratom","kind":"symbol","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"code":"Publisher","type":"codeVoice"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Atoms/documentation/Atoms/ValueAtom":{"abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAtom"}],"role":"symbol","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","url":"\/documentation\/atoms\/valueatom","title":"ValueAtom"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/Sequence":{"title":"Sequence","required":true,"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci","text":"AsyncSequence"}],"kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom\/sequence","type":"topic","abstract":[{"type":"text","text":"The type of asynchronous sequence that this atom manages."}]}}}