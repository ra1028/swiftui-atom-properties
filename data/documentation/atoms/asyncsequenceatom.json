{"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"kind":"relationships","title":"Inherits From"}],"sections":[],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequenceAtom"}],"navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"title":"AsyncSequenceAtom","externalID":"s:5Atoms17AsyncSequenceAtomP","roleHeading":"Protocol","symbolKind":"protocol","role":"symbol","modules":[{"name":"Atoms"}]},"seeAlsoSections":[{"title":"Atoms","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"anchor":"Atoms"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncAtom","preciseIdentifier":"s:5Atoms9AsyncAtomP","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The sequential elements emitted by the ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" will be converted into an enum representation"},{"type":"text","text":" "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" that changes overtime. When the sequence emits new elements, it notifies changes to"},{"type":"text","text":" "},{"text":"downstream atoms and views, so that they can consume it without suspension points which spawn with","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"await"},{"text":" keyword.","type":"text"}]},{"anchor":"Output-Value","text":"Output Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"text":"<Self.Sequence.Element, any Error>","type":"text"}]},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"type":"codeListing","code":["struct QuakeMonitorAtom: AsyncSequenceAtom, Hashable {","    func sequence(context: Context) -> AsyncStream<Quake> {","        AsyncStream { continuation in","            let monitor = QuakeMonitor()","            monitor.quakeHandler = { quake in","                continuation.yield(quake)","            }","            continuation.onTermination = { @Sendable _ in","                monitor.stopMonitoring()","            }","            monitor.startMonitoring()","        }","    }","}","","struct QuakeMonitorView: View {","    @Watch(QuakeMonitorAtom())","    var quakes","","    var body: some View {","        switch quakes {","        case .suspending, .failure:","            Text(\"Calm\")","","        case .success(let quake):","            Text(\"Quake: \\(quake.date)\")","        }","    }","}"],"syntax":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence"],"title":"Associated Types","anchor":"Associated-Types","generated":true},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"}],"variants":[{"paths":["\/documentation\/atoms\/asyncsequenceatom"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"text":"as an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}],"kind":"symbol","references":{"doc://Atoms/documentation/Atoms/AsyncAtom":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","url":"\/documentation\/atoms\/asyncatom","type":"topic","abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAtom","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"title":"AsyncAtom"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/throwingtaskatom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ThrowingTaskAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that provides a throwing ","type":"text"},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous, throwing function.","type":"text"}],"kind":"symbol","title":"ThrowingTaskAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","title":"AsyncSequenceAtom","navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"text":"as an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference"},{"type":"text","text":" value."}],"type":"topic"},"doc://Atoms/documentation/Atoms/StateAtom":{"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","title":"StateAtom","kind":"symbol","url":"\/documentation\/atoms\/stateatom","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/Sequence":{"required":true,"title":"Sequence","abstract":[{"type":"text","text":"The type of asynchronous sequence that this atom manages."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence","url":"\/documentation\/atoms\/asyncsequenceatom\/sequence","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Sequence"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci","text":"AsyncSequence"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","title":"AsyncPhase","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"type":"topic"},"doc://Atoms/documentation/Atoms/Atom":{"url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","title":"Atom","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},"doc://Atoms/documentation/Atoms/ValueAtom":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","title":"ValueAtom","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"role":"symbol","url":"\/documentation\/atoms\/valueatom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"type":"topic"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"title":"ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","kind":"symbol","abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"kind":"symbol","title":"PublisherAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublisherAtom","kind":"identifier"}],"type":"topic","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/publisheratom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/sequence(context:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)","role":"symbol","title":"sequence(context:)","abstract":[{"type":"text","text":"Creates an asynchronous sequence to be started when this atom is actually used."}],"required":true,"type":"topic","kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom\/sequence(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sequence","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP7Contexta","text":"Context"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms17AsyncSequenceAtomP0C0Qa","text":"Sequence","kind":"typeIdentifier"}]},"doc://Atoms/documentation/Atoms/TaskAtom":{"kind":"symbol","title":"TaskAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskAtom","kind":"identifier"}],"type":"topic","abstract":[{"text":"An atom type that provides a nonthrowing ","type":"text"},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous function."}],"navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/taskatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","role":"collection","url":"\/documentation\/atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"type":"topic"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhaseAtom"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","title":"AsyncPhaseAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","abstract":[{"text":"An atom that provides an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference"},{"type":"text","text":" value from the asynchronous throwable function."}]},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"}}}