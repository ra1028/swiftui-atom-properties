{"abstract":[{"text":"An atom type that provides asynchronous, sequential elements of the given ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"text":"as an ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" value."}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence"],"anchor":"Associated-Types","generated":true},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)"],"title":"Instance Methods","generated":true}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"metadata":{"title":"AsyncSequenceAtom","symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"externalID":"s:5Atoms17AsyncSequenceAtomP","modules":[{"name":"Atoms"}],"roleHeading":"Protocol","role":"symbol"},"seeAlsoSections":[{"title":"Atoms","generated":true,"anchor":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"]}],"variants":[{"paths":["\/documentation\/atoms\/asyncsequenceatom"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:5Atoms9AsyncAtomP","text":"AsyncAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"The sequential elements emitted by the "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" will be converted into an enum representation","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" that changes overtime. When the sequence emits new elements, it notifies changes to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"downstream atoms and views, so that they can consume it without suspension points which spawn with"},{"text":" ","type":"text"},{"type":"codeVoice","code":"await"},{"type":"text","text":" keyword."}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Output-Value","text":"Output Value"},{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference"},{"type":"text","text":"<Self.Sequence.Element, any Error>"}]},{"level":2,"type":"heading","text":"Example","anchor":"Example"},{"syntax":"swift","code":["struct QuakeMonitorAtom: AsyncSequenceAtom, Hashable {","    func sequence(context: Context) -> AsyncStream<Quake> {","        AsyncStream { continuation in","            let monitor = QuakeMonitor()","            monitor.quakeHandler = { quake in","                continuation.yield(quake)","            }","            continuation.onTermination = { @Sendable _ in","                monitor.stopMonitoring()","            }","            monitor.startMonitoring()","        }","    }","}","","struct QuakeMonitorView: View {","    @Watch(QuakeMonitorAtom())","    var quakes","","    var body: some View {","        switch quakes {","        case .suspending, .failure:","            Text(\"Calm\")","","        case .success(let quake):","            Text(\"Quake: \\(quake.date)\")","        }","    }","}"],"type":"codeListing"}],"kind":"content"}],"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"type":"inheritsFrom","kind":"relationships"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"type":"topic","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThrowingTaskAtom"}],"navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"title":"ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","title":"AsyncPhase","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/asyncphase","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncPhase","kind":"identifier"}],"abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"title":"StateAtom","url":"\/documentation\/atoms\/stateatom","type":"topic","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms/ValueAtom":{"kind":"symbol","url":"\/documentation\/atoms\/valueatom","title":"ValueAtom","navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","title":"AsyncPhaseAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"abstract":[{"text":"An atom that provides an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value from the asynchronous throwable function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncPhaseAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/TaskAtom":{"kind":"symbol","url":"\/documentation\/atoms\/taskatom","title":"TaskAtom","navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous function."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/sequence(context:)":{"abstract":[{"text":"Creates an asynchronous sequence to be started when this atom is actually used.","type":"text"}],"required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/sequence(context:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sequence"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","preciseIdentifier":"s:5Atoms4AtomP7Contexta","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms17AsyncSequenceAtomP0C0Qa","text":"Sequence","kind":"typeIdentifier"}],"url":"\/documentation\/atoms\/asyncsequenceatom\/sequence(context:)","title":"sequence(context:)","role":"symbol","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"title":"ModifiedAtom","role":"symbol","abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModifiedAtom"}],"type":"topic","url":"\/documentation\/atoms\/modifiedatom"},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"abstract":[{"text":"An atom type that instantiates an observable object.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableObjectAtom"}]},"doc://Atoms/documentation/Atoms/AsyncAtom":{"kind":"symbol","url":"\/documentation\/atoms\/asyncatom","title":"AsyncAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncAtom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"kind":"symbol","url":"\/documentation\/atoms\/publisheratom","title":"PublisherAtom","navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"code":"Publisher","type":"codeVoice"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublisherAtom"}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom/Sequence":{"abstract":[{"text":"The type of asynchronous sequence that this atom manages.","type":"text"}],"required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom\/Sequence","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Sequence"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sci","text":"AsyncSequence","kind":"typeIdentifier"}],"url":"\/documentation\/atoms\/asyncsequenceatom\/sequence","title":"Sequence","role":"symbol","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","title":"AsyncSequenceAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms":{"role":"collection","url":"\/documentation\/atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/Atom":{"kind":"symbol","title":"Atom","abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","url":"\/documentation\/atoms\/atom","navigatorTitle":[{"text":"Atom","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"type":"topic"}}}