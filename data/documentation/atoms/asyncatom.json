{"seeAlsoSections":[{"title":"Misc","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"],"anchor":"Misc","generated":true}],"kind":"symbol","sections":[],"metadata":{"role":"symbol","modules":[{"name":"Atoms"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncAtom"}],"symbolKind":"protocol","roleHeading":"Protocol","navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"title":"AsyncAtom","externalID":"s:5Atoms9AsyncAtomP"},"abstract":[{"text":"Declares that a type can produce a refreshable value that can be accessed from everywhere.","type":"text"}],"topicSections":[{"title":"Instance Properties","anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom\/refreshProducer-695m2"]}],"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"title":"Inherited By","kind":"relationships","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"],"type":"inheritedBy"},{"kind":"relationships","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"type":"conformingTypes","title":"Conforming Types"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAtom","kind":"identifier"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":"> : ","kind":"text"},{"text":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"Atoms compliant with this protocol are refreshable and can wait until the atom produces"},{"text":" ","type":"text"},{"text":"its final value.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/asyncatom"]}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"references":{"doc://Atoms/documentation/Atoms/AnimationModifier":{"title":"AnimationModifier","navigatorTitle":[{"kind":"identifier","text":"AnimationModifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationModifier","kind":"identifier"}],"url":"\/documentation\/atoms\/animationmodifier","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","type":"topic","abstract":[{"type":"text","text":"A modifier that animates the view watching the atom when the value updates."}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomRefreshProducer":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomRefreshProducer"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer","url":"\/documentation\/atoms\/atomrefreshproducer","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomRefreshProducer"}],"title":"AtomRefreshProducer","abstract":[{"type":"text","text":"Produces the refreshed value of an atom."}]},"doc://Atoms/documentation/Atoms/ChangesModifier":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChangesModifier"}],"navigatorTitle":[{"text":"ChangesModifier","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A modifier that prevents the atom from updating its child views or atoms when"},{"type":"text","text":" "},{"type":"text","text":"its new value is the same as its old value."}],"title":"ChangesModifier","url":"\/documentation\/atoms\/changesmodifier"},"doc://Atoms/documentation/Atoms/TaskAtom":{"type":"topic","title":"TaskAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","url":"\/documentation\/atoms\/taskatom","role":"symbol","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous function.","type":"text"}],"navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomStore":{"url":"\/documentation\/atoms\/atomstore","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","abstract":[{"type":"text","text":"An object that stores the state of atoms and its dependency graph."}],"navigatorTitle":[{"text":"AtomStore","kind":"identifier"}],"kind":"symbol","title":"AtomStore","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomStore"}]},"doc://Atoms/documentation/Atoms/TaskPhaseModifier":{"kind":"symbol","type":"topic","abstract":[{"text":"An atom that provides a sequential value of the base atom as an enum","type":"text"},{"text":" ","type":"text"},{"text":"representation ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"text":" that changes overtime.","type":"text"}],"navigatorTitle":[{"text":"TaskPhaseModifier","kind":"identifier"}],"url":"\/documentation\/atoms\/taskphasemodifier","title":"TaskPhaseModifier","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TaskPhaseModifier","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","role":"symbol"},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"url":"\/documentation\/atoms\/asyncatom","kind":"symbol","navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","type":"topic","role":"symbol","title":"AsyncAtom","abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomModifier":{"url":"\/documentation\/atoms\/atommodifier","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new value modified from the original value."}],"navigatorTitle":[{"text":"AtomModifier","kind":"identifier"}],"kind":"symbol","title":"AtomModifier","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomModifier"}]},"doc://Atoms/documentation/Atoms/AsyncAtomModifier":{"url":"\/documentation\/atoms\/asyncatommodifier","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new refreshable value modified from the original value."}],"navigatorTitle":[{"kind":"identifier","text":"AsyncAtomModifier"}],"kind":"symbol","title":"AsyncAtomModifier","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAtomModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ChangesOfModifier":{"abstract":[{"text":"A modifier that derives a partial property with the specified key path from the original atom","type":"text"},{"type":"text","text":" "},{"text":"and prevent it from updating its downstream when its new value is equivalent to old value.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","url":"\/documentation\/atoms\/changesofmodifier","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChangesOfModifier"}],"kind":"symbol","navigatorTitle":[{"text":"ChangesOfModifier","kind":"identifier"}],"title":"ChangesOfModifier"},"doc://Atoms/documentation/Atoms/AtomProducer":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","navigatorTitle":[{"kind":"identifier","text":"AtomProducer"}],"title":"AtomProducer","abstract":[{"type":"text","text":"Produces the value of an atom."}],"type":"topic","kind":"symbol","url":"\/documentation\/atoms\/atomproducer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomProducer","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" value.","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"role":"symbol","title":"PublisherAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/publisheratom"},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms/Atom/Produced":{"type":"topic","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Produced"}],"kind":"symbol","abstract":[{"type":"text","text":"The type of value that this atom produces."}],"url":"\/documentation\/atoms\/atom\/produced","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","title":"Produced"},"doc://Atoms/documentation/Atoms/AsyncAtom/refreshProducer-695m2":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"refreshProducer"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms19AtomRefreshProducerV","text":"AtomRefreshProducer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom\/refreshProducer-695m2","url":"\/documentation\/atoms\/asyncatom\/refreshproducer-695m2","type":"topic","role":"symbol","defaultImplementations":5,"title":"refreshProducer","required":true,"abstract":[{"text":"A producer that produces the refreshable value of this atom.","type":"text"}]},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"kind":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","type":"topic","role":"symbol","title":"ThrowingTaskAtom","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" value.","type":"text"}],"kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","type":"topic","role":"symbol","title":"AsyncSequenceAtom","navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}],"title":"ModifiedAtom","conformance":{"constraints":[{"type":"codeVoice","code":"Node"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AsyncAtom"},{"type":"text","text":", "},{"code":"Modifier","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AsyncAtomModifier"},{"text":", and ","type":"text"},{"code":"Node.Produced","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Modifier.Base","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase","kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","abstract":[{"text":"An atom that provides an ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value from the asynchronous throwable function."}],"kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","type":"topic","role":"symbol","title":"AsyncPhaseAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhaseAtom"}]}}}