{"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/taskatom"]}],"topicSections":[{"anchor":"Associated-Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/Success"],"generated":true,"title":"Associated Types"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/value(context:)"],"title":"Instance Methods","generated":true}],"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"]}],"abstract":[{"text":"An atom type that provides a nonthrowing ","type":"text"},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous function."}],"seeAlsoSections":[{"generated":true,"title":"Atoms","anchor":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskAtom"},{"kind":"text","text":" : "},{"text":"AsyncAtom","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","preciseIdentifier":"s:5Atoms9AsyncAtomP"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"This atom guarantees that the task to be identical instance and its state can be shared"},{"type":"text","text":" "},{"text":"at anywhere even when they are accessed simultaneously from multiple locations.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","isActive":true}],"type":"paragraph"}],"type":"aside","style":"note","name":"See Also"},{"type":"aside","name":"See Also","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","isActive":true}]}],"style":"note"},{"type":"heading","text":"Output Value","anchor":"Output-Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Task<Self.Value, Never>"}]},{"level":2,"type":"heading","anchor":"Example","text":"Example"},{"code":["struct AsyncTextAtom: TaskAtom, Hashable {","    func value(context: Context) async -> String {","        try? await Task.sleep(nanoseconds: 1_000_000_000)","        return \"Swift\"","    }","}","","struct DelayedTitleView: View {","    @Watch(AsyncTextAtom())","    var text","","    var body: some View {","        Suspense(text) { text in","            Text(text)","        } suspending: {","            Text(\"Loading...\")","        }","    }","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"metadata":{"navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskAtom"}],"role":"symbol","symbolKind":"protocol","title":"TaskAtom","modules":[{"name":"Atoms"}],"externalID":"s:5Atoms8TaskAtomP"},"references":{"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"url":"\/documentation\/atoms\/throwingtaskatom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}],"kind":"symbol","type":"topic","title":"ThrowingTaskAtom","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","role":"symbol","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous, throwing function.","type":"text"}]},"doc://Atoms/documentation/Atoms/Suspense":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Suspense","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/atoms\/suspense","navigatorTitle":[{"kind":"identifier","text":"Suspense"}],"title":"Suspense","abstract":[{"text":"A view that lets the content wait for the given task to provide a resulting value","type":"text"},{"text":" ","type":"text"},{"text":"or an error.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense"},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/stateatom","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"title":"ObservableObjectAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/observableobjectatom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}]},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"role":"symbol","title":"ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModifiedAtom"}],"navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","type":"topic"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"type":"topic","url":"\/documentation\/atoms\/asyncphase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"asynchronous process has not yet been determined."}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase"},"doc://Atoms/documentation/Atoms/ValueAtom":{"url":"\/documentation\/atoms\/valueatom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"}],"kind":"symbol","type":"topic","title":"ValueAtom","navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","role":"symbol","abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}]},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","url":"\/documentation\/atoms\/atom"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"navigatorTitle":[{"text":"AsyncPhaseAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","url":"\/documentation\/atoms\/asyncphaseatom","abstract":[{"text":"An atom that provides an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" value from the asynchronous throwable function.","type":"text"}],"type":"topic","kind":"symbol","title":"AsyncPhaseAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncPhaseAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms":{"kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms","type":"topic","role":"collection","title":"Atoms"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"title":"AsyncAtom","role":"symbol","navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"url":"\/documentation\/atoms\/asyncatom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"role":"symbol","type":"topic","url":"\/documentation\/atoms\/publisheratom","kind":"symbol","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"title":"PublisherAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/TaskAtom":{"role":"symbol","type":"topic","url":"\/documentation\/atoms\/taskatom","kind":"symbol","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"title":"TaskAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskAtom"}]},"doc://Atoms/documentation/Atoms/TaskAtom/value(context:)":{"required":true,"role":"symbol","title":"value(context:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"value","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP7Contexta"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms8TaskAtomP7SuccessQa"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/value(context:)","url":"\/documentation\/atoms\/taskatom\/value(context:)","abstract":[{"text":"Asynchronously produces a value to be provided via this atom.","type":"text"}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"abstract":[{"text":"An atom type that provides asynchronous, sequential elements of the given ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}],"title":"AsyncSequenceAtom"},"doc://Atoms/documentation/Atoms/TaskAtom/Success":{"title":"Success","required":true,"role":"symbol","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"},{"kind":"text","text":" : "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"abstract":[{"text":"The type of success value that this atom produces.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/Success","kind":"symbol","url":"\/documentation\/atoms\/taskatom\/success"}}}