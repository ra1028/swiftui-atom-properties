{"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/taskatom"]}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"topicSections":[{"anchor":"Associated-Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/Success"],"generated":true,"title":"Associated Types"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/value(context:)"],"generated":true,"title":"Instance Methods"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"roleHeading":"Protocol","externalID":"s:5Atoms8TaskAtomP","title":"TaskAtom","symbolKind":"protocol","role":"symbol","modules":[{"name":"Atoms"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"anchor":"Atoms","title":"Atoms"}],"sections":[],"abstract":[{"text":"An atom type that provides a nonthrowing ","type":"text"},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous function."}],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"title":"Inherits From"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","preciseIdentifier":"s:5Atoms9AsyncAtomP","text":"AsyncAtom"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"This atom guarantees that the task to be identical instance and its state can be shared"},{"text":" ","type":"text"},{"type":"text","text":"at anywhere even when they are accessed simultaneously from multiple locations."}],"type":"paragraph"},{"style":"note","type":"aside","name":"See Also","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"}],"type":"paragraph"}]},{"name":"See Also","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","isActive":true}]}]},{"text":"Output Value","level":2,"anchor":"Output-Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Task<Self.Value, Never>","type":"text"}]},{"text":"Example","level":2,"anchor":"Example","type":"heading"},{"code":["struct AsyncTextAtom: TaskAtom, Hashable {","    func value(context: Context) async -> String {","        try? await Task.sleep(nanoseconds: 1_000_000_000)","        return \"Swift\"","    }","}","","struct DelayedTitleView: View {","    @Watch(AsyncTextAtom())","    var text","","    var body: some View {","        Suspense(text) { text in","            Text(text)","        } suspending: {","            Text(\"Loading...\")","        }","    }","}"],"syntax":"swift","type":"codeListing"}]}],"kind":"symbol","references":{"doc://Atoms/documentation/Atoms/ModifiedAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","kind":"symbol","url":"\/documentation\/atoms\/modifiedatom","abstract":[{"text":"An atom type that applies a modifier to an atom.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}],"title":"ModifiedAtom"},"doc://Atoms/documentation/Atoms/TaskAtom/Success":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/Success","abstract":[{"type":"text","text":"The type of success value that this atom produces."}],"kind":"symbol","title":"Success","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Success"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"url":"\/documentation\/atoms\/taskatom\/success","required":true},"doc://Atoms/documentation/Atoms/AsyncAtom":{"abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncAtom","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","title":"AsyncAtom","url":"\/documentation\/atoms\/asyncatom","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncAtom"}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"title":"ObservableObjectAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},"doc://Atoms/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable"},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"title":"Atom"},"doc://Atoms/documentation/Atoms/TaskAtom/value(context:)":{"type":"topic","title":"value(context:)","abstract":[{"text":"Asynchronously produces a value to be provided via this atom.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/value(context:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP7Contexta","text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms8TaskAtomP7SuccessQa"}],"url":"\/documentation\/atoms\/taskatom\/value(context:)","required":true},"doc://Atoms/documentation/Atoms/ValueAtom":{"title":"ValueAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAtom"}],"url":"\/documentation\/atoms\/valueatom","abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","abstract":[{"type":"text","text":"An atom that provides an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"text":" value from the asynchronous throwable function.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncPhaseAtom","kind":"identifier"}],"title":"AsyncPhaseAtom"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","kind":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous, throwing function.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}],"title":"ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/TaskAtom":{"title":"TaskAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskAtom"}],"url":"\/documentation\/atoms\/taskatom","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"title":"AsyncPhase","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhase"}],"url":"\/documentation\/atoms\/asyncphase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"title":"PublisherAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublisherAtom"}],"url":"\/documentation\/atoms\/publisheratom","abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"code":"Publisher","type":"codeVoice"},{"text":" as an ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"text":" value.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"},"doc://Atoms/documentation/Atoms/Suspense":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","navigatorTitle":[{"text":"Suspense","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Suspense","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/suspense","title":"Suspense","abstract":[{"text":"A view that lets the content wait for the given task to provide a resulting value","type":"text"},{"text":" ","type":"text"},{"text":"or an error.","type":"text"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"text":"as an ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequenceAtom"}],"title":"AsyncSequenceAtom"}}}