{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"seeAlsoSections":[{"anchor":"Atoms","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"title":"Atoms"}],"kind":"symbol","variants":[{"paths":["\/documentation\/atoms\/stateatom"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/StateAtom\/Value"],"anchor":"Associated-Types","title":"Associated Types"},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/StateAtom\/defaultValue(context:)"]}],"metadata":{"roleHeading":"Protocol","modules":[{"name":"Atoms"}],"externalID":"s:5Atoms9StateAtomP","symbolKind":"protocol","role":"symbol","title":"StateAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"navigatorTitle":[{"text":"StateAtom","kind":"identifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},"abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}],"relationshipsSections":[{"title":"Inherits From","kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"This atom provides a mutable state value that can be accessed from anywhere, and it notifies changes"},{"type":"text","text":" "},{"text":"to downstream atoms and views.","type":"text"}],"type":"paragraph"},{"anchor":"Output-Value","level":2,"text":"Output Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Self.Value","type":"text"}]},{"level":2,"text":"Example","anchor":"Example","type":"heading"},{"type":"codeListing","code":["struct CounterAtom: StateAtom, Hashable {","    func defaultValue(context: Context) -> Int {","        0","    }","}","","struct CounterView: View {","    @WatchState(CounterAtom())","    var count","","    var body: some View {","        Stepper(\"Count: \\(count)\", value: $count)","    }","}"],"syntax":"swift"}]}],"references":{"doc://Atoms/documentation/Atoms/StateAtom/defaultValue(context:)":{"title":"defaultValue(context:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"defaultValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP7Contexta"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms9StateAtomP5ValueQa","text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/atoms\/stateatom\/defaultvalue(context:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom\/defaultValue(context:)","type":"topic","required":true,"abstract":[{"type":"text","text":"Creates a default value of the state to be provided via this atom."}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"title":"AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"url":"\/documentation\/atoms\/asyncsequenceatom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceAtom"}],"navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncPhase","kind":"identifier"}],"kind":"symbol","title":"AsyncPhase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ModifiedAtom","kind":"identifier"}],"kind":"symbol","title":"ModifiedAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"role":"symbol"},"doc://Atoms/documentation/Atoms/TaskAtom":{"navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","type":"topic","kind":"symbol","title":"TaskAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskAtom"}],"url":"\/documentation\/atoms\/taskatom","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}]},"doc://Atoms/documentation/Atoms/ValueAtom":{"type":"topic","url":"\/documentation\/atoms\/valueatom","abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"kind":"symbol","role":"symbol","title":"ValueAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ValueAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","type":"topic","kind":"symbol","title":"PublisherAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/publisheratom","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"code":"Publisher","type":"codeVoice"},{"text":" as an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}]},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/stateatom","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","role":"symbol"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"title":"ThrowingTaskAtom","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ThrowingTaskAtom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskAtom"}],"url":"\/documentation\/atoms\/throwingtaskatom","type":"topic","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous, throwing function.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"},"doc://Atoms/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"url":"\/documentation\/atoms\/observableobjectatom","kind":"symbol","title":"ObservableObjectAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhaseAtom"}],"kind":"symbol","title":"AsyncPhaseAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","url":"\/documentation\/atoms\/asyncphaseatom","type":"topic","navigatorTitle":[{"text":"AsyncPhaseAtom","kind":"identifier"}],"abstract":[{"text":"An atom that provides an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value from the asynchronous throwable function."}],"role":"symbol"},"doc://Atoms/documentation/Atoms/StateAtom/Value":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}],"required":true,"url":"\/documentation\/atoms\/stateatom\/value","abstract":[{"text":"The type of value that this atom produces.","type":"text"}],"role":"symbol","title":"Value","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom\/Value","type":"topic"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom","title":"Atom","role":"symbol","type":"topic"}}}