{"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"}],"abstract":[{"type":"text","text":"An attribute protocol to allow the value of an atom to continue being retained"},{"type":"text","text":" "},{"type":"text","text":"even after they are no longer watched."}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/Resettable"],"generated":true,"anchor":"Attributes","title":"Attributes"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeepAlive","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"}]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"text":"Note that overridden or scoped atoms are not retained even with this attribute.","type":"text"}],"type":"paragraph"},{"text":"Example","anchor":"Example","type":"heading","level":2},{"code":["struct SharedPollingServiceAtom: ValueAtom, KeepAlive, Hashable {","    func value(context: Context) -> PollingService {","        PollingService()","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/atoms\/keepalive"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"KeepAlive","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeepAlive","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"KeepAlive"}],"role":"symbol","externalID":"s:5Atoms9KeepAliveP","roleHeading":"Protocol","modules":[{"name":"Atoms"}],"symbolKind":"protocol"},"kind":"symbol","sections":[],"references":{"doc://Atoms/documentation/Atoms/Scoped":{"abstract":[{"text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor","type":"text"},{"type":"text","text":" "},{"text":"of where it is used and prevents it from being shared out of scope.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scoped"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","type":"topic","navigatorTitle":[{"text":"Scoped","kind":"identifier"}],"title":"Scoped","url":"\/documentation\/atoms\/scoped","role":"symbol"},"doc://Atoms/documentation/Atoms/Resettable":{"title":"Resettable","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","abstract":[{"text":"An attribute protocol that allows an atom to have a custom reset behavior.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Resettable","kind":"identifier"}],"url":"\/documentation\/atoms\/resettable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Resettable"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","role":"collection","url":"\/documentation\/atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"type":"topic"},"doc://Atoms/documentation/Atoms/KeepAlive":{"abstract":[{"text":"An attribute protocol to allow the value of an atom to continue being retained","type":"text"},{"type":"text","text":" "},{"text":"even after they are no longer watched.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"KeepAlive","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","type":"topic","navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"title":"KeepAlive","url":"\/documentation\/atoms\/keepalive","role":"symbol"},"doc://Atoms/documentation/Atoms/Refreshable":{"abstract":[{"text":"An attribute protocol that allows an atom to have a custom refresh behavior.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Refreshable"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","type":"topic","navigatorTitle":[{"text":"Refreshable","kind":"identifier"}],"title":"Refreshable","url":"\/documentation\/atoms\/refreshable","role":"symbol"},"doc://Atoms/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Atoms\/s8SendableP"},"doc://Atoms/documentation/Atoms/Atom":{"url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","title":"Atom","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"}}}