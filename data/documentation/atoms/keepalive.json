{"seeAlsoSections":[{"generated":true,"title":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped"],"anchor":"Attributes"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","interfaceLanguage":"swift"},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom","kind":"relationships"}],"abstract":[{"type":"text","text":"An attribute protocol to allow the value of an atom to continue being retained"},{"type":"text","text":" "},{"text":"even after they are no longer watched.","type":"text"}],"metadata":{"role":"symbol","navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"symbolKind":"protocol","roleHeading":"Protocol","externalID":"s:5Atoms9KeepAliveP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeepAlive","kind":"identifier"}],"title":"KeepAlive","modules":[{"name":"Atoms"}]},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"KeepAlive","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","text":"Atom","preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier"}]}]},{"content":[{"anchor":"Note","type":"heading","text":"Note","level":2},{"type":"paragraph","inlineContent":[{"text":"Atoms that conform to this attribute and are either scoped using the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped"},{"text":" attribute","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or overridden via "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedOverride(_:with:)-5jen3","isActive":true,"type":"reference"},{"type":"text","text":" are retained until their scope"},{"text":" ","type":"text"},{"text":"is dismantled from the view tree, after which they are released.","type":"text"}]},{"type":"heading","anchor":"Example","text":"Example","level":2},{"type":"codeListing","code":["struct SharedPollingServiceAtom: ValueAtom, KeepAlive, Hashable {","    func value(context: Context) -> PollingService {","        PollingService()","    }","}"],"syntax":"swift"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atoms\/keepalive"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Atoms/documentation/Atoms/KeepAlive":{"title":"KeepAlive","navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeepAlive"}],"url":"\/documentation\/atoms\/keepalive","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","type":"topic","abstract":[{"type":"text","text":"An attribute protocol to allow the value of an atom to continue being retained"},{"type":"text","text":" "},{"type":"text","text":"even after they are no longer watched."}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms/Scoped":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor"},{"text":" ","type":"text"},{"text":"of where it is used and prevents it from being shared out of scope.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Scoped","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","navigatorTitle":[{"text":"Scoped","kind":"identifier"}],"url":"\/documentation\/atoms\/scoped","kind":"symbol","title":"Scoped"},"doc://Atoms/documentation/Atoms/AtomScope/scopedOverride(_:with:)-5jen3":{"role":"symbol","title":"scopedOverride(_:with:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scopedOverride"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Node"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AtomScope","preciseIdentifier":"s:5Atoms9AtomScopeV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Content","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedOverride(_:with:)-5jen3","type":"topic","abstract":[{"type":"text","text":"Override the atoms used in this scope with the given value."}],"url":"\/documentation\/atoms\/atomscope\/scopedoverride(_:with:)-5jen3"},"doc://Atoms/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Atoms\/s8SendableP"},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"}}}