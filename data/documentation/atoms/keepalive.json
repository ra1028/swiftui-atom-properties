{"kind":"symbol","abstract":[{"text":"An attribute protocol to allow the value of an atom to continue being retained","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"even after they are no longer watched."}],"seeAlsoSections":[{"title":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped"],"generated":true,"anchor":"Attributes"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeepAlive","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:5Atoms4AtomP","text":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Note","text":"Note"},{"inlineContent":[{"text":"Atoms that conform to this attribute and are either scoped using the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped"},{"text":" attribute","type":"text"},{"type":"text","text":" "},{"text":"or overridden via ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedOverride(_:with:)-5jen3"},{"text":" are retained until their scope","type":"text"},{"type":"text","text":" "},{"text":"is dismantled from the view tree, after which they are released.","type":"text"}],"type":"paragraph"},{"type":"heading","anchor":"Example","level":2,"text":"Example"},{"type":"codeListing","syntax":"swift","code":["struct SharedPollingServiceAtom: ValueAtom, KeepAlive, Hashable {","    func value(context: Context) -> PollingService {","        PollingService()","    }","}"]}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/atoms\/keepalive"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"title":"Inherits From","kind":"relationships","type":"inheritsFrom"}],"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeepAlive"}],"navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"externalID":"s:5Atoms9KeepAliveP","title":"KeepAlive","modules":[{"name":"Atoms"}],"roleHeading":"Protocol","role":"symbol","symbolKind":"protocol"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"references":{"doc://Atoms/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Atoms\/s8SendableP","type":"unresolvable"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"title":"Atom"},"doc://Atoms/documentation/Atoms/Scoped":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Scoped","kind":"identifier"}],"title":"Scoped","url":"\/documentation\/atoms\/scoped","navigatorTitle":[{"kind":"identifier","text":"Scoped"}],"abstract":[{"type":"text","text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor"},{"text":" ","type":"text"},{"text":"of where it is used and prevents it from being shared out of scope.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","kind":"symbol","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"},"doc://Atoms/documentation/Atoms/KeepAlive":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"KeepAlive","kind":"identifier"}],"title":"KeepAlive","url":"\/documentation\/atoms\/keepalive","navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"abstract":[{"text":"An attribute protocol to allow the value of an atom to continue being retained","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"even after they are no longer watched."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","kind":"symbol","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomScope/scopedOverride(_:with:)-5jen3":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"scopedOverride","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"text":"Node","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AtomScope","preciseIdentifier":"s:5Atoms9AtomScopeV"},{"kind":"text","text":"<"},{"text":"Content","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/atoms\/atomscope\/scopedoverride(_:with:)-5jen3","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedOverride(_:with:)-5jen3","role":"symbol","title":"scopedOverride(_:with:)","abstract":[{"text":"Override the atoms used in this scope with the given value.","type":"text"}]}}}