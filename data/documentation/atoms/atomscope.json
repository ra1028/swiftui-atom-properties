{"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"metadata":{"externalID":"s:5Atoms9AtomScopeV","symbolKind":"struct","modules":[{"name":"Atoms"}],"navigatorTitle":[{"kind":"identifier","text":"AtomScope"}],"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomScope"}],"role":"symbol","title":"AtomScope"},"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/init(id:content:)","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/init(inheriting:content:)"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/body"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedObserve(_:)","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedOverride(_:with:)-4tkz3","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedOverride(_:with:)-5jen3"],"generated":true,"title":"Instance Methods"}],"seeAlsoSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"],"generated":true,"anchor":"Views","title":"Views"}],"kind":"symbol","abstract":[{"text":"A view to override or monitor atoms in scope.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/s8SendableP","doc:\/\/Atoms\/7SwiftUI4ViewP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomScope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Content"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"text":" : ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"text":"This view allows you to override a value of arbitrary atoms used in this scope, which is useful","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for dependency injection in testing."}],"type":"paragraph"},{"syntax":"swift","code":["AtomScope {","    MyView()","}",".scopedOverride(APIClientAtom()) {","    StubAPIClient()","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"You can also observe updates with a snapshot that captures a specific set of values of atoms."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["AtomScope {","    CounterView()","}",".scopedObserve { snapshot in","    if let count = snapshot.lookup(CounterAtom()) {","        print(count)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It inherits from the atom store provided by "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","type":"reference","isActive":true},{"type":"text","text":" through environment values by default,"},{"type":"text","text":" "},{"text":"but sometimes SwiftUI can fail to pass environment values in the view-tree for some reason.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The typical example is that, in case you use SwiftUI view inside UIKit view, it could fail as"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI canâ€™t pass environment values to UIKit across boundaries."},{"type":"text","text":" "},{"text":"In that case, you can wrap the view with ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","isActive":true},{"type":"text","text":" and pass a view context to it so that"},{"text":" ","type":"text"},{"type":"text","text":"the descendant views can explicitly inherit the store."}]},{"syntax":"swift","code":["@ViewContext","var context","","var body: some View {","    MyUIViewWrappingView {","        AtomScope(inheriting: context) {","            MySwiftUIView()","        }","    }","}"],"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/atoms\/atomscope"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Atoms/documentation/Atoms":{"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","url":"\/documentation\/atoms","role":"collection","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomScope/scopedOverride(_:with:)-4tkz3":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedOverride(_:with:)-4tkz3","abstract":[{"type":"text","text":"Override the atoms used in this scope with the given value."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"scopedOverride","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Node"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms9AtomScopeV","text":"AtomScope"},{"kind":"text","text":"<"},{"text":"Content","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","title":"scopedOverride(_:with:)","url":"\/documentation\/atoms\/atomscope\/scopedoverride(_:with:)-4tkz3"},"doc://Atoms/documentation/Atoms/AtomScope/init(id:content:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/init(id:content:)","abstract":[{"text":"Creates a new scope with the specified content.","type":"text"}],"url":"\/documentation\/atoms\/atomscope\/init(id:content:)","kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ID"},{"kind":"text","text":">("},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ID"},{"text":", ","kind":"text"},{"text":"content","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"init(id:content:)"},"doc://Atoms/documentation/Atoms/AtomScope/scopedOverride(_:with:)-5jen3":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedOverride(_:with:)-5jen3","abstract":[{"type":"text","text":"Override the atoms used in this scope with the given value."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopedOverride","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"text":"Node","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AtomScope","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms9AtomScopeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":">"}],"role":"symbol","title":"scopedOverride(_:with:)","url":"\/documentation\/atoms\/atomscope\/scopedoverride(_:with:)-5jen3"},"doc://Atoms/documentation/Atoms/AtomRoot":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","abstract":[{"type":"text","text":"A view that stores the state of atoms."}],"url":"\/documentation\/atoms\/atomroot","kind":"symbol","navigatorTitle":[{"text":"AtomRoot","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomRoot","kind":"identifier"}],"role":"symbol","title":"AtomRoot"},"doc://Atoms/documentation/Atoms/AtomScope/init(inheriting:content:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/init(inheriting:content:)","abstract":[{"type":"text","text":"Creates a new scope with the specified content that will be allowed to use atoms by"},{"type":"text","text":" "},{"type":"text","text":"passing a view context to explicitly make the descendant views inherit store."}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"inheriting","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Atoms15AtomViewContextV","text":"AtomViewContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"content","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":")"}],"role":"symbol","title":"init(inheriting:content:)","url":"\/documentation\/atoms\/atomscope\/init(inheriting:content:)"},"doc://Atoms/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Atoms\/s8SendableP"},"doc://Atoms/documentation/Atoms/AtomScope/scopedObserve(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedObserve(_:)","abstract":[{"type":"text","text":"Observes the state changes with a snapshot that captures the whole atom states and"},{"type":"text","text":" "},{"text":"their dependency graph at the point in time for debugging purposes.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopedObserve","kind":"identifier"},{"kind":"text","text":"(("},{"text":"Snapshot","preciseIdentifier":"s:5Atoms8SnapshotV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:5Atoms9AtomScopeV","kind":"typeIdentifier","text":"AtomScope"},{"text":"<","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","title":"scopedObserve(_:)","url":"\/documentation\/atoms\/atomscope\/scopedobserve(_:)"},"doc://Atoms/documentation/Atoms/AtomScope":{"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomScope"}],"title":"AtomScope","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomScope"}],"kind":"symbol","abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","url":"\/documentation\/atoms\/atomscope"},"doc://Atoms/7SwiftUI4ViewP":{"identifier":"doc:\/\/Atoms\/7SwiftUI4ViewP","title":"SwiftUICore.View","type":"unresolvable"},"doc://Atoms/documentation/Atoms/AtomScope/body":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/body","abstract":[{"text":"The content and behavior of the view.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"role":"symbol","title":"body","url":"\/documentation\/atoms\/atomscope\/body"},"doc://Atoms/documentation/Atoms/Suspense":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Suspense"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Suspense","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","title":"Suspense","abstract":[{"text":"A view that lets the content wait for the given task to provide a resulting value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or an error."}],"url":"\/documentation\/atoms\/suspense","role":"symbol","type":"topic"}}}