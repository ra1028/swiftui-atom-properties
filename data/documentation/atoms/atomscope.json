{"abstract":[{"text":"A view to override or monitor atoms in scope.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomScope","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Content"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":" : "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This view allows you to override a value of arbitrary atoms used in this scope, which is useful"},{"text":" ","type":"text"},{"text":"for dependency injection in testing.","type":"text"}]},{"type":"codeListing","code":["AtomScope {","    MyView()","}",".scopedOverride(APIClientAtom()) {","    StubAPIClient()","}"],"syntax":"swift"},{"inlineContent":[{"text":"You can also observe updates with a snapshot that captures a specific set of values of atoms.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["AtomScope {","    CounterView()","}",".scopedObserve { snapshot in","    if let count = snapshot.lookup(CounterAtom()) {","        print(count)","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"It inherits from the atom store provided by "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","type":"reference","isActive":true},{"text":" through environment values by default,","type":"text"},{"text":" ","type":"text"},{"text":"but sometimes SwiftUI can fail to pass environment values in the view-tree for some reason.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The typical example is that, in case you use SwiftUI view inside UIKit view, it could fail as"},{"text":" ","type":"text"},{"text":"SwiftUI canâ€™t pass environment values to UIKit across boundaries.","type":"text"},{"type":"text","text":" "},{"text":"In that case, you can wrap the view with ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope"},{"text":" and pass a view context to it so that","type":"text"},{"text":" ","type":"text"},{"text":"the descendant views can explicitly inherit the store.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@ViewContext","var context","","var body: some View {","    MyUIViewWrappingView {","        AtomScope(inheriting: context) {","            MySwiftUIView()","        }","    }","}"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomscope"]}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Atoms\/s8SendableP","doc:\/\/Atoms\/7SwiftUI4ViewP"],"type":"conformsTo"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"],"anchor":"Views","title":"Views"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"kind":"symbol","sections":[],"topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/init(id:content:)","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/init(inheriting:content:)"]},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/body"]},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedObserve(_:)","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedOverride(_:with:)-4tkz3","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedOverride(_:with:)-5jen3"],"anchor":"Instance-Methods"}],"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomScope","kind":"identifier"}],"role":"symbol","modules":[{"name":"Atoms"}],"roleHeading":"Structure","title":"AtomScope","navigatorTitle":[{"kind":"identifier","text":"AtomScope"}],"symbolKind":"struct","externalID":"s:5Atoms9AtomScopeV"},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Atoms/documentation/Atoms/AtomScope/scopedOverride(_:with:)-4tkz3":{"url":"\/documentation\/atoms\/atomscope\/scopedoverride(_:with:)-4tkz3","kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedOverride(_:with:)-4tkz3","abstract":[{"type":"text","text":"Override the atoms used in this scope with the given value."}],"title":"scopedOverride(_:with:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scopedOverride"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"with","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Node"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","text":"Produced"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:5Atoms9AtomScopeV","kind":"typeIdentifier","text":"AtomScope"},{"text":"<","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic"},"doc://Atoms/7SwiftUI4ViewP":{"identifier":"doc:\/\/Atoms\/7SwiftUI4ViewP","title":"SwiftUICore.View","type":"unresolvable"},"doc://Atoms/documentation/Atoms/AtomScope/body":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/atoms\/atomscope\/body","role":"symbol","abstract":[{"text":"The content and behavior of the view.","type":"text"}],"kind":"symbol","title":"body","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/body"},"doc://Atoms/documentation/Atoms/AtomScope/init(id:content:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"ID","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"content","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/init(id:content:)","title":"init(id:content:)","url":"\/documentation\/atoms\/atomscope\/init(id:content:)","abstract":[{"text":"Creates a new scope with the specified content.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Atoms/documentation/Atoms/AtomScope":{"abstract":[{"text":"A view to override or monitor atoms in scope.","type":"text"}],"url":"\/documentation\/atoms\/atomscope","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomScope","kind":"identifier"}],"title":"AtomScope","type":"topic","navigatorTitle":[{"text":"AtomScope","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomScope/scopedOverride(_:with:)-5jen3":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopedOverride","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"text":"Node","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"},{"kind":"text","text":") -> "},{"text":"AtomScope","preciseIdentifier":"s:5Atoms9AtomScopeV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Content"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/atoms\/atomscope\/scopedoverride(_:with:)-5jen3","role":"symbol","abstract":[{"text":"Override the atoms used in this scope with the given value.","type":"text"}],"kind":"symbol","title":"scopedOverride(_:with:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedOverride(_:with:)-5jen3"},"doc://Atoms/documentation/Atoms/Suspense":{"abstract":[{"type":"text","text":"A view that lets the content wait for the given task to provide a resulting value"},{"text":" ","type":"text"},{"text":"or an error.","type":"text"}],"url":"\/documentation\/atoms\/suspense","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Suspense"}],"title":"Suspense","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Suspense"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomScope/init(inheriting:content:)":{"abstract":[{"text":"Creates a new scope with the specified content that will be allowed to use atoms by","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"passing a view context to explicitly make the descendant views inherit store."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/init(inheriting:content:)","url":"\/documentation\/atoms\/atomscope\/init(inheriting:content:)","type":"topic","kind":"symbol","title":"init(inheriting:content:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"inheriting"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomViewContext","preciseIdentifier":"s:5Atoms15AtomViewContextV"},{"kind":"text","text":", "},{"text":"content","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":")"}]},"doc://Atoms/documentation/Atoms":{"role":"collection","url":"\/documentation\/atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/AtomRoot":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","title":"AtomRoot","abstract":[{"type":"text","text":"A view that stores the state of atoms."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomRoot","kind":"identifier"}],"url":"\/documentation\/atoms\/atomroot","navigatorTitle":[{"kind":"identifier","text":"AtomRoot"}]},"doc://Atoms/documentation/Atoms/AtomScope/scopedObserve(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scopedObserve"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:5Atoms8SnapshotV","kind":"typeIdentifier","text":"Snapshot"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"text":"AtomScope","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms9AtomScopeV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/atoms\/atomscope\/scopedobserve(_:)","role":"symbol","abstract":[{"type":"text","text":"Observes the state changes with a snapshot that captures the whole atom states and"},{"text":" ","type":"text"},{"type":"text","text":"their dependency graph at the point in time for debugging purposes."}],"kind":"symbol","title":"scopedObserve(_:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedObserve(_:)"}}}