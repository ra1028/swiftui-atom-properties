{"kind":"symbol","abstract":[{"text":"Resets the value associated with the given atom, and then notifies.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomContext"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"atom","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","text":"Atom","preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An atom to reset."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This method resets the value for the given atom and then notifies downstream","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly"},{"type":"text","text":" "},{"type":"text","text":"generated value will be produced."}],"type":"paragraph"},{"syntax":"swift","code":["let context = ...","print(context.watch(TextAtom())) \/\/ Prints \"Text\"","context[TextAtom()] = \"New text\"","print(context.read(TextAtom())) \/\/ Prints \"New text\"","context.reset(TextAtom())","print(context.read(TextAtom())) \/\/ Prints \"Text\""],"type":"codeListing"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext\/reset(_:)-8u78a"},"variants":[{"paths":["\/documentation\/atoms\/atomcontext\/reset(_:)-8u78a"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:5Atoms11AtomContextP5resetyyqd__AA0B0Rd__lF","symbolKind":"method","role":"symbol","modules":[{"name":"Atoms"}],"required":true,"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":")"}],"title":"reset(_:)"},"references":{"doc://Atoms/documentation/Atoms/AtomContext/reset(_:)-8u78a":{"type":"topic","title":"reset(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":")"}],"url":"\/documentation\/atoms\/atomcontext\/reset(_:)-8u78a","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext\/reset(_:)-8u78a","abstract":[{"text":"Resets the value associated with the given atom, and then notifies.","type":"text"}],"kind":"symbol","required":true,"role":"symbol"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","type":"topic","title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms":{"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","url":"\/documentation\/atoms","role":"collection","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomContext":{"abstract":[{"text":"A context structure to read, write, and otherwise interact with atoms.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AtomContext","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"AtomContext","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","url":"\/documentation\/atoms\/atomcontext","title":"AtomContext"}}}