{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"atom","kind":"internalParam"},{"text":": some ","kind":"text"},{"text":"Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"atom","content":[{"inlineContent":[{"type":"text","text":"An atom to reset."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method resets the value for the given atom and then notifies downstream"},{"type":"text","text":" "},{"text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly","type":"text"},{"type":"text","text":" "},{"text":"generated value will be produced.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let context = ...","print(context.watch(TextAtom())) \/\/ Prints \"Text\"","context[TextAtom()] = \"New text\"","print(context.read(TextAtom())) \/\/ Prints \"New text\"","context.reset(TextAtom())","print(context.read(TextAtom())) \/\/ Prints \"Text\""]}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext\/reset(_:)-8u78a"},"variants":[{"paths":["\/documentation\/atoms\/atomcontext\/reset(_:)-8u78a"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomContext"]]},"metadata":{"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:5Atoms11AtomContextP5resetyyqd__AA0B0Rd__lF","required":true,"role":"symbol","modules":[{"name":"Atoms"}],"title":"reset(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"(some ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"},{"text":")","kind":"text"}]},"references":{"doc://Atoms/documentation/Atoms/AtomContext":{"kind":"symbol","url":"\/documentation\/atoms\/atomcontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AtomContext","kind":"identifier"}],"type":"topic","title":"AtomContext","abstract":[{"text":"A context structure to read, write, and otherwise interact with atoms.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AtomContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomContext/reset(_:)-8u78a":{"type":"topic","kind":"symbol","url":"\/documentation\/atoms\/atomcontext\/reset(_:)-8u78a","title":"reset(_:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext\/reset(_:)-8u78a","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"(some ","kind":"text"},{"text":"Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP"},{"kind":"text","text":")"}],"required":true,"abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}]},"doc://Atoms/documentation/Atoms/Atom":{"type":"topic","url":"\/documentation\/atoms\/atom","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"title":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms"}}}