{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext\/refresh(_:)-7xzm9"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomContext"]]},"metadata":{"modules":[{"name":"Atoms"}],"required":true,"roleHeading":"Instance Method","externalID":"s:5Atoms11AtomContextP7refreshy8ProducedQyd__qd__YaAA05AsyncB0Rd__lF","symbolKind":"method","title":"refresh(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"refresh","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Node","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"}],"role":"symbol"},"sections":[],"kind":"symbol","abstract":[{"text":"Refreshes and then returns the value associated with the given refreshable atom.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"refresh","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"atom","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","text":"AsyncAtom","preciseIdentifier":"s:5Atoms9AsyncAtomP","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An atom to refresh."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value after the refreshing associated with the given atom is completed."}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This method accepts only asynchronous atoms such as types conforming to:","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","isActive":true},{"text":", ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","type":"reference","isActive":true},{"text":", ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","isActive":true,"type":"reference"},{"text":", ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"It refreshes the value for the given atom and then returns, so the caller can await until","type":"text"},{"text":" ","type":"text"},{"text":"the atom completes the update.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that it can be used only in a context that supports concurrency."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let context = ...","let image = await context.refresh(AsyncImageDataAtom()).value","print(image) \/\/ Prints the data obtained through the network."]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomcontext\/refresh(_:)-7xzm9"]}],"references":{"doc://Atoms/documentation/Atoms/AsyncAtom":{"title":"AsyncAtom","role":"symbol","navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"url":"\/documentation\/atoms\/asyncatom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomContext/refresh(_:)-7xzm9":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext\/refresh(_:)-7xzm9","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"refresh"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"}],"kind":"symbol","title":"refresh(_:)","abstract":[{"text":"Refreshes and then returns the value associated with the given refreshable atom.","type":"text"}],"url":"\/documentation\/atoms\/atomcontext\/refresh(_:)-7xzm9","role":"symbol","required":true,"type":"topic"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"type":"topic","url":"\/documentation\/atoms\/asyncphase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"asynchronous process has not yet been determined."}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"abstract":[{"text":"An atom type that provides asynchronous, sequential elements of the given ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}],"title":"AsyncSequenceAtom"},"doc://Atoms/documentation/Atoms/TaskAtom":{"role":"symbol","type":"topic","url":"\/documentation\/atoms\/taskatom","kind":"symbol","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"title":"TaskAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskAtom"}]},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"url":"\/documentation\/atoms\/throwingtaskatom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}],"kind":"symbol","type":"topic","title":"ThrowingTaskAtom","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","role":"symbol","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous, throwing function.","type":"text"}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"role":"symbol","type":"topic","url":"\/documentation\/atoms\/publisheratom","kind":"symbol","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"title":"PublisherAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomContext":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","title":"AtomContext","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomContext"}],"url":"\/documentation\/atoms\/atomcontext","abstract":[{"type":"text","text":"A context structure to read, write, and otherwise interact with atoms."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomContext"}]},"doc://Atoms/documentation/Atoms":{"kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms","type":"topic","role":"collection","title":"Atoms"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"title":"Produced","role":"symbol","abstract":[{"type":"text","text":"The type of value that this atom produces."}],"url":"\/documentation\/atoms\/atom\/produced","kind":"symbol","required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Produced","kind":"identifier"}]}}}