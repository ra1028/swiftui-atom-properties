{"sections":[],"metadata":{"roleHeading":"Instance Method","externalID":"s:5Atoms11AtomContextP7refreshy8ProducedQyd__qd__YaAA11RefreshableRd__lF","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"refresh"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"}],"title":"refresh(_:)","symbolKind":"method","required":true,"modules":[{"name":"Atoms"}]},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomContext"]]},"abstract":[{"type":"text","text":"Refreshes and then returns the value associated with the given refreshable atom."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"kind":"attribute","text":"@"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"refresh"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"atom"},{"text":": ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Refreshable","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms11RefreshableP","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"atom","content":[{"inlineContent":[{"type":"text","text":"An atom to refresh."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The value after the refreshing associated with the given atom is completed.","type":"text"}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This method only accepts atoms that conform to ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","isActive":true},{"type":"text","text":" protocol."},{"text":" ","type":"text"},{"text":"It refreshes the value with the custom refresh behavior, so the caller can await until","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the atom completes the update."},{"text":" ","type":"text"},{"text":"Note that it can be used only in a context that supports concurrency.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let context = ...","let value = await context.refresh(CustomRefreshableAtom())","print(value)"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomcontext\/refresh(_:)-9fist"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext\/refresh(_:)-9fist"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Atoms/documentation/Atoms/AtomContext/refresh(_:)-9fist":{"abstract":[{"type":"text","text":"Refreshes and then returns the value associated with the given refreshable atom."}],"type":"topic","title":"refresh(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"refresh"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/atoms\/atomcontext\/refresh(_:)-9fist","required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext\/refresh(_:)-9fist","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomContext":{"type":"topic","abstract":[{"type":"text","text":"A context structure to read, write, and otherwise interact with atoms."}],"url":"\/documentation\/atoms\/atomcontext","kind":"symbol","role":"symbol","title":"AtomContext","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AtomContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","navigatorTitle":[{"kind":"identifier","text":"AtomContext"}]},"doc://Atoms/documentation/Atoms/Atom/Produced":{"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","type":"topic","kind":"symbol","title":"Produced","required":true,"url":"\/documentation\/atoms\/atom\/produced","abstract":[{"text":"The type of value that this atom produces.","type":"text"}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Produced","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Refreshable":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Refreshable"}],"abstract":[{"text":"An attribute protocol that allows an atom to have a custom refresh behavior.","type":"text"}],"url":"\/documentation\/atoms\/refreshable","type":"topic","title":"Refreshable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Refreshable","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"}}}