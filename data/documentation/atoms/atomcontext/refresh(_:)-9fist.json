{"metadata":{"modules":[{"name":"Atoms"}],"title":"refresh(_:)","role":"symbol","platforms":[],"roleHeading":"Instance Method","externalID":"s:5Atoms11AtomContextP7refreshy8ProducedQyd__qd__YaAA11RefreshableRd__lF","symbolKind":"method","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"refresh"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}]},"variants":[{"paths":["\/documentation\/atoms\/atomcontext\/refresh(_:)-9fist"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"text":"@","kind":"attribute"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"refresh","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"atom"},{"kind":"text","text":": "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":" : ","kind":"text"},{"text":"Refreshable","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","preciseIdentifier":"s:5Atoms11RefreshableP"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An atom to refresh."}]}],"name":"atom"}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value after the refreshing associated with the given atom is completed."}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This method only accepts atoms that conform to ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","isActive":true},{"text":" protocol.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"It refreshes the value with the custom refresh behavior, so the caller can await until"},{"text":" ","type":"text"},{"type":"text","text":"the atom completes the update."},{"text":" ","type":"text"},{"text":"Note that it can be used only in a context that supports concurrency.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let context = ...","let value = await context.refresh(CustomRefreshableAtom())","print(value)"]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext\/refresh(_:)-9fist"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomContext"]]},"abstract":[{"type":"text","text":"Refreshes and then returns the value associated with the given refreshable atom."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","deprecationSummary":[{"inlineContent":[{"type":"text","text":"`Refreshable` is deprecated. Use a custom refresh function or other alternatives instead."}],"type":"paragraph"}],"sections":[],"references":{"doc://Atoms/documentation/Atoms/AtomContext/refresh(_:)-9fist":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"refresh"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}],"title":"refresh(_:)","deprecated":true,"url":"\/documentation\/atoms\/atomcontext\/refresh(_:)-9fist","required":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext\/refresh(_:)-9fist","abstract":[{"type":"text","text":"Refreshes and then returns the value associated with the given refreshable atom."}],"kind":"symbol","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"title":"Produced","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Produced"}],"required":true,"abstract":[{"type":"text","text":"The type of value that this atom produces."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","url":"\/documentation\/atoms\/atom\/produced","role":"symbol"},"doc://Atoms/documentation/Atoms/Refreshable":{"type":"topic","url":"\/documentation\/atoms\/refreshable","role":"symbol","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","title":"Refreshable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Refreshable"}],"kind":"symbol","navigatorTitle":[{"text":"Refreshable","kind":"identifier"}],"deprecated":true},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"},"doc://Atoms/documentation/Atoms/AtomContext":{"kind":"symbol","type":"topic","url":"\/documentation\/atoms\/atomcontext","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AtomContext","kind":"identifier"}],"navigatorTitle":[{"text":"AtomContext","kind":"identifier"}],"title":"AtomContext","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","abstract":[{"text":"A context structure to read, write, and otherwise interact with atoms.","type":"text"}]}}}