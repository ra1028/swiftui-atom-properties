{"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"text":" ","type":"text"},{"text":"to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","interfaceLanguage":"swift"},"topicSections":[{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/init(_:fileID:line:)"],"generated":true},{"anchor":"Instance-Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/projectedValue","doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue"],"title":"Instance Properties","generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"seeAlsoSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"title":"Property Wrappers","generated":true,"anchor":"Property-Wrappers"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/watchstate"]}],"metadata":{"modules":[{"name":"Atoms"}],"symbolKind":"struct","title":"WatchState","externalID":"s:5Atoms10WatchStateV","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchState","kind":"identifier"}],"roleHeading":"Structure","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","preciseIdentifier":"s:5Atoms9StateAtomP","text":"StateAtom"}],"platforms":["macOS"]}]},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"It starts watching the atom when the view accesses the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue"},{"type":"text","text":", and when the atom changes,"},{"type":"text","text":" "},{"type":"text","text":"the view invalidates its appearance and recomputes the body. However, if only write access is"},{"type":"text","text":" "},{"type":"text","text":"performed, it doesnâ€™t start watching."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"See also ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","isActive":true},{"type":"text","text":" to have read-only access and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"},{"type":"text","text":" to receive updates of"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"reference"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The interface of this property wrapper follows "},{"code":"@State","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"heading","text":"Example","anchor":"Example","level":2},{"type":"codeListing","syntax":"swift","code":["struct CounterView: View {","    @WatchState(CounterAtom())","    var count","","    var body: some View {","        VStack {","            Text(\"Count: \\(count)\")    \/\/ Read value, and start watching.","            Stepper(value: $count) {}  \/\/ Use as a binding","            Button(\"+100\") {","                count += 100           \/\/ Mutation which means simultaneous read-write access.","            }","        }","    }","}"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"sections":[],"kind":"symbol","references":{"doc://Atoms/documentation/Atoms/WatchState/init(_:fileID:line:)":{"type":"topic","kind":"symbol","url":"\/documentation\/atoms\/watchstate\/init(_:fileid:line:)","title":"init(_:fileID:line:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/init(_:fileID:line:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates an instance with the atom to watch."}]},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"type":"unresolvable","title":"SwiftUICore.DynamicProperty","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"url":"\/documentation\/atoms\/watchstateobject","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"title":"WatchStateObject","role":"symbol"},"doc://Atoms/documentation/Atoms/Watch":{"navigatorTitle":[{"kind":"identifier","text":"Watch"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Watch"}],"abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"title":"Watch","type":"topic","role":"symbol","url":"\/documentation\/atoms\/watch"},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","url":"\/documentation\/atoms\/watchstate","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchState","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"title":"WatchState","role":"symbol"},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"role":"symbol","url":"\/documentation\/atoms\/stateatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","kind":"symbol","type":"topic","title":"StateAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/WatchState/projectedValue":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"text":"<","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/projectedValue","role":"symbol","title":"projectedValue","url":"\/documentation\/atoms\/watchstate\/projectedvalue","abstract":[{"type":"text","text":"A binding to the atom value."}]},"doc://Atoms/documentation/Atoms/ViewContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewContext"}],"navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"type":"topic","url":"\/documentation\/atoms\/viewcontext","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","title":"ViewContext","kind":"symbol"},"doc://Atoms/documentation/Atoms/WatchState/wrappedValue":{"role":"symbol","title":"wrappedValue","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue","abstract":[{"type":"text","text":"The underlying value associated with the given atom."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}],"url":"\/documentation\/atoms\/watchstate\/wrappedvalue"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"url":"\/documentation\/atoms\/observableobjectatom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"title":"ObservableObjectAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObjectAtom"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}]},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms"}}}