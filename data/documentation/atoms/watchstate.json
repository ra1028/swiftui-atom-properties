{"abstract":[{"text":"A property wrapper type that can watch and read-write access to the given atom conforms","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},{"text":".","type":"text"}],"kind":"symbol","metadata":{"externalID":"s:5Atoms10WatchStateV","roleHeading":"Structure","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WatchState"}],"modules":[{"name":"Atoms"}],"role":"symbol","title":"WatchState"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/watchstate"]}],"seeAlsoSections":[{"title":"Property Wrappers","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"anchor":"Property-Wrappers"}],"topicSections":[{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/init(_:fileID:line:)"],"generated":true},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/projectedValue","doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue"],"generated":true}],"sections":[],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WatchState","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:5Atoms9StateAtomP","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","text":"StateAtom"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"It starts watching the atom when the view accesses the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue"},{"type":"text","text":", and when the atom changes,"},{"text":" ","type":"text"},{"text":"the view invalidates its appearance and recomputes the body. However, if only write access is","type":"text"},{"type":"text","text":" "},{"text":"performed, it doesnâ€™t start watching.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"See also ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","type":"reference"},{"text":" to have read-only access and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","type":"reference"},{"text":" to receive updates of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true,"type":"reference"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"The interface of this property wrapper follows "},{"code":"@State","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","level":2,"text":"Example","anchor":"Example"},{"type":"codeListing","syntax":"swift","code":["struct CounterView: View {","    @WatchState(CounterAtom())","    var count","","    var body: some View {","        VStack {","            Text(\"Count: \\(count)\")    \/\/ Read value, and start watching.","            Stepper(value: $count) {}  \/\/ Use as a binding","            Button(\"+100\") {","                count += 100           \/\/ Mutation which means simultaneous read-write access.","            }","        }","    }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Atoms/documentation/Atoms/WatchState/projectedValue":{"type":"topic","role":"symbol","title":"projectedValue","kind":"symbol","abstract":[{"type":"text","text":"A binding to the atom value."}],"url":"\/documentation\/atoms\/watchstate\/projectedvalue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"text":"<","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/projectedValue"},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"type":"topic","navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/observableobjectatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","title":"ObservableObjectAtom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/StateAtom":{"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom","role":"symbol","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","title":"StateAtom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/WatchState":{"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true},{"type":"text","text":"."}],"type":"topic","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/watchstate","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","title":"WatchState","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchState","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/WatchState/wrappedValue":{"type":"topic","role":"symbol","title":"wrappedValue","kind":"symbol","abstract":[{"text":"The underlying value associated with the given atom.","type":"text"}],"url":"\/documentation\/atoms\/watchstate\/wrappedvalue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue"},"doc://Atoms/documentation/Atoms/Watch":{"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"type":"topic","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/watch","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","title":"Watch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Watch"}]},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"type":"unresolvable","title":"SwiftUICore.DynamicProperty","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true,"type":"reference"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchStateObject","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"type":"topic","url":"\/documentation\/atoms\/watchstateobject","title":"WatchStateObject"},"doc://Atoms/documentation/Atoms/WatchState/init(_:fileID:line:)":{"abstract":[{"type":"text","text":"Creates an instance with the atom to watch."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/watchstate\/init(_:fileid:line:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/init(_:fileID:line:)","title":"init(_:fileID:line:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Atoms/documentation/Atoms/ViewContext":{"abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ViewContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"type":"topic","url":"\/documentation\/atoms\/viewcontext","title":"ViewContext"}}}