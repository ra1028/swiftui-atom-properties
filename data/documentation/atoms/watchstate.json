{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/init(_:fileID:line:)"],"generated":true,"anchor":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/projectedValue","doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue"],"anchor":"Instance-Properties","generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},{"type":"text","text":"."}],"seeAlsoSections":[{"generated":true,"anchor":"Property-Wrappers","title":"Property Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"]}],"metadata":{"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchState","kind":"identifier"}],"role":"symbol","symbolKind":"struct","externalID":"s:5Atoms10WatchStateV","navigatorTitle":[{"kind":"identifier","text":"WatchState"}],"title":"WatchState","modules":[{"name":"Atoms"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Node"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms9StateAtomP","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","text":"StateAtom"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"It starts watching the atom when the view accesses the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue"},{"type":"text","text":", and when the atom changes,"},{"text":" ","type":"text"},{"type":"text","text":"the view invalidates its appearance and recomputes the body. However, if only write access is"},{"text":" ","type":"text"},{"type":"text","text":"performed, it doesnâ€™t start watching."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See also "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","isActive":true},{"type":"text","text":" to have read-only access and "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","isActive":true,"type":"reference"},{"type":"text","text":" to receive updates of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The interface of this property wrapper follows "},{"type":"codeVoice","code":"@State"},{"text":".","type":"text"}]},{"type":"heading","text":"Example","anchor":"Example","level":2},{"syntax":"swift","code":["struct CounterView: View {","    @WatchState(CounterAtom())","    var count","","    var body: some View {","        VStack {","            Text(\"Count: \\(count)\")    \/\/ Read value, and start watching.","            Stepper(value: $count) {}  \/\/ Use as a binding","            Button(\"+100\") {","                count += 100           \/\/ Mutation which means simultaneous read-write access.","            }","        }","    }","}"],"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/watchstate"]}],"references":{"doc://Atoms/documentation/Atoms/Watch":{"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"role":"symbol","url":"\/documentation\/atoms\/watch","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","type":"topic","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"title":"Watch"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"},"doc://Atoms/documentation/Atoms/WatchState/projectedValue":{"title":"projectedValue","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/watchstate\/projectedvalue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"text":"<","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"A binding to the atom value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/projectedValue","role":"symbol"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"title":"SwiftUICore.DynamicProperty","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP","type":"unresolvable"},"doc://Atoms/documentation/Atoms/WatchState/init(_:fileID:line:)":{"title":"init(_:fileID:line:)","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/watchstate\/init(_:fileid:line:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates an instance with the atom to watch."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/init(_:fileID:line:)","role":"symbol"},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WatchState"}],"role":"symbol","url":"\/documentation\/atoms\/watchstate","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","type":"topic","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"title":"WatchState"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"title":"WatchStateObject","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/watchstateobject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","role":"symbol"},"doc://Atoms/documentation/Atoms/WatchState/wrappedValue":{"kind":"symbol","abstract":[{"type":"text","text":"The underlying value associated with the given atom."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","text":"Produced"}],"role":"symbol","url":"\/documentation\/atoms\/watchstate\/wrappedvalue","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue","type":"topic","title":"wrappedValue"},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/stateatom","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","role":"symbol"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"url":"\/documentation\/atoms\/observableobjectatom","kind":"symbol","title":"ObservableObjectAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/ViewContext":{"type":"topic","url":"\/documentation\/atoms\/viewcontext","abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"kind":"symbol","role":"symbol","title":"ViewContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","navigatorTitle":[{"kind":"identifier","text":"ViewContext"}]}}}