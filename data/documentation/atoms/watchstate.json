{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState"},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"WatchState"}],"externalID":"s:5Atoms10WatchStateV","symbolKind":"struct","role":"symbol","modules":[{"name":"Atoms"}],"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchState","kind":"identifier"}],"title":"WatchState"},"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:5Atoms9StateAtomP","text":"StateAtom","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It starts watching the atom when the view accesses the "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue","isActive":true,"type":"reference"},{"type":"text","text":", and when the atom changes,"},{"text":" ","type":"text"},{"type":"text","text":"the view invalidates its appearance and recomputes the body. However, if only write access is"},{"text":" ","type":"text"},{"type":"text","text":"performed, it doesnâ€™t start watching."}]},{"type":"paragraph","inlineContent":[{"text":"See also ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","isActive":true},{"type":"text","text":" to have read-only access and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"},{"type":"text","text":" to receive updates of"},{"text":" ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"reference","isActive":true},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"The interface of this property wrapper follows ","type":"text"},{"code":"@State","type":"codeVoice"},{"type":"text","text":"."}]},{"level":2,"anchor":"Example","type":"heading","text":"Example"},{"syntax":"swift","code":["struct CounterView: View {","    @WatchState(CounterAtom())","    var count","","    var body: some View {","        VStack {","            Text(\"Count: \\(count)\")    \/\/ Read value, and start watching.","            Stepper(value: $count) {}  \/\/ Use as a binding","            Button(\"+100\") {","                count += 100           \/\/ Mutation which means simultaneous read-write access.","            }","        }","    }","}"],"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/watchstate"]}],"sections":[],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","seeAlsoSections":[{"generated":true,"title":"Property Wrappers","anchor":"Property-Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"]}],"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/init(_:fileID:line:)"],"title":"Initializers","anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/projectedValue","doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"}],"references":{"doc://Atoms/documentation/Atoms/WatchState/projectedValue":{"role":"symbol","title":"projectedValue","abstract":[{"text":"A binding to the atom value.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/projectedValue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"projectedValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/atoms\/watchstate\/projectedvalue"},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","url":"\/documentation\/atoms\/stateatom","title":"StateAtom"},"doc://Atoms/documentation/Atoms/ViewContext":{"abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"title":"ViewContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewContext"}],"url":"\/documentation\/atoms\/viewcontext"},"doc://Atoms/documentation/Atoms/Watch":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Watch","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Watch"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","type":"topic","title":"Watch","url":"\/documentation\/atoms\/watch","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}]},"doc://Atoms/documentation/Atoms/WatchState":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","role":"symbol","url":"\/documentation\/atoms\/watchstate","navigatorTitle":[{"kind":"identifier","text":"WatchState"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}],"kind":"symbol","type":"topic","title":"WatchState","abstract":[{"text":"A property wrapper type that can watch and read-write access to the given atom conforms","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference"},{"type":"text","text":"."}]},"doc://Atoms/documentation/Atoms/WatchState/init(_:fileID:line:)":{"abstract":[{"type":"text","text":"Creates an instance with the atom to watch."}],"title":"init(_:fileID:line:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/init(_:fileID:line:)","url":"\/documentation\/atoms\/watchstate\/init(_:fileid:line:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"title":"SwiftUICore.DynamicProperty","type":"unresolvable","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"},"doc://Atoms/documentation/Atoms/WatchState/wrappedValue":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue","abstract":[{"text":"The underlying value associated with the given atom.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"}],"role":"symbol","title":"wrappedValue","url":"\/documentation\/atoms\/watchstate\/wrappedvalue"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"url":"\/documentation\/atoms\/watchstateobject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","title":"WatchStateObject","type":"topic","abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"role":"symbol"},"doc://Atoms/documentation/Atoms":{"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","url":"\/documentation\/atoms","role":"collection","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol"}}}