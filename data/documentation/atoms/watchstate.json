{"abstract":[{"text":"A property wrapper type that can watch and read-write access to the given atom conforms","type":"text"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true,"type":"reference"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Property Wrappers","anchor":"Property-Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"externalID":"s:5Atoms10WatchStateV","title":"WatchState","modules":[{"name":"Atoms"}],"roleHeading":"Structure","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"role":"symbol","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}]},"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/init(_:fileID:line:)"],"generated":true,"anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/projectedValue","doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue"],"anchor":"Instance-Properties","title":"Instance Properties"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/watchstate"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","kind":"typeIdentifier","text":"StateAtom","preciseIdentifier":"s:5Atoms9StateAtomP"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"It starts watching the atom when the view accesses the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue","isActive":true},{"text":", and when the atom changes,","type":"text"},{"text":" ","type":"text"},{"text":"the view invalidates its appearance and recomputes the body. However, if only write access is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"performed, it doesnâ€™t start watching."}]},{"type":"paragraph","inlineContent":[{"text":"See also ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","type":"reference"},{"text":" to have read-only access and ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","isActive":true},{"text":" to receive updates of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true,"type":"reference"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The interface of this property wrapper follows "},{"type":"codeVoice","code":"@State"},{"type":"text","text":"."}]},{"anchor":"Example","text":"Example","level":2,"type":"heading"},{"type":"codeListing","syntax":"swift","code":["struct CounterView: View {","    @WatchState(CounterAtom())","    var count","","    var body: some View {","        VStack {","            Text(\"Count: \\(count)\")    \/\/ Read value, and start watching.","            Stepper(value: $count) {}  \/\/ Use as a binding","            Button(\"+100\") {","                count += 100           \/\/ Mutation which means simultaneous read-write access.","            }","        }","    }","}"]}],"kind":"content"}],"references":{"doc://Atoms/documentation/Atoms":{"url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"type":"topic","kind":"symbol","title":"Atoms","role":"collection"},"doc://Atoms/documentation/Atoms/WatchState/init(_:fileID:line:)":{"type":"topic","url":"\/documentation\/atoms\/watchstate\/init(_:fileid:line:)","kind":"symbol","title":"init(_:fileID:line:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/init(_:fileID:line:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Node"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}],"abstract":[{"text":"Creates an instance with the atom to watch.","type":"text"}]},"doc://Atoms/documentation/Atoms/Watch":{"title":"Watch","url":"\/documentation\/atoms\/watch","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Watch","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","role":"symbol","navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}]},"doc://Atoms/documentation/Atoms/WatchStateObject":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","url":"\/documentation\/atoms\/watchstateobject","type":"topic","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A property wrapper type that can watch the given atom conforms to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"title":"WatchStateObject"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP","type":"unresolvable","title":"SwiftUICore.DynamicProperty"},"doc://Atoms/documentation/Atoms/StateAtom":{"url":"\/documentation\/atoms\/stateatom","title":"StateAtom","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}]},"doc://Atoms/documentation/Atoms/WatchState":{"title":"WatchState","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","url":"\/documentation\/atoms\/watchstate","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"A property wrapper type that can watch and read-write access to the given atom conforms","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}]},"doc://Atoms/documentation/Atoms/WatchState/projectedValue":{"url":"\/documentation\/atoms\/watchstate\/projectedvalue","title":"projectedValue","abstract":[{"text":"A binding to the atom value.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/projectedValue"},"doc://Atoms/documentation/Atoms/ViewContext":{"url":"\/documentation\/atoms\/viewcontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}],"navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"title":"ViewContext","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/WatchState/wrappedValue":{"title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}],"abstract":[{"type":"text","text":"The underlying value associated with the given atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState\/wrappedValue","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/watchstate\/wrappedvalue","role":"symbol"}}}