{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomcurrentcontext\/reset(_:)-4z8bk"]}],"sections":[],"abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"metadata":{"role":"symbol","modules":[{"name":"Atoms"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(some ","kind":"text"},{"text":"Atom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP"},{"text":")","kind":"text"}],"symbolKind":"method","roleHeading":"Instance Method","title":"reset(_:)","externalID":"s:5Atoms18AtomCurrentContextV5resetyyxAA0B0RzlF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"atom","kind":"internalParam"},{"kind":"text","text":": some "},{"text":"Atom","preciseIdentifier":"s:5Atoms4AtomP","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"typeIdentifier"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An atom to reset."}]}],"name":"atom"}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This method resets the value for the given atom and then notifies downstream","type":"text"},{"text":" ","type":"text"},{"text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly","type":"text"},{"type":"text","text":" "},{"type":"text","text":"generated value will be produced."}]},{"syntax":"swift","type":"codeListing","code":["let context = ...","context[TextAtom()] = \"New text\"","print(context.read(TextAtom())) \/\/ Prints \"New text\"","context.reset(TextAtom())","print(context.read(TextAtom())) \/\/ Prints \"Text\""]}],"kind":"content"}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext\/reset(_:)-4z8bk","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"]]},"kind":"symbol","references":{"doc://Atoms/documentation/Atoms/AtomCurrentContext/reset(_:)-4z8bk":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext\/reset(_:)-4z8bk","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"(some ","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP","text":"Atom","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/atoms\/atomcurrentcontext\/reset(_:)-4z8bk","abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"title":"reset(_:)","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"url":"\/documentation\/atoms\/atomcurrentcontext","title":"AtomCurrentContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","role":"symbol","navigatorTitle":[{"text":"AtomCurrentContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomCurrentContext","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A context structure to read, set, and otherwise interact with atoms."}],"type":"topic"},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"}}}