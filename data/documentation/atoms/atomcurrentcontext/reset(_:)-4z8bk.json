{"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"]]},"metadata":{"modules":[{"name":"Atoms"}],"roleHeading":"Instance Method","externalID":"s:5Atoms18AtomCurrentContextV5resetyyxAA0B0RzlF","title":"reset(_:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"(some "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"},{"text":")","kind":"text"}],"role":"symbol"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext\/reset(_:)-4z8bk"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"atom"},{"text":": some ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"typeIdentifier","text":"Atom","preciseIdentifier":"s:5Atoms4AtomP"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"An atom to reset.","type":"text"}],"type":"paragraph"}],"name":"atom"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method resets the value for the given atom and then notifies downstream"},{"type":"text","text":" "},{"type":"text","text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly"},{"type":"text","text":" "},{"text":"generated value will be produced.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let context = ...","context[TextAtom()] = \"New text\"","print(context.read(TextAtom())) \/\/ Prints \"New text\"","context.reset(TextAtom())","print(context.read(TextAtom())) \/\/ Prints \"Text\""]}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomcurrentcontext\/reset(_:)-4z8bk"]}],"sections":[],"references":{"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"title":"Atom"},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"kind":"symbol","abstract":[{"text":"A context structure to read, set, and otherwise interact with atoms.","type":"text"}],"title":"AtomCurrentContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomCurrentContext"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","url":"\/documentation\/atoms\/atomcurrentcontext","role":"symbol","navigatorTitle":[{"text":"AtomCurrentContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomCurrentContext/reset(_:)-4z8bk":{"abstract":[{"type":"text","text":"Resets the value associated with the given atom, and then notifies."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"kind":"text","text":"(some "},{"text":"Atom","preciseIdentifier":"s:5Atoms4AtomP","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext\/reset(_:)-4z8bk","title":"reset(_:)","url":"\/documentation\/atoms\/atomcurrentcontext\/reset(_:)-4z8bk","kind":"symbol"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"}}}