{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"atom","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Atom","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP"}]}]},{"kind":"parameters","parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"text":"An atom to reset.","type":"text"}]}]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method resets the value for the given atom and then notifies downstream"},{"type":"text","text":" "},{"text":"atoms and views. Thereafter, if any other atoms or views are watching the atom, a newly","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"generated value will be produced."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let context = ...","context[TextAtom()] = \"New text\"","print(context.read(TextAtom())) \/\/ Prints \"New text\"","context.reset(TextAtom())","print(context.read(TextAtom())) \/\/ Prints \"Text\""]}],"kind":"content"}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"s:5Atoms18AtomCurrentContextV5resetyyxAA0B0RzlF","modules":[{"name":"Atoms"}],"role":"symbol","title":"reset(_:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"text":"Node","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"]]},"abstract":[{"text":"Resets the value associated with the given atom, and then notifies.","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomcurrentcontext\/reset(_:)-4z8bk"]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext\/reset(_:)-4z8bk","interfaceLanguage":"swift"},"references":{"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomCurrentContext/reset(_:)-4z8bk":{"title":"reset(_:)","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext\/reset(_:)-4z8bk","url":"\/documentation\/atoms\/atomcurrentcontext\/reset(_:)-4z8bk","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"text":"Resets the value associated with the given atom, and then notifies.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"title":"AtomCurrentContext","type":"topic","navigatorTitle":[{"text":"AtomCurrentContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","url":"\/documentation\/atoms\/atomcurrentcontext","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomCurrentContext"}],"role":"symbol","abstract":[{"text":"A context structure to read, set, and otherwise interact with atoms.","type":"text"}]},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom","title":"Atom","role":"symbol","type":"topic"}}}