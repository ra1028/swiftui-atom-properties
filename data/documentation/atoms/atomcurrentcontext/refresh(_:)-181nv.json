{"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"]]},"abstract":[{"type":"text","text":"Refreshes and then returns the value associated with the given refreshable atom."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomcurrentcontext\/refresh(_:)-181nv"]}],"metadata":{"modules":[{"name":"Atoms"}],"externalID":"s:5Atoms18AtomCurrentContextV7refreshy8ProducedQzxYaAA05AsyncB0RzlF","roleHeading":"Instance Method","title":"refresh(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"refresh","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Node","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Node","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","text":"Produced"}],"role":"symbol","symbolKind":"method"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"refresh"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"atom","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"AsyncAtom","preciseIdentifier":"s:5Atoms9AsyncAtomP","kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"An atom to refresh.","type":"text"}],"type":"paragraph"}],"name":"atom"}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"The value after the refreshing associated with the given atom is completed."}],"type":"paragraph"}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method accepts only asynchronous atoms such as types conforming to:"},{"type":"text","text":" "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","type":"reference","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","type":"reference","isActive":true},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom"},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It refreshes the value for the given atom and then returns, so the caller can await until"},{"text":" ","type":"text"},{"type":"text","text":"the atom completes the update."},{"text":" ","type":"text"},{"text":"Note that it can be used only in a context that supports concurrency.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let context = ...","let image = await context.refresh(AsyncImageDataAtom()).value","print(image) \/\/ Prints the data obtained through the network."]}],"kind":"content"}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext\/refresh(_:)-181nv","interfaceLanguage":"swift"},"references":{"doc://Atoms/documentation/Atoms/PublisherAtom":{"navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","type":"topic","kind":"symbol","title":"PublisherAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/publisheratom","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"code":"Publisher","type":"codeVoice"},{"text":" as an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}]},"doc://Atoms/documentation/Atoms/AsyncAtom":{"navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","type":"topic","kind":"symbol","title":"AsyncAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncAtom"}],"url":"\/documentation\/atoms\/asyncatom","abstract":[{"text":"Declares that a type can produce a refreshable value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"title":"AtomCurrentContext","type":"topic","navigatorTitle":[{"text":"AtomCurrentContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","url":"\/documentation\/atoms\/atomcurrentcontext","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomCurrentContext"}],"role":"symbol","abstract":[{"text":"A context structure to read, set, and otherwise interact with atoms.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomCurrentContext/refresh(_:)-181nv":{"url":"\/documentation\/atoms\/atomcurrentcontext\/refresh(_:)-181nv","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"refresh","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Node"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Refreshes and then returns the value associated with the given refreshable atom.","type":"text"}],"title":"refresh(_:)","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext\/refresh(_:)-181nv"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"title":"ThrowingTaskAtom","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ThrowingTaskAtom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskAtom"}],"url":"\/documentation\/atoms\/throwingtaskatom","type":"topic","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous, throwing function.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/TaskAtom":{"navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","type":"topic","kind":"symbol","title":"TaskAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskAtom"}],"url":"\/documentation\/atoms\/taskatom","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}]},"doc://Atoms/documentation/Atoms/AsyncPhase":{"abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncPhase","kind":"identifier"}],"kind":"symbol","title":"AsyncPhase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","type":"topic","kind":"symbol","title":"Produced","required":true,"url":"\/documentation\/atoms\/atom\/produced","abstract":[{"text":"The type of value that this atom produces.","type":"text"}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Produced","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"title":"AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"url":"\/documentation\/atoms\/asyncsequenceatom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceAtom"}],"navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"}}}