{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"refresh","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Node","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"atom"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Node","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"AsyncAtom","preciseIdentifier":"s:5Atoms9AsyncAtomP","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An atom to refresh."}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value after the refreshing associated with the given atom is completed."}]}],"kind":"content"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This method accepts only asynchronous atoms such as types conforming to:","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","isActive":true},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","type":"reference"},{"text":", ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","isActive":true,"type":"reference"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"It refreshes the value for the given atom and then returns, so the caller can await until","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the atom completes the update."},{"type":"text","text":" "},{"text":"Note that it can be used only in a context that supports concurrency.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let context = ...","let image = await context.refresh(AsyncImageDataAtom()).value","print(image) \/\/ Prints the data obtained through the network."]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/atomcurrentcontext\/refresh(_:)-181nv"]}],"metadata":{"role":"symbol","externalID":"s:5Atoms18AtomCurrentContextV7refreshy8ProducedQzxYaAA05AsyncB0RzlF","modules":[{"name":"Atoms"}],"title":"refresh(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"refresh","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}],"symbolKind":"method","roleHeading":"Instance Method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext\/refresh(_:)-181nv"},"kind":"symbol","abstract":[{"type":"text","text":"Refreshes and then returns the value associated with the given refreshable atom."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" value.","type":"text"}],"kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","type":"topic","role":"symbol","title":"AsyncSequenceAtom","navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"url":"\/documentation\/atoms\/atomcurrentcontext","title":"AtomCurrentContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","role":"symbol","navigatorTitle":[{"text":"AtomCurrentContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomCurrentContext","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A context structure to read, set, and otherwise interact with atoms."}],"type":"topic"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" value.","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"role":"symbol","title":"PublisherAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/publisheratom"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"kind":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","type":"topic","role":"symbol","title":"ThrowingTaskAtom","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}]},"doc://Atoms/documentation/Atoms/AsyncAtom":{"url":"\/documentation\/atoms\/asyncatom","kind":"symbol","navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","type":"topic","role":"symbol","title":"AsyncAtom","abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomCurrentContext/refresh(_:)-181nv":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext\/refresh(_:)-181nv","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"refresh","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":">(","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"}],"kind":"symbol","url":"\/documentation\/atoms\/atomcurrentcontext\/refresh(_:)-181nv","abstract":[{"type":"text","text":"Refreshes and then returns the value associated with the given refreshable atom."}],"title":"refresh(_:)","role":"symbol"},"doc://Atoms/documentation/Atoms/Atom/Produced":{"type":"topic","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Produced"}],"kind":"symbol","abstract":[{"type":"text","text":"The type of value that this atom produces."}],"url":"\/documentation\/atoms\/atom\/produced","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Produced","title":"Produced"},"doc://Atoms/documentation/Atoms/TaskAtom":{"type":"topic","title":"TaskAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","url":"\/documentation\/atoms\/taskatom","role":"symbol","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous function.","type":"text"}],"navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}]}}}