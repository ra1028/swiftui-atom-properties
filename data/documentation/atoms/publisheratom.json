{"seeAlsoSections":[{"generated":true,"anchor":"Atoms","title":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms9AsyncAtomP","text":"AsyncAtom"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The sequential values emitted by the "},{"code":"Publisher","type":"codeVoice"},{"type":"text","text":" will be converted into an enum representation"},{"type":"text","text":" "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"text":" that changes overtime. When the publisher emits new results, it notifies changes to","type":"text"},{"type":"text","text":" "},{"text":"downstream atoms and views, so that they can consume it without managing subscription.","type":"text"}]},{"level":2,"anchor":"Output-Value","type":"heading","text":"Output Value"},{"inlineContent":[{"text":"AsyncPhase<Self.Publisher.Output, Self.Publisher.Failure>","type":"text"}],"type":"paragraph"},{"text":"Example","type":"heading","level":2,"anchor":"Example"},{"syntax":"swift","code":["struct TimerAtom: PublisherAtom, Hashable {","    func publisher(context: Context) -> AnyPublisher<Date, Never> {","        Timer.publish(every: 1, on: .main, in: .default)","            .autoconnect()","            .eraseToAnyPublisher()","    }","}","","struct TimerView: View {","    @Watch(TimerAtom())","    var timer","","    var body: some View {","        switch timer {","        case .suspending:","            Text(\"Waiting\")","","        case .success(let date):","            Text(\"Now: \\(date)\")","        }","    }","}"],"type":"codeListing"}],"kind":"content"}],"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/publisheratom"]}],"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/Publisher"],"anchor":"Associated-Types","generated":true,"title":"Associated Types"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/publisher(context:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"}],"abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"code":"Publisher","type":"codeVoice"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"text":" value.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},"metadata":{"modules":[{"name":"Atoms"}],"symbolKind":"protocol","roleHeading":"Protocol","externalID":"s:5Atoms13PublisherAtomP","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PublisherAtom","kind":"identifier"}],"navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"title":"PublisherAtom","role":"symbol"},"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"kind":"relationships","type":"inheritsFrom","title":"Inherits From"}],"references":{"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","role":"symbol","navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}]},"doc://Atoms/documentation/Atoms/StateAtom":{"url":"\/documentation\/atoms\/stateatom","title":"StateAtom","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}]},"doc://Atoms/documentation/Atoms/PublisherAtom/publisher(context:)":{"required":true,"kind":"symbol","role":"symbol","title":"publisher(context:)","abstract":[{"text":"Creates a publisher to be subscribed when this atom is actually used.","type":"text"}],"type":"topic","url":"\/documentation\/atoms\/publisheratom\/publisher(context:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/publisher(context:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"publisher"},{"kind":"text","text":"("},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP7Contexta","text":"Context","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms13PublisherAtomP0B0Qa","text":"Publisher"}]},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncPhase","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModifiedAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","role":"symbol","navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/modifiedatom","title":"ModifiedAtom","kind":"symbol"},"doc://Atoms/documentation/Atoms/Atom":{"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","navigatorTitle":[{"text":"Atom","kind":"identifier"}],"url":"\/documentation\/atoms\/atom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Atom","kind":"identifier"}],"title":"Atom","kind":"symbol"},"doc://Atoms/s8SendableP":{"identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ThrowingTaskAtom","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskAtom"}],"title":"ThrowingTaskAtom","role":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"url":"\/documentation\/atoms\/asyncsequenceatom","title":"AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" value."}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"kind":"symbol","url":"\/documentation\/atoms\/publisheratom","navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"title":"PublisherAtom","type":"topic","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PublisherAtom","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/ValueAtom":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","role":"symbol","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/valueatom","title":"ValueAtom","abstract":[{"type":"text","text":"An atom type that provides a read-only value."}]},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"abstract":[{"text":"An atom that provides an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value from the asynchronous throwable function."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhaseAtom"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"title":"AsyncPhaseAtom","role":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom"},"doc://Atoms/documentation/Atoms":{"url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"type":"topic","kind":"symbol","title":"Atoms","role":"collection"},"doc://Atoms/documentation/Atoms/TaskAtom":{"abstract":[{"text":"An atom type that provides a nonthrowing ","type":"text"},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous function.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","role":"symbol","navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/taskatom","title":"TaskAtom","kind":"symbol"},"doc://Atoms/documentation/Atoms/PublisherAtom/Publisher":{"required":true,"kind":"symbol","role":"symbol","title":"Publisher","abstract":[{"text":"The type of publisher that this atom manages.","type":"text"}],"type":"topic","url":"\/documentation\/atoms\/publisheratom\/publisher","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/Publisher","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Publisher","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Publisher","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9PublisherP"}]},"doc://Atoms/documentation/Atoms/AsyncAtom":{"url":"\/documentation\/atoms\/asyncatom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}],"abstract":[{"text":"Declares that a type can produce a refreshable value that can be accessed from everywhere.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncAtom"}],"title":"AsyncAtom","role":"symbol","type":"topic","kind":"symbol"}}}