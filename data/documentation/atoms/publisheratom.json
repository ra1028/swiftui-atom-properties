{"metadata":{"title":"PublisherAtom","roleHeading":"Protocol","externalID":"s:5Atoms13PublisherAtomP","modules":[{"name":"Atoms"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublisherAtom"}],"navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"symbolKind":"protocol","role":"symbol"},"variants":[{"paths":["\/documentation\/atoms\/publisheratom"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"code":"Publisher","type":"codeVoice"},{"text":" as an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"generated":true,"title":"Associated Types","anchor":"Associated-Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/Publisher"]},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/publisher(context:)"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublisherAtom"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"AsyncAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","preciseIdentifier":"s:5Atoms9AsyncAtomP"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The sequential values emitted by the ","type":"text"},{"code":"Publisher","type":"codeVoice"},{"type":"text","text":" will be converted into an enum representation"},{"type":"text","text":" "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" that changes overtime. When the publisher emits new results, it notifies changes to"},{"type":"text","text":" "},{"type":"text","text":"downstream atoms and views, so that they can consume it without managing subscription."}]},{"type":"heading","level":2,"text":"Output Value","anchor":"Output-Value"},{"inlineContent":[{"type":"text","text":"AsyncPhase<Self.Publisher.Output, Self.Publisher.Failure>"}],"type":"paragraph"},{"anchor":"Example","text":"Example","type":"heading","level":2},{"code":["struct TimerAtom: PublisherAtom, Hashable {","    func publisher(context: Context) -> AnyPublisher<Date, Never> {","        Timer.publish(every: 1, on: .main, in: .default)","            .autoconnect()","            .eraseToAnyPublisher()","    }","}","","struct TimerView: View {","    @Watch(TimerAtom())","    var timer","","    var body: some View {","        switch timer {","        case .suspending:","            Text(\"Waiting\")","","        case .success(let date):","            Text(\"Now: \\(date)\")","        }","    }","}"],"type":"codeListing","syntax":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"],"type":"inheritsFrom","title":"Inherits From","kind":"relationships"}],"seeAlsoSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"generated":true,"anchor":"Atoms","title":"Atoms"}],"references":{"doc://Atoms/documentation/Atoms/PublisherAtom":{"url":"\/documentation\/atoms\/publisheratom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"type":"codeVoice","code":"Publisher"},{"text":" as an ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"title":"PublisherAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublisherAtom"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}]},"doc://Atoms/documentation/Atoms/ValueAtom":{"navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}],"kind":"symbol","url":"\/documentation\/atoms\/valueatom","type":"topic","title":"ValueAtom","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ValueAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/PublisherAtom/Publisher":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/Publisher","kind":"symbol","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"},{"text":" : ","kind":"text"},{"text":"Publisher","preciseIdentifier":"s:7Combine9PublisherP","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/atoms\/publisheratom\/publisher","abstract":[{"type":"text","text":"The type of publisher that this atom manages."}],"role":"symbol","title":"Publisher"},"doc://Atoms/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Atoms\/s8SendableP","title":"Swift.Sendable"},"doc://Atoms/documentation/Atoms/PublisherAtom/publisher(context:)":{"url":"\/documentation\/atoms\/publisheratom\/publisher(context:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/publisher(context:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"publisher"},{"kind":"text","text":"("},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:5Atoms4AtomP7Contexta"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms13PublisherAtomP0B0Qa","text":"Publisher"}],"kind":"symbol","title":"publisher(context:)","required":true,"role":"symbol","abstract":[{"text":"Creates a publisher to be subscribed when this atom is actually used.","type":"text"}],"type":"topic"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","type":"topic","title":"AsyncSequenceAtom","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","abstract":[{"text":"An atom type that provides asynchronous, sequential elements of the given ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"topic","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"title":"AsyncPhase"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskAtom"}],"kind":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","type":"topic","title":"ThrowingTaskAtom","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}]},"doc://Atoms/documentation/Atoms/AsyncAtom":{"url":"\/documentation\/atoms\/asyncatom","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncAtom"}],"kind":"symbol","title":"AsyncAtom"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"kind":"symbol","url":"\/documentation\/atoms\/modifiedatom","type":"topic","title":"ModifiedAtom","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","abstract":[{"text":"An atom type that applies a modifier to an atom.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","type":"topic","title":"AsyncPhaseAtom","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","abstract":[{"type":"text","text":"An atom that provides an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value from the asynchronous throwable function."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhaseAtom"}]},"doc://Atoms/documentation/Atoms/TaskAtom":{"url":"\/documentation\/atoms\/taskatom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous function."}],"title":"TaskAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskAtom"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}]},"doc://Atoms/documentation/Atoms/Atom":{"type":"topic","url":"\/documentation\/atoms\/atom","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"title":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"role":"symbol","url":"\/documentation\/atoms\/stateatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","kind":"symbol","type":"topic","title":"StateAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"url":"\/documentation\/atoms\/observableobjectatom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"title":"ObservableObjectAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObjectAtom"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}]}}}