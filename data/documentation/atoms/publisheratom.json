{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublisherAtom"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:5Atoms9AsyncAtomP","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","kind":"typeIdentifier","text":"AsyncAtom"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The sequential values emitted by the ","type":"text"},{"code":"Publisher","type":"codeVoice"},{"text":" will be converted into an enum representation","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"text":" that changes overtime. When the publisher emits new results, it notifies changes to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"downstream atoms and views, so that they can consume it without managing subscription."}]},{"text":"Output Value","level":2,"type":"heading","anchor":"Output-Value"},{"type":"paragraph","inlineContent":[{"text":"AsyncPhase<Self.Publisher.Output, Self.Publisher.Failure>","type":"text"}]},{"type":"heading","text":"Example","level":2,"anchor":"Example"},{"type":"codeListing","syntax":"swift","code":["struct TimerAtom: PublisherAtom, Hashable {","    func publisher(context: Context) -> AnyPublisher<Date, Never> {","        Timer.publish(every: 1, on: .main, in: .default)","            .autoconnect()","            .eraseToAnyPublisher()","    }","}","","struct TimerView: View {","    @Watch(TimerAtom())","    var timer","","    var body: some View {","        switch timer {","        case .suspending:","            Text(\"Waiting\")","","        case .success(let date):","            Text(\"Now: \\(date)\")","        }","    }","}"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/publisheratom"]}],"abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}],"sections":[],"kind":"symbol","relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/s8SendableP"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"anchor":"Atoms","generated":true,"title":"Atoms"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"externalID":"s:5Atoms13PublisherAtomP","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublisherAtom","kind":"identifier"}],"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"role":"symbol","title":"PublisherAtom","modules":[{"name":"Atoms"}]},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/Publisher"],"generated":true,"title":"Associated Types","anchor":"Associated-Types"},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/publisher(context:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},"references":{"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","title":"ThrowingTaskAtom","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous, throwing function."}],"url":"\/documentation\/atoms\/throwingtaskatom"},"doc://Atoms/documentation/Atoms/StateAtom":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateAtom"}],"type":"topic","url":"\/documentation\/atoms\/stateatom","kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"title":"StateAtom"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"topic","title":"AsyncPhase","role":"symbol","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncPhase","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}]},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms/ValueAtom":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","title":"ValueAtom","abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"url":"\/documentation\/atoms\/valueatom"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhaseAtom"}],"url":"\/documentation\/atoms\/asyncphaseatom","title":"AsyncPhaseAtom","type":"topic","abstract":[{"type":"text","text":"An atom that provides an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"text":" value from the asynchronous throwable function.","type":"text"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"title":"PublisherAtom","abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" value.","type":"text"}],"type":"topic","url":"\/documentation\/atoms\/publisheratom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublisherAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}]},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ModifiedAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that applies a modifier to an atom.","type":"text"}],"url":"\/documentation\/atoms\/modifiedatom","kind":"symbol","navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}],"type":"topic","title":"ModifiedAtom","role":"symbol"},"doc://Atoms/documentation/Atoms":{"role":"collection","type":"topic","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"kind":"symbol","title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/PublisherAtom/publisher(context:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"publisher"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","preciseIdentifier":"s:5Atoms4AtomP7Contexta","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Publisher","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms13PublisherAtomP0B0Qa"}],"type":"topic","required":true,"url":"\/documentation\/atoms\/publisheratom\/publisher(context:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/publisher(context:)","title":"publisher(context:)","abstract":[{"type":"text","text":"Creates a publisher to be subscribed when this atom is actually used."}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"}],"kind":"symbol","title":"AsyncSequenceAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","abstract":[{"text":"An atom type that provides asynchronous, sequential elements of the given ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" value."}],"url":"\/documentation\/atoms\/asyncsequenceatom"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","kind":"symbol","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/TaskAtom":{"title":"TaskAtom","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous function."}],"type":"topic","url":"\/documentation\/atoms\/taskatom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}]},"doc://Atoms/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Atoms\/s8SendableP"},"doc://Atoms/documentation/Atoms/PublisherAtom/Publisher":{"title":"Publisher","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Publisher"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Combine9PublisherP","kind":"typeIdentifier","text":"Publisher"}],"type":"topic","url":"\/documentation\/atoms\/publisheratom\/publisher","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom\/Publisher","required":true,"abstract":[{"type":"text","text":"The type of publisher that this atom manages."}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"title":"AsyncAtom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","url":"\/documentation\/atoms\/asyncatom","role":"symbol"}}}