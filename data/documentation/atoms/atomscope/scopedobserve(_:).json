{"abstract":[{"type":"text","text":"Observes the state changes with a snapshot that captures the whole atom states and"},{"type":"text","text":" "},{"type":"text","text":"their dependency graph at the point in time for debugging purposes."}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope"]]},"variants":[{"paths":["\/documentation\/atoms\/atomscope\/scopedobserve(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedObserve(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scopedObserve"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"onUpdate","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" @","kind":"text"},{"preciseIdentifier":"s:ScM","kind":"typeIdentifier","text":"MainActor"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:5Atoms8SnapshotV","kind":"typeIdentifier","text":"Snapshot","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","preciseIdentifier":"s:5Atoms9AtomScopeV","text":"AtomScope","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Content","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"onUpdate","content":[{"type":"paragraph","inlineContent":[{"text":"A closure to handle a snapshot of recent updates.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"The self instance.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Note that unlike ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/observe(_:)","type":"reference","isActive":true},{"type":"text","text":", this observes only the state changes of atoms"},{"text":" ","type":"text"},{"type":"text","text":"initialized in this scope."}]}]}],"sections":[],"metadata":{"modules":[{"name":"Atoms"}],"role":"symbol","title":"scopedObserve(_:)","symbolKind":"method","externalID":"s:5Atoms9AtomScopeV13scopedObserveyACyxGyAA8SnapshotVcF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scopedObserve"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:5Atoms8SnapshotV","text":"Snapshot","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AtomScope","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms9AtomScopeV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":">"}]},"references":{"doc://Atoms/documentation/Atoms/Snapshot":{"title":"Snapshot","url":"\/documentation\/atoms\/snapshot","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Snapshot"}],"navigatorTitle":[{"kind":"identifier","text":"Snapshot"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","kind":"symbol","type":"topic","abstract":[{"text":"A snapshot structure that captures specific set of values of atoms and their dependency graph.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomScope/scopedObserve(_:)":{"abstract":[{"text":"Observes the state changes with a snapshot that captures the whole atom states and","type":"text"},{"text":" ","type":"text"},{"text":"their dependency graph at the point in time for debugging purposes.","type":"text"}],"title":"scopedObserve(_:)","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope\/scopedObserve(_:)","url":"\/documentation\/atoms\/atomscope\/scopedobserve(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopedObserve","kind":"identifier"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:5Atoms8SnapshotV","kind":"typeIdentifier","text":"Snapshot"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"text":"AtomScope","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms9AtomScopeV"},{"kind":"text","text":"<"},{"text":"Content","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AtomScope":{"abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomScope","kind":"identifier"}],"title":"AtomScope","url":"\/documentation\/atoms\/atomscope","navigatorTitle":[{"text":"AtomScope","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AtomRoot/observe(_:)":{"title":"observe(_:)","type":"topic","abstract":[{"text":"Observes the state changes with a snapshot that captures the whole atom states and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"their dependency graph at the point in time for debugging purposes."}],"role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/atomroot\/observe(_:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot\/observe(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"observe","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms8SnapshotV","text":"Snapshot"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms8AtomRootV","text":"AtomRoot"},{"kind":"text","text":"<"},{"text":"Content","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"}}}