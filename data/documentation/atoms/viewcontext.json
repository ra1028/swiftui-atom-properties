{"topicSections":[{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/init(file:fileID:line:)"]},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/wrappedValue"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"kind":"relationships"}],"abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/viewcontext"]}],"metadata":{"modules":[{"name":"Atoms"}],"title":"ViewContext","role":"symbol","navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"symbolKind":"struct","externalID":"s:5Atoms11ViewContextV","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewContext"}],"roleHeading":"Structure"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewContext"}]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"Through the provided context, the view can read, write, or perform other interactions with atoms."},{"type":"text","text":" "},{"text":"If the view watches an atom through the context, the view invalidates its appearance and recompute","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the body when the atom value updates."}],"type":"paragraph"},{"name":"See Also","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","isActive":true,"type":"reference"}],"type":"paragraph"}],"type":"aside"},{"text":"Example","anchor":"Example","type":"heading","level":2},{"code":["struct CounterView: View {","    @ViewContext","    var context","","    var body: some View {","        VStack {","            Text(\"Count: \\(context.watch(CounterAtom()))\")  \/\/ Read value, and start watching.","            Button(\"Increment\") {","                context[CounterAtom()] += 1                 \/\/ Mutation which means simultaneous read-write access.","            }","            Button(\"Reset\") {","                context.reset(CounterAtom())                \/\/ Reset to default value.","            }","        }","    }","}"],"type":"codeListing","syntax":"swift"}]}],"seeAlsoSections":[{"generated":true,"title":"Property Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"],"anchor":"Property-Wrappers"}],"references":{"doc://Atoms/documentation/Atoms/ViewContext/wrappedValue":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/wrappedValue","kind":"symbol","url":"\/documentation\/atoms\/viewcontext\/wrappedvalue","role":"symbol","abstract":[{"type":"text","text":"The underlying view context to interact with atoms."}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AtomViewContext","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms15AtomViewContextV"}],"title":"wrappedValue"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP","title":"SwiftUICore.DynamicProperty","type":"unresolvable"},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WatchState"}],"role":"symbol","url":"\/documentation\/atoms\/watchstate","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","type":"topic","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"title":"WatchState"},"doc://Atoms/documentation/Atoms/ViewContext":{"type":"topic","url":"\/documentation\/atoms\/viewcontext","abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"kind":"symbol","role":"symbol","title":"ViewContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","navigatorTitle":[{"kind":"identifier","text":"ViewContext"}]},"doc://Atoms/documentation/Atoms/AtomViewContext":{"title":"AtomViewContext","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomViewContext"}],"navigatorTitle":[{"text":"AtomViewContext","kind":"identifier"}],"url":"\/documentation\/atoms\/atomviewcontext","type":"topic","abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext"},"doc://Atoms/documentation/Atoms/Watch":{"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"role":"symbol","url":"\/documentation\/atoms\/watch","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","type":"topic","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"title":"Watch"},"doc://Atoms/documentation/Atoms/ViewContext/init(file:fileID:line:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/init(file:fileID:line:)","role":"symbol","type":"topic","url":"\/documentation\/atoms\/viewcontext\/init(file:fileid:line:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"title":"init(file:fileID:line:)","kind":"symbol","abstract":[{"text":"Creates a view context.","type":"text"}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"url":"\/documentation\/atoms\/observableobjectatom","kind":"symbol","title":"ObservableObjectAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"title":"WatchStateObject","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/watchstateobject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","role":"symbol"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/stateatom","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","role":"symbol"}}}