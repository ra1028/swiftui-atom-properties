{"abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Property Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"],"anchor":"Property-Wrappers"}],"metadata":{"symbolKind":"struct","externalID":"s:5Atoms11ViewContextV","roleHeading":"Structure","modules":[{"name":"Atoms"}],"title":"ViewContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ViewContext","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ViewContext","kind":"identifier"}]},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"kind":"relationships","title":"Conforms To"}],"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/init(file:fileID:line:)"],"title":"Initializers","anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/wrappedValue"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"inlineContent":[{"text":"Through the provided context, the view can read, write, or perform other interactions with atoms.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If the view watches an atom through the context, the view invalidates its appearance and recompute"},{"type":"text","text":" "},{"type":"text","text":"the body when the atom value updates."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext"}]}],"style":"note","type":"aside","name":"See Also"},{"text":"Example","anchor":"Example","type":"heading","level":2},{"syntax":"swift","type":"codeListing","code":["struct CounterView: View {","    @ViewContext","    var context","","    var body: some View {","        VStack {","            Text(\"Count: \\(context.watch(CounterAtom()))\")  \/\/ Read value, and start watching.","            Button(\"Increment\") {","                context[CounterAtom()] += 1                 \/\/ Mutation which means simultaneous read-write access.","            }","            Button(\"Reset\") {","                context.reset(CounterAtom())                \/\/ Reset to default value.","            }","        }","    }","}"]}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/atoms\/viewcontext"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"},"references":{"doc://Atoms/documentation/Atoms/WatchState":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true},{"text":".","type":"text"}],"navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"url":"\/documentation\/atoms\/watchstate","title":"WatchState","kind":"symbol","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms":{"role":"collection","type":"topic","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"kind":"symbol","title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","kind":"symbol","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/Watch":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Watch","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/watch","kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","navigatorTitle":[{"kind":"identifier","text":"Watch"}],"title":"Watch","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}]},"doc://Atoms/documentation/Atoms/AtomViewContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","title":"AtomViewContext","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomViewContext"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/atomviewcontext","navigatorTitle":[{"text":"AtomViewContext","kind":"identifier"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}]},"doc://Atoms/documentation/Atoms/StateAtom":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateAtom"}],"type":"topic","url":"\/documentation\/atoms\/stateatom","kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"title":"StateAtom"},"doc://Atoms/documentation/Atoms/ViewContext/wrappedValue":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Atoms15AtomViewContextV","text":"AtomViewContext","kind":"typeIdentifier"}],"url":"\/documentation\/atoms\/viewcontext\/wrappedvalue","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/wrappedValue","kind":"symbol","title":"wrappedValue","type":"topic","abstract":[{"type":"text","text":"The underlying view context to interact with atoms."}],"role":"symbol"},"doc://Atoms/documentation/Atoms/ViewContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","title":"ViewContext","role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/viewcontext","abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"type":"text","text":"interact with atoms from views."}],"type":"topic","navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}]},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"type":"unresolvable","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP","title":"SwiftUICore.DynamicProperty"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"url":"\/documentation\/atoms\/watchstateobject","title":"WatchStateObject","kind":"symbol","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/ViewContext/init(file:fileID:line:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"url":"\/documentation\/atoms\/viewcontext\/init(file:fileid:line:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/init(file:fileID:line:)","kind":"symbol","title":"init(file:fileID:line:)","type":"topic","abstract":[{"type":"text","text":"Creates a view context."}],"role":"symbol"}}}