{"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","interfaceLanguage":"swift"},"sections":[],"metadata":{"modules":[{"name":"Atoms"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}],"symbolKind":"struct","navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"role":"symbol","roleHeading":"Structure","externalID":"s:5Atoms11ViewContextV","title":"ViewContext"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewContext"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Through the provided context, the view can read, write, or perform other interactions with atoms."},{"text":" ","type":"text"},{"text":"If the view watches an atom through the context, the view invalidates its appearance and recompute","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the body when the atom value updates."}]},{"content":[{"inlineContent":[{"text":"","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","isActive":true,"type":"reference"}],"type":"paragraph"}],"name":"See Also","type":"aside","style":"note"},{"level":2,"anchor":"Example","type":"heading","text":"Example"},{"type":"codeListing","code":["struct CounterView: View {","    @ViewContext","    var context","","    var body: some View {","        VStack {","            Text(\"Count: \\(context.watch(CounterAtom()))\")  \/\/ Read value, and start watching.","            Button(\"Increment\") {","                context[CounterAtom()] += 1                 \/\/ Mutation which means simultaneous read-write access.","            }","            Button(\"Reset\") {","                context.reset(CounterAtom())                \/\/ Reset to default value.","            }","        }","    }","}"],"syntax":"swift"}],"kind":"content"}],"abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"text":"interact with atoms from views.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/init(file:fileID:line:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/wrappedValue"]}],"variants":[{"paths":["\/documentation\/atoms\/viewcontext"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"generated":true,"title":"Property Wrappers","anchor":"Property-Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"]}],"references":{"doc://Atoms/documentation/Atoms/ViewContext/init(file:fileID:line:)":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/init(file:fileID:line:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a view context."}],"title":"init(file:fileID:line:)","type":"topic","role":"symbol","url":"\/documentation\/atoms\/viewcontext\/init(file:fileid:line:)"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"type":"unresolvable","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP","title":"SwiftUICore.DynamicProperty"},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"role":"symbol","url":"\/documentation\/atoms\/stateatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","kind":"symbol","type":"topic","title":"StateAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ViewContext/wrappedValue":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomViewContext","preciseIdentifier":"s:5Atoms15AtomViewContextV"}],"abstract":[{"type":"text","text":"The underlying view context to interact with atoms."}],"title":"wrappedValue","type":"topic","role":"symbol","url":"\/documentation\/atoms\/viewcontext\/wrappedvalue"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"url":"\/documentation\/atoms\/watchstateobject","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"title":"WatchStateObject","role":"symbol"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"url":"\/documentation\/atoms\/observableobjectatom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"title":"ObservableObjectAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObjectAtom"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}]},"doc://Atoms/documentation/Atoms/ViewContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewContext"}],"navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"type":"topic","url":"\/documentation\/atoms\/viewcontext","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","title":"ViewContext","kind":"symbol"},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","url":"\/documentation\/atoms\/watchstate","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchState","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"title":"WatchState","role":"symbol"},"doc://Atoms/documentation/Atoms/Watch":{"navigatorTitle":[{"kind":"identifier","text":"Watch"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Watch"}],"abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"title":"Watch","type":"topic","role":"symbol","url":"\/documentation\/atoms\/watch"},"doc://Atoms/documentation/Atoms/AtomViewContext":{"url":"\/documentation\/atoms\/atomviewcontext","navigatorTitle":[{"text":"AtomViewContext","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomViewContext"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"title":"AtomViewContext","role":"symbol"}}}