{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"text":"Through the provided context, the view can read, write, or perform other interactions with atoms.","type":"text"},{"text":" ","type":"text"},{"text":"If the view watches an atom through the context, the view invalidates its appearance and recompute","type":"text"},{"text":" ","type":"text"},{"text":"the body when the atom value updates.","type":"text"}],"type":"paragraph"},{"name":"See Also","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","type":"reference","isActive":true}]}],"style":"note"},{"type":"heading","level":2,"text":"Example","anchor":"Example"},{"type":"codeListing","syntax":"swift","code":["struct CounterView: View {","    @ViewContext","    var context","","    var body: some View {","        VStack {","            Text(\"Count: \\(context.watch(CounterAtom()))\")  \/\/ Read value, and start watching.","            Button(\"Increment\") {","                context[CounterAtom()] += 1                 \/\/ Mutation which means simultaneous read-write access.","            }","            Button(\"Reset\") {","                context.reset(CounterAtom())                \/\/ Reset to default value.","            }","        }","    }","}"]}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Property Wrappers","anchor":"Property-Wrappers","generated":true,"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/viewcontext"]}],"abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"text":" ","type":"text"},{"text":"interact with atoms from views.","type":"text"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"title":"ViewContext","externalID":"s:5Atoms11ViewContextV","symbolKind":"struct","role":"symbol","roleHeading":"Structure","modules":[{"name":"Atoms"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ViewContext","kind":"identifier"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/init(file:fileID:line:)"],"anchor":"Initializers","title":"Initializers","generated":true},{"generated":true,"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/wrappedValue"]}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"type":"conformsTo"}],"references":{"doc://Atoms/documentation/Atoms/Watch":{"navigatorTitle":[{"kind":"identifier","text":"Watch"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","kind":"symbol","abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"role":"symbol","url":"\/documentation\/atoms\/watch","type":"topic","title":"Watch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Watch"}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"abstract":[{"text":"An atom type that instantiates an observable object.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableObjectAtom"}]},"doc://Atoms/documentation/Atoms/ViewContext/init(file:fileID:line:)":{"abstract":[{"type":"text","text":"Creates a view context."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/viewcontext\/init(file:fileid:line:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/init(file:fileID:line:)","title":"init(file:fileID:line:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"title":"StateAtom","url":"\/documentation\/atoms\/stateatom","type":"topic","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms/ViewContext":{"navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"type":"topic","url":"\/documentation\/atoms\/viewcontext","abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewContext"}],"role":"symbol","title":"ViewContext","kind":"symbol"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"url":"\/documentation\/atoms\/watchstateobject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","kind":"symbol","title":"WatchStateObject"},"doc://Atoms/documentation/Atoms":{"role":"collection","url":"\/documentation\/atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/WatchState":{"role":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference"},{"text":".","type":"text"}],"title":"WatchState","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"WatchState","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/watchstate"},"doc://Atoms/documentation/Atoms/AtomViewContext":{"abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"title":"AtomViewContext","url":"\/documentation\/atoms\/atomviewcontext","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomViewContext","kind":"identifier"}],"navigatorTitle":[{"text":"AtomViewContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ViewContext/wrappedValue":{"abstract":[{"type":"text","text":"The underlying view context to interact with atoms."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/wrappedValue","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AtomViewContext","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms15AtomViewContextV"}],"title":"wrappedValue","url":"\/documentation\/atoms\/viewcontext\/wrappedvalue"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"title":"SwiftUICore.DynamicProperty","type":"unresolvable","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"}}}