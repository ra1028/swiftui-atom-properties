{"kind":"symbol","metadata":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewContext","kind":"identifier"}],"roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"modules":[{"name":"Atoms"}],"externalID":"s:5Atoms11ViewContextV","symbolKind":"struct","title":"ViewContext"},"topicSections":[{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/init(file:fileID:line:)"]},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/wrappedValue"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"}],"seeAlsoSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject"],"title":"Property Wrappers","anchor":"Property-Wrappers","generated":true}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"text":"interact with atoms from views.","type":"text"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/atoms\/viewcontext"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewContext","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"text":"Through the provided context, the view can read, write, or perform other interactions with atoms.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If the view watches an atom through the context, the view invalidates its appearance and recompute"},{"type":"text","text":" "},{"text":"the body when the atom value updates.","type":"text"}],"type":"paragraph"},{"type":"aside","name":"See Also","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","isActive":true}],"type":"paragraph"}]},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"syntax":"swift","type":"codeListing","code":["struct CounterView: View {","    @ViewContext","    var context","","    var body: some View {","        VStack {","            Text(\"Count: \\(context.watch(CounterAtom()))\")  \/\/ Read value, and start watching.","            Button(\"Increment\") {","                context[CounterAtom()] += 1                 \/\/ Mutation which means simultaneous read-write access.","            }","            Button(\"Reset\") {","                context.reset(CounterAtom())                \/\/ Reset to default value.","            }","        }","    }","}"]}]}],"references":{"doc://Atoms/documentation/Atoms/AtomViewContext":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomViewContext","kind":"identifier"}],"navigatorTitle":[{"text":"AtomViewContext","kind":"identifier"}],"abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","title":"AtomViewContext","url":"\/documentation\/atoms\/atomviewcontext"},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","url":"\/documentation\/atoms\/stateatom","title":"StateAtom"},"doc://Atoms/documentation/Atoms/WatchState":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","role":"symbol","url":"\/documentation\/atoms\/watchstate","navigatorTitle":[{"kind":"identifier","text":"WatchState"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}],"kind":"symbol","type":"topic","title":"WatchState","abstract":[{"text":"A property wrapper type that can watch and read-write access to the given atom conforms","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference"},{"type":"text","text":"."}]},"doc://Atoms/documentation/Atoms/ViewContext/init(file:fileID:line:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/init(file:fileID:line:)","title":"init(file:fileID:line:)","type":"topic","abstract":[{"type":"text","text":"Creates a view context."}],"role":"symbol","url":"\/documentation\/atoms\/viewcontext\/init(file:fileid:line:)"},"doc://Atoms/documentation/Atoms/ViewContext/wrappedValue":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"text":"AtomViewContext","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms15AtomViewContextV"}],"kind":"symbol","abstract":[{"text":"The underlying view context to interact with atoms.","type":"text"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext\/wrappedValue","title":"wrappedValue","role":"symbol","url":"\/documentation\/atoms\/viewcontext\/wrappedvalue"},"doc://Atoms/7SwiftUI15DynamicPropertyP":{"title":"SwiftUICore.DynamicProperty","type":"unresolvable","identifier":"doc:\/\/Atoms\/7SwiftUI15DynamicPropertyP"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"url":"\/documentation\/atoms\/watchstateobject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","title":"WatchStateObject","type":"topic","abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom"},"doc://Atoms/documentation/Atoms/ViewContext":{"abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"title":"ViewContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewContext"}],"url":"\/documentation\/atoms\/viewcontext"},"doc://Atoms/documentation/Atoms/Watch":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Watch","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Watch"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","type":"topic","title":"Watch","url":"\/documentation\/atoms\/watch","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}]},"doc://Atoms/documentation/Atoms":{"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","url":"\/documentation\/atoms","role":"collection","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol"}}}