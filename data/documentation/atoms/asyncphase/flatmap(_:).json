{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms\/asyncphase\/flatmap(_:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/flatMap(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"]]},"kind":"symbol","abstract":[{"type":"text","text":"Returns a new phase, mapping any success value using the given transformation"},{"type":"text","text":" "},{"type":"text","text":"and unwrapping the produced result."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"text":"NewSuccess","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"transform"},{"text":": (","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncPhase","preciseIdentifier":"s:5Atoms10AsyncPhaseO","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"NewSuccess","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:5Atoms10AsyncPhaseO","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"typeIdentifier","text":"AsyncPhase"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"inlineContent":[{"type":"text","text":"A closure that takes the success value of the instance."}],"type":"paragraph"}]}]},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"An ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" instance, either from the closure or the previous","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/failure(_:)","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"externalID":"s:5Atoms10AsyncPhaseO7flatMapyACyqd__q_GAExXElF","title":"flatMap(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncPhase","preciseIdentifier":"s:5Atoms10AsyncPhaseO"},{"kind":"text","text":"<"},{"text":"NewSuccess","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:5Atoms10AsyncPhaseO","text":"AsyncPhase","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"NewSuccess"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","role":"symbol","modules":[{"name":"Atoms"}]},"references":{"doc://Atoms/documentation/Atoms/AsyncPhase/flatMap(_:)":{"abstract":[{"type":"text","text":"Returns a new phase, mapping any success value using the given transformation"},{"text":" ","type":"text"},{"text":"and unwrapping the produced result.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/flatMap(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"text":"NewSuccess","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:5Atoms10AsyncPhaseO","text":"AsyncPhase","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"NewSuccess"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:5Atoms10AsyncPhaseO","text":"AsyncPhase","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"text":">","kind":"text"}],"url":"\/documentation\/atoms\/asyncphase\/flatmap(_:)","title":"flatMap(_:)","type":"topic"},"doc://Atoms/documentation/Atoms":{"role":"collection","type":"topic","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"kind":"symbol","title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/AsyncPhase/failure(_:)":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"failure","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Failure"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/failure(_:)","title":"AsyncPhase.failure(_:)","url":"\/documentation\/atoms\/asyncphase\/failure(_:)","abstract":[{"type":"text","text":"A failure, storing a "},{"type":"codeVoice","code":"Failure"},{"type":"text","text":" value."}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"topic","title":"AsyncPhase","role":"symbol","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncPhase","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}]}}}