{"sections":[],"metadata":{"title":"flatMap(_:)","roleHeading":"Instance Method","externalID":"s:5Atoms10AsyncPhaseO7flatMapyACyqd__q_GAExXElF","modules":[{"name":"Atoms"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncPhase","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms10AsyncPhaseO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewSuccess"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:5Atoms10AsyncPhaseO","kind":"typeIdentifier","text":"AsyncPhase"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"NewSuccess"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Failure"},{"text":">","kind":"text"}],"symbolKind":"method","role":"symbol"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"NewSuccess"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"transform"},{"text":": (","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms10AsyncPhaseO","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","text":"AsyncPhase"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"text":">) -> ","kind":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","text":"AsyncPhase","preciseIdentifier":"s:5Atoms10AsyncPhaseO","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Failure"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes the success value of the instance."}]}],"name":"transform"}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" instance, either from the closure or the previous","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/failure(_:)"},{"type":"text","text":"."}]}]}],"abstract":[{"text":"Returns a new phase, mapping any success value using the given transformation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and unwrapping the produced result."}],"variants":[{"paths":["\/documentation\/atoms\/asyncphase\/flatmap(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/flatMap(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"]]},"references":{"doc://Atoms/documentation/Atoms/AsyncPhase/flatMap(_:)":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/flatMap(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms10AsyncPhaseO","text":"AsyncPhase"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Failure","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:5Atoms10AsyncPhaseO","text":"AsyncPhase","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol","title":"flatMap(_:)","abstract":[{"text":"Returns a new phase, mapping any success value using the given transformation","type":"text"},{"type":"text","text":" "},{"text":"and unwrapping the produced result.","type":"text"}],"url":"\/documentation\/atoms\/asyncphase\/flatmap(_:)"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"topic","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"title":"AsyncPhase"},"doc://Atoms/documentation/Atoms/AsyncPhase/failure(_:)":{"title":"AsyncPhase.failure(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase\/failure(_:)","kind":"symbol","url":"\/documentation\/atoms\/asyncphase\/failure(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"failure"},{"text":"(","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"text":"A failure, storing a ","type":"text"},{"type":"codeVoice","code":"Failure"},{"type":"text","text":" value."}]},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms"}}}