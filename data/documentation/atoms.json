{"topicSections":[{"title":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"anchor":"Atoms"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase"],"title":"Modifiers","anchor":"Modifiers"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"],"anchor":"Effects","title":"Effects"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/Resettable"],"anchor":"Attributes","title":"Attributes"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"anchor":"Property-Wrappers","title":"Property Wrappers"},{"title":"Views","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","doc:\/\/Atoms\/documentation\/Atoms\/AtomDerivedScope","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"],"anchor":"Views"},{"anchor":"Values","title":"Values","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"]},{"anchor":"Contexts","title":"Contexts","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"]},{"anchor":"Misc","title":"Misc","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"]}],"variants":[{"paths":["\/documentation\/atoms"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[[]]},"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"metadata":{"title":"Atoms","modules":[{"name":"Atoms"}],"externalID":"Atoms","symbolKind":"module","role":"collection","roleHeading":"Framework"},"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Additional-Resources","text":"Additional Resources"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","isActive":true}]}]}],"type":"unorderedList"},{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"inlineContent":[{"text":"Atoms offer a simple but practical capability to tackle the complexity of modern apps. It effectively integrates the solution for both state management and dependency injection while allowing us to rapidly build a robust and testable application.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Building state by compositing atoms automatically optimizes rendering based on its dependency graph. This solves the problem of performance degradation caused by extra re-render which occurs before you realize."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Atoms/documentation/Atoms/AtomEffect":{"abstract":[{"text":"Declares side effects that are synchronized with the atomâ€™s lifecycle.","type":"text"}],"url":"\/documentation\/atoms\/atomeffect","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AtomEffect","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomEffect"}],"title":"AtomEffect","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","type":"topic"},"doc://Atoms/documentation/Atoms/AtomContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AtomContext","kind":"identifier"}],"title":"AtomContext","url":"\/documentation\/atoms\/atomcontext","type":"topic","abstract":[{"text":"A context structure to read, write, and otherwise interact with atoms.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AtomContext"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/Watch":{"kind":"symbol","title":"Watch","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"navigatorTitle":[{"text":"Watch","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","url":"\/documentation\/atoms\/watch"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"type":"topic","title":"AsyncSequenceAtom","kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/TaskAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskAtom"}],"title":"TaskAtom","url":"\/documentation\/atoms\/taskatom","type":"topic","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous function.","type":"text"}],"navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AsyncPhase","kind":"identifier"}],"abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"url":"\/documentation\/atoms\/asyncphase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","role":"symbol","title":"AsyncPhase"},"doc://Atoms/documentation/Atoms/AtomDerivedScope":{"type":"topic","title":"AtomDerivedScope","kind":"symbol","url":"\/documentation\/atoms\/atomderivedscope","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomDerivedScope","abstract":[{"type":"text","text":"A view that derives the parent context."}],"navigatorTitle":[{"kind":"identifier","text":"AtomDerivedScope"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomDerivedScope","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"title":"AsyncPhaseAtom","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhaseAtom"}],"kind":"symbol","abstract":[{"text":"An atom that provides an ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value from the asynchronous throwable function."}],"url":"\/documentation\/atoms\/asyncphaseatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","navigatorTitle":[{"text":"AsyncPhaseAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/StateAtom":{"type":"topic","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/stateatom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","kind":"symbol","role":"symbol","title":"StateAtom"},"doc://Atoms/documentation/Atoms/AtomWatchableContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomWatchableContext"}],"title":"AtomWatchableContext","url":"\/documentation\/atoms\/atomwatchablecontext","type":"topic","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"navigatorTitle":[{"text":"AtomWatchableContext","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","title":"AtomTestContext","url":"\/documentation\/atoms\/atomtestcontext","abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms in testing.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomTestContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"type":"topic","title":"PublisherAtom","kind":"symbol","url":"\/documentation\/atoms\/publisheratom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"type":"codeVoice","code":"Publisher"},{"text":" as an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference"},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PublisherAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"title":"ObservableObjectAtom","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"url":"\/documentation\/atoms\/observableobjectatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/UpdateEffect":{"type":"topic","title":"UpdateEffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","abstract":[{"text":"An atom effect that performs an arbitrary action when the atom is updated.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UpdateEffect","kind":"identifier"}],"navigatorTitle":[{"text":"UpdateEffect","kind":"identifier"}],"url":"\/documentation\/atoms\/updateeffect","kind":"symbol"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"title":"WatchStateObject","kind":"symbol","role":"symbol","abstract":[{"text":"A property wrapper type that can watch the given atom conforms to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"url":"\/documentation\/atoms\/watchstateobject","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchStateObject","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomProducer":{"abstract":[{"type":"text","text":"Produces the value of an atom."}],"title":"AtomProducer","url":"\/documentation\/atoms\/atomproducer","kind":"symbol","type":"topic","navigatorTitle":[{"text":"AtomProducer","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomProducer","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer"},"doc://Atoms/documentation/Atoms/AtomViewContext":{"kind":"symbol","title":"AtomViewContext","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomViewContext","kind":"identifier"}],"navigatorTitle":[{"text":"AtomViewContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","url":"\/documentation\/atoms\/atomviewcontext"},"doc://Atoms/documentation/Atoms/Atom/changes(of:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"changes"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":": any ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":"> & ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChangesOfModifier","preciseIdentifier":"s:5Atoms17ChangesOfModifierV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>"}],"title":"changes(of:)","url":"\/documentation\/atoms\/atom\/changes(of:)","type":"topic","abstract":[],"role":"symbol"},"doc://Atoms/documentation/Atoms/Atom/animation(_:)":{"type":"topic","title":"animation(_:)","kind":"symbol","url":"\/documentation\/atoms\/atom\/animation(_:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","abstract":[{"text":"Animates the view watching the atom when the value updates.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"animation","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7SwiftUI9AnimationV","text":"Animation","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5Atoms17AnimationModifierV","text":"AnimationModifier","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"},{"kind":"text","text":">>"}]},"doc://Atoms/documentation/Atoms/ReleaseEffect":{"abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is no longer watched and released."}],"url":"\/documentation\/atoms\/releaseeffect","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReleaseEffect","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ReleaseEffect"}],"title":"ReleaseEffect","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","type":"topic"},"doc://Atoms/documentation/Atoms/DefaultScopeID":{"kind":"symbol","abstract":[{"text":"A default scope ID to find a matching scope inbetween scoped atoms and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope"},{"type":"text","text":"."}],"role":"symbol","url":"\/documentation\/atoms\/defaultscopeid","navigatorTitle":[{"kind":"identifier","text":"DefaultScopeID"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID","title":"DefaultScopeID","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DefaultScopeID","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomStore":{"abstract":[{"text":"An object that stores the state of atoms and its dependency graph.","type":"text"}],"title":"AtomStore","url":"\/documentation\/atoms\/atomstore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomStore"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AtomStore","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore"},"doc://Atoms/documentation/Atoms/AtomModifier":{"abstract":[{"text":"A modifier that you apply to an atom, producing a new value modified from the original value.","type":"text"}],"title":"AtomModifier","url":"\/documentation\/atoms\/atommodifier","kind":"symbol","type":"topic","navigatorTitle":[{"text":"AtomModifier","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomModifier","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier"},"doc://Atoms/documentation/Atoms/Atom":{"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Atom","kind":"identifier"}],"url":"\/documentation\/atoms\/atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","navigatorTitle":[{"text":"Atom","kind":"identifier"}],"role":"symbol","type":"topic","title":"Atom"},"doc://Atoms/documentation/Atoms/ChangesOfModifier":{"url":"\/documentation\/atoms\/changesofmodifier","navigatorTitle":[{"kind":"identifier","text":"ChangesOfModifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A modifier that derives a partial property with the specified key path from the original atom"},{"type":"text","text":" "},{"type":"text","text":"and prevent it from updating its downstream when its new value is equivalent to old value."}],"title":"ChangesOfModifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChangesOfModifier"}]},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"kind":"symbol","abstract":[{"text":"A context structure to read, set, and otherwise interact with atoms.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","url":"\/documentation\/atoms\/atomcurrentcontext","navigatorTitle":[{"text":"AtomCurrentContext","kind":"identifier"}],"title":"AtomCurrentContext","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomCurrentContext"}]},"doc://Atoms/documentation/Atoms/TaskAtom/phase":{"abstract":[{"text":"Converts the ","type":"text"},{"type":"codeVoice","code":"Task"},{"text":" that the original atom provides into ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" that"},{"text":" ","type":"text"},{"type":"text","text":"changes overtime."}],"title":"phase","url":"\/documentation\/atoms\/taskatom\/phase","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"phase"},{"kind":"text","text":": "},{"text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","text":"TaskPhaseModifier","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms8TaskAtomP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5NeverO","text":"Never","kind":"typeIdentifier"},{"kind":"text","text":">>"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase"},"doc://Atoms/documentation/Atoms/MergedEffect":{"abstract":[{"text":"An atom effect that merges multiple atom effects into one.","type":"text"}],"url":"\/documentation\/atoms\/mergedeffect","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MergedEffect","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MergedEffect"}],"title":"MergedEffect","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","type":"topic"},"doc://Atoms/documentation/Atoms/AsyncAtomModifier":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncAtomModifier"}],"abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new refreshable value modified from the original value."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncAtomModifier"}],"url":"\/documentation\/atoms\/asyncatommodifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","role":"symbol","title":"AsyncAtomModifier"},"doc://Atoms/documentation/Atoms/AtomRefreshProducer":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomRefreshProducer","kind":"identifier"}],"abstract":[{"text":"Produces the refreshed value of an atom.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomRefreshProducer"}],"url":"\/documentation\/atoms\/atomrefreshproducer","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer","role":"symbol","title":"AtomRefreshProducer"},"doc://Atoms/documentation/Atoms/ChangesModifier":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","navigatorTitle":[{"text":"ChangesModifier","kind":"identifier"}],"title":"ChangesModifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ChangesModifier","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A modifier that prevents the atom from updating its child views or atoms when"},{"type":"text","text":" "},{"type":"text","text":"its new value is the same as its old value."}],"url":"\/documentation\/atoms\/changesmodifier"},"doc://Atoms/documentation/Atoms/Suspense":{"abstract":[{"type":"text","text":"A view that lets the content wait for the given task to provide a resulting value"},{"type":"text","text":" "},{"type":"text","text":"or an error."}],"url":"\/documentation\/atoms\/suspense","type":"topic","role":"symbol","navigatorTitle":[{"text":"Suspense","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","title":"Suspense","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Suspense","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/WatchState":{"title":"WatchState","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}],"navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"url":"\/documentation\/atoms\/watchstate","role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"text":" ","type":"text"},{"text":"to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/Resettable":{"title":"Resettable","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Resettable"}],"role":"symbol","url":"\/documentation\/atoms\/resettable","kind":"symbol","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom reset behavior."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Resettable","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncAtom":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncAtom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncAtom"}],"url":"\/documentation\/atoms\/asyncatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","role":"symbol","title":"AsyncAtom"},"doc://Atoms/documentation/Atoms":{"abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"kind":"symbol","url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","type":"topic","title":"Atoms"},"doc://Atoms/documentation/Atoms/Scoped":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Scoped","kind":"identifier"}],"title":"Scoped","url":"\/documentation\/atoms\/scoped","type":"topic","abstract":[{"type":"text","text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor"},{"text":" ","type":"text"},{"type":"text","text":"of where it is used and prevents it from being shared out of scope."}],"navigatorTitle":[{"text":"Scoped","kind":"identifier"}],"role":"symbol"},"https://github.com/ra1028/swiftui-atom-properties":{"title":"GitHub Repo","type":"link","titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"url":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}],"url":"\/documentation\/atoms\/throwingtaskatom","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous, throwing function.","type":"text"}],"type":"topic","title":"ThrowingTaskAtom","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/Snapshot":{"url":"\/documentation\/atoms\/snapshot","navigatorTitle":[{"text":"Snapshot","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Snapshot","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","type":"topic","abstract":[{"type":"text","text":"A snapshot structure that captures specific set of values of atoms and their dependency graph."}],"kind":"symbol","title":"Snapshot"},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"title":"AtomTransactionContext","abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomTransactionContext"}],"navigatorTitle":[{"kind":"identifier","text":"AtomTransactionContext"}],"url":"\/documentation\/atoms\/atomtransactioncontext","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","type":"topic"},"doc://Atoms/documentation/Atoms/ViewContext":{"kind":"symbol","title":"ViewContext","type":"topic","role":"symbol","abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}],"navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","url":"\/documentation\/atoms\/viewcontext"},"doc://Atoms/documentation/Atoms/Refreshable":{"type":"topic","title":"Refreshable","url":"\/documentation\/atoms\/refreshable","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","abstract":[{"text":"An attribute protocol that allows an atom to have a custom refresh behavior.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Refreshable"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Refreshable","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AnimationModifier":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnimationModifier"}],"abstract":[{"type":"text","text":"A modifier that animates the view watching the atom when the value updates."}],"kind":"symbol","navigatorTitle":[{"text":"AnimationModifier","kind":"identifier"}],"url":"\/documentation\/atoms\/animationmodifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","role":"symbol","title":"AnimationModifier"},"doc://Atoms/documentation/Atoms/KeepAlive":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"KeepAlive","kind":"identifier"}],"url":"\/documentation\/atoms\/keepalive","abstract":[{"type":"text","text":"An attribute protocol to allow the value of an atom to continue being retained"},{"type":"text","text":" "},{"text":"even after they are no longer watched.","type":"text"}],"type":"topic","title":"KeepAlive","navigatorTitle":[{"kind":"identifier","text":"KeepAlive"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AtomScope":{"abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","title":"AtomScope","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomScope"}],"navigatorTitle":[{"text":"AtomScope","kind":"identifier"}],"url":"\/documentation\/atoms\/atomscope","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that applies a modifier to an atom.","type":"text"}],"kind":"symbol","url":"\/documentation\/atoms\/modifiedatom","title":"ModifiedAtom","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModifiedAtom"}],"type":"topic"},"doc://Atoms/documentation/Atoms/AtomRoot":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomRoot"}],"title":"AtomRoot","type":"topic","navigatorTitle":[{"text":"AtomRoot","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A view that stores the state of atoms."}],"url":"\/documentation\/atoms\/atomroot","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","role":"symbol"},"doc://Atoms/documentation/Atoms/Atom/changes":{"type":"topic","title":"changes","url":"\/documentation\/atoms\/atom\/changes","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Produced","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Prevents the atom from updating its downstream when its new value is equivalent to old value."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"changes","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ModifiedAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChangesModifier","preciseIdentifier":"s:5Atoms15ChangesModifierV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":">>","kind":"text"}]},"doc://Atoms/documentation/Atoms/TaskPhaseModifier":{"abstract":[{"type":"text","text":"An atom that provides a sequential value of the base atom as an enum"},{"type":"text","text":" "},{"type":"text","text":"representation "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" that changes overtime."}],"type":"topic","title":"TaskPhaseModifier","kind":"symbol","url":"\/documentation\/atoms\/taskphasemodifier","navigatorTitle":[{"kind":"identifier","text":"TaskPhaseModifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TaskPhaseModifier","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier"},"doc://Atoms/documentation/Atoms/InitializeEffect":{"type":"topic","title":"InitializeEffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","abstract":[{"text":"An atom effect that performs an arbitrary action when the atom is first used and initialized,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or once it is released and re-initialized again."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InitializeEffect"}],"navigatorTitle":[{"text":"InitializeEffect","kind":"identifier"}],"url":"\/documentation\/atoms\/initializeeffect","kind":"symbol"},"doc://Atoms/documentation/Atoms/ValueAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAtom","kind":"identifier"}],"title":"ValueAtom","url":"\/documentation\/atoms\/valueatom","type":"topic","abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/phase":{"abstract":[{"type":"text","text":"Converts the "},{"code":"Task","type":"codeVoice"},{"text":" that the original atom provides into ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" that"},{"type":"text","text":" "},{"type":"text","text":"changes overtime."}],"title":"phase","url":"\/documentation\/atoms\/throwingtaskatom\/phase","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"phase"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TaskPhaseModifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms16ThrowingTaskAtomP7SuccessQa"},{"text":", any ","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":">>","kind":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase"},"doc://Atoms/documentation/Atoms/EmptyEffect":{"abstract":[{"text":"An effect that doesnâ€™t produce any effects.","type":"text"}],"title":"EmptyEffect","url":"\/documentation\/atoms\/emptyeffect","kind":"symbol","type":"topic","navigatorTitle":[{"text":"EmptyEffect","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyEffect"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect"}}}