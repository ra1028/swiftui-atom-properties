{"sections":[],"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Atoms","anchor":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"]},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase"],"anchor":"Modifiers","title":"Modifiers"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"],"anchor":"Effects","title":"Effects"},{"title":"Attributes","anchor":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/Resettable"]},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"anchor":"Property-Wrappers","title":"Property Wrappers"},{"title":"Views","anchor":"Views","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"]},{"anchor":"Values","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"],"title":"Values"},{"title":"Contexts","anchor":"Contexts","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"]},{"title":"Misc","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"],"anchor":"Misc"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms"},"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Additional Resources","type":"heading","anchor":"Additional-Resources"},{"items":[{"content":[{"inlineContent":[{"identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","type":"reference","isActive":true}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Atoms offer a simple but practical capability to tackle the complexity of modern apps. It effectively integrates the solution for both state management and dependency injection while allowing us to rapidly build a robust and testable application."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Building state by compositing atoms automatically optimizes rendering based on its dependency graph. This solves the problem of performance degradation caused by extra re-render which occurs before you realize.","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/atoms"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"metadata":{"modules":[{"name":"Atoms"}],"role":"collection","title":"Atoms","roleHeading":"Framework","symbolKind":"module","externalID":"Atoms"},"references":{"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"text":" value.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","url":"\/documentation\/atoms\/asyncsequenceatom","title":"AsyncSequenceAtom"},"doc://Atoms/documentation/Atoms/ChangesOfModifier":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ChangesOfModifier","kind":"identifier"}],"navigatorTitle":[{"text":"ChangesOfModifier","kind":"identifier"}],"kind":"symbol","title":"ChangesOfModifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","type":"topic","abstract":[{"text":"A modifier that derives a partial property with the specified key path from the original atom","type":"text"},{"type":"text","text":" "},{"text":"and prevent it from updating its downstream when its new value is equivalent to old value.","type":"text"}],"role":"symbol","url":"\/documentation\/atoms\/changesofmodifier"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAtom","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"kind":"symbol","url":"\/documentation\/atoms\/asyncatom","navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"title":"AsyncAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}],"type":"topic","title":"PublisherAtom","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"url":"\/documentation\/atoms\/publisheratom","kind":"symbol","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"code":"Publisher","type":"codeVoice"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},"doc://Atoms/documentation/Atoms/Atom/changes(of:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"changes","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": any "},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"> & ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5Atoms17ChangesOfModifierV","text":"ChangesOfModifier","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>"}],"type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","title":"changes(of:)","url":"\/documentation\/atoms\/atom\/changes(of:)"},"doc://Atoms/documentation/Atoms/MergedEffect":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MergedEffect","kind":"identifier"}],"title":"MergedEffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","type":"topic","navigatorTitle":[{"text":"MergedEffect","kind":"identifier"}],"abstract":[{"text":"An atom effect that merges multiple atom effects into one.","type":"text"}],"url":"\/documentation\/atoms\/mergedeffect","kind":"symbol"},"doc://Atoms/documentation/Atoms/AnimationModifier":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","abstract":[{"text":"A modifier that animates the view watching the atom when the value updates.","type":"text"}],"role":"symbol","type":"topic","title":"AnimationModifier","url":"\/documentation\/atoms\/animationmodifier","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationModifier","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AnimationModifier"}]},"doc://Atoms/documentation/Atoms/ViewContext":{"abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"title":"ViewContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewContext"}],"url":"\/documentation\/atoms\/viewcontext"},"doc://Atoms/documentation/Atoms/Scoped":{"url":"\/documentation\/atoms\/scoped","abstract":[{"text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of where it is used and prevents it from being shared out of scope."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scoped","kind":"identifier"}],"title":"Scoped","role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Scoped"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped"},"doc://Atoms/documentation/Atoms/Watch":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Watch","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Watch"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","type":"topic","title":"Watch","url":"\/documentation\/atoms\/watch","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}]},"doc://Atoms/documentation/Atoms/WatchStateObject":{"url":"\/documentation\/atoms\/watchstateobject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","title":"WatchStateObject","type":"topic","abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/ChangesModifier":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","abstract":[{"text":"A modifier that prevents the atom from updating its child views or atoms when","type":"text"},{"type":"text","text":" "},{"text":"its new value is the same as its old value.","type":"text"}],"role":"symbol","type":"topic","title":"ChangesModifier","url":"\/documentation\/atoms\/changesmodifier","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChangesModifier"}],"navigatorTitle":[{"text":"ChangesModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/InitializeEffect":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","title":"InitializeEffect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InitializeEffect"}],"kind":"symbol","url":"\/documentation\/atoms\/initializeeffect","abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is first used and initialized,"},{"text":" ","type":"text"},{"text":"or once it is released and re-initialized again.","type":"text"}],"navigatorTitle":[{"text":"InitializeEffect","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/WatchState":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","role":"symbol","url":"\/documentation\/atoms\/watchstate","navigatorTitle":[{"kind":"identifier","text":"WatchState"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}],"kind":"symbol","type":"topic","title":"WatchState","abstract":[{"text":"A property wrapper type that can watch and read-write access to the given atom conforms","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference"},{"type":"text","text":"."}]},"doc://Atoms/documentation/Atoms/KeepAlive":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeepAlive"}],"title":"KeepAlive","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","type":"topic","navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"abstract":[{"text":"An attribute protocol to allow the value of an atom to continue being retained","type":"text"},{"type":"text","text":" "},{"type":"text","text":"even after they are no longer watched."}],"url":"\/documentation\/atoms\/keepalive","kind":"symbol"},"doc://Atoms/documentation/Atoms/EmptyEffect":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EmptyEffect","kind":"identifier"}],"navigatorTitle":[{"text":"EmptyEffect","kind":"identifier"}],"kind":"symbol","title":"EmptyEffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","type":"topic","abstract":[{"text":"An effect that doesn’t produce any effects.","type":"text"}],"role":"symbol","url":"\/documentation\/atoms\/emptyeffect"},"doc://Atoms/documentation/Atoms/Refreshable":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Refreshable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Refreshable"}],"abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","title":"Refreshable","url":"\/documentation\/atoms\/refreshable"},"doc://Atoms/documentation/Atoms/DefaultScopeID":{"url":"\/documentation\/atoms\/defaultscopeid","kind":"symbol","role":"symbol","abstract":[{"text":"A default scope ID to find a matching scope inbetween scoped atoms and ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DefaultScopeID","kind":"identifier"}],"title":"DefaultScopeID","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DefaultScopeID"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"},"doc://Atoms/documentation/Atoms/Suspense":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Suspense"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Suspense","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","title":"Suspense","abstract":[{"text":"A view that lets the content wait for the given task to provide a resulting value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or an error."}],"url":"\/documentation\/atoms\/suspense","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/phase":{"type":"topic","title":"phase","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase","url":"\/documentation\/atoms\/throwingtaskatom\/phase","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"phase","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier","text":"ModifiedAtom"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","text":"TaskPhaseModifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms16ThrowingTaskAtomP7SuccessQa","text":"Success"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":">>","kind":"text"}],"abstract":[{"text":"Converts the ","type":"text"},{"type":"codeVoice","code":"Task"},{"type":"text","text":" that the original atom provides into "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that"},{"text":" ","type":"text"},{"text":"changes overtime.","type":"text"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}],"type":"topic","title":"ThrowingTaskAtom","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/throwingtaskatom","kind":"symbol","abstract":[{"text":"An atom type that provides a throwing ","type":"text"},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","url":"\/documentation\/atoms\/stateatom","title":"StateAtom"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}]},"doc://Atoms/documentation/Atoms/TaskPhaseModifier":{"abstract":[{"type":"text","text":"An atom that provides a sequential value of the base atom as an enum"},{"type":"text","text":" "},{"type":"text","text":"representation "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"text":" that changes overtime.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskPhaseModifier","kind":"identifier"}],"title":"TaskPhaseModifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","role":"symbol","url":"\/documentation\/atoms\/taskphasemodifier","navigatorTitle":[{"kind":"identifier","text":"TaskPhaseModifier"}],"kind":"symbol"},"https://github.com/ra1028/swiftui-atom-properties":{"titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","type":"link","title":"GitHub Repo","url":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"type":"topic","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomTransactionContext","kind":"identifier"}],"title":"AtomTransactionContext","url":"\/documentation\/atoms\/atomtransactioncontext","navigatorTitle":[{"kind":"identifier","text":"AtomTransactionContext"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext"},"doc://Atoms/documentation/Atoms/Atom/animation(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"animation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5Atoms17AnimationModifierV","kind":"typeIdentifier","text":"AnimationModifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","text":"Produced"},{"text":">>","kind":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","title":"animation(_:)","url":"\/documentation\/atoms\/atom\/animation(_:)","kind":"symbol","abstract":[{"text":"Animates the view watching the atom when the value updates.","type":"text"}]},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"type":"topic","title":"ModifiedAtom","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that applies a modifier to an atom.","type":"text"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"url":"\/documentation\/atoms\/atomcurrentcontext","abstract":[{"type":"text","text":"A context structure to read, set, and otherwise interact with atoms."}],"navigatorTitle":[{"kind":"identifier","text":"AtomCurrentContext"}],"title":"AtomCurrentContext","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomCurrentContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomProducer":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","abstract":[{"text":"Produces the value of an atom.","type":"text"}],"role":"symbol","type":"topic","title":"AtomProducer","url":"\/documentation\/atoms\/atomproducer","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomProducer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomProducer"}]},"doc://Atoms/documentation/Atoms/AtomEffect":{"abstract":[{"text":"Declares side effects that are synchronized with the atom’s lifecycle.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomEffect","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"AtomEffect","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","url":"\/documentation\/atoms\/atomeffect","title":"AtomEffect"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom"},"doc://Atoms/documentation/Atoms/AtomScope":{"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomScope"}],"title":"AtomScope","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomScope"}],"kind":"symbol","abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","url":"\/documentation\/atoms\/atomscope"},"doc://Atoms/documentation/Atoms/AtomContext":{"abstract":[{"text":"A context structure to read, write, and otherwise interact with atoms.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AtomContext","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"AtomContext","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","url":"\/documentation\/atoms\/atomcontext","title":"AtomContext"},"doc://Atoms/documentation/Atoms/ReleaseEffect":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReleaseEffect","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"An atom effect that performs an arbitrary action when the atom is no longer watched and released.","type":"text"}],"title":"ReleaseEffect","navigatorTitle":[{"kind":"identifier","text":"ReleaseEffect"}],"type":"topic","url":"\/documentation\/atoms\/releaseeffect"},"doc://Atoms/documentation/Atoms/TaskAtom/phase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","kind":"symbol","url":"\/documentation\/atoms\/taskatom\/phase","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"phase","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","kind":"typeIdentifier","text":"TaskPhaseModifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms8TaskAtomP7SuccessQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">>"}],"title":"phase","abstract":[{"text":"Converts the ","type":"text"},{"code":"Task","type":"codeVoice"},{"type":"text","text":" that the original atom provides into "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that"},{"type":"text","text":" "},{"text":"changes overtime.","type":"text"}]},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","type":"topic","title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomModifier":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomModifier","kind":"identifier"}],"navigatorTitle":[{"text":"AtomModifier","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","title":"AtomModifier","type":"topic","abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new value modified from the original value."}],"role":"symbol","url":"\/documentation\/atoms\/atommodifier"},"doc://Atoms/documentation/Atoms/AsyncAtomModifier":{"abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new refreshable value modified from the original value."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAtomModifier","kind":"identifier"}],"title":"AsyncAtomModifier","type":"topic","url":"\/documentation\/atoms\/asyncatommodifier","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","navigatorTitle":[{"kind":"identifier","text":"AsyncAtomModifier"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"abstract":[{"type":"text","text":"An atom that provides an "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" value from the asynchronous throwable function."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncPhaseAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","url":"\/documentation\/atoms\/asyncphaseatom","title":"AsyncPhaseAtom"},"doc://Atoms/documentation/Atoms/AtomRefreshProducer":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomRefreshProducer","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Produces the refreshed value of an atom."}],"kind":"symbol","url":"\/documentation\/atoms\/atomrefreshproducer","navigatorTitle":[{"text":"AtomRefreshProducer","kind":"identifier"}],"title":"AtomRefreshProducer","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"},"doc://Atoms/documentation/Atoms/ValueAtom":{"abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAtom"}],"role":"symbol","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","url":"\/documentation\/atoms\/valueatom","title":"ValueAtom"},"doc://Atoms/documentation/Atoms/Resettable":{"kind":"symbol","url":"\/documentation\/atoms\/resettable","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","role":"symbol","title":"Resettable","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Resettable","kind":"identifier"}],"abstract":[{"text":"An attribute protocol that allows an atom to have a custom reset behavior.","type":"text"}],"navigatorTitle":[{"text":"Resettable","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomWatchableContext":{"url":"\/documentation\/atoms\/atomwatchablecontext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomWatchableContext","kind":"identifier"}],"abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","kind":"symbol","title":"AtomWatchableContext","navigatorTitle":[{"kind":"identifier","text":"AtomWatchableContext"}],"type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/UpdateEffect":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UpdateEffect"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","role":"symbol","type":"topic","url":"\/documentation\/atoms\/updateeffect","kind":"symbol","abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is updated."}],"title":"UpdateEffect","navigatorTitle":[{"kind":"identifier","text":"UpdateEffect"}]},"doc://Atoms/documentation/Atoms":{"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","url":"\/documentation\/atoms","role":"collection","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomRoot":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","abstract":[{"type":"text","text":"A view that stores the state of atoms."}],"url":"\/documentation\/atoms\/atomroot","kind":"symbol","navigatorTitle":[{"text":"AtomRoot","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomRoot","kind":"identifier"}],"role":"symbol","title":"AtomRoot"},"doc://Atoms/documentation/Atoms/Snapshot":{"navigatorTitle":[{"text":"Snapshot","kind":"identifier"}],"type":"topic","title":"Snapshot","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Snapshot","kind":"identifier"}],"url":"\/documentation\/atoms\/snapshot","abstract":[{"type":"text","text":"A snapshot structure that captures specific set of values of atoms and their dependency graph."}],"role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomTestContext"}],"type":"topic","title":"AtomTestContext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"url":"\/documentation\/atoms\/atomtestcontext"},"doc://Atoms/documentation/Atoms/AtomViewContext":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomViewContext","kind":"identifier"}],"navigatorTitle":[{"text":"AtomViewContext","kind":"identifier"}],"abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","title":"AtomViewContext","url":"\/documentation\/atoms\/atomviewcontext"},"doc://Atoms/documentation/Atoms/AtomStore":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomStore","kind":"identifier"}],"navigatorTitle":[{"text":"AtomStore","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","title":"AtomStore","type":"topic","abstract":[{"type":"text","text":"An object that stores the state of atoms and its dependency graph."}],"role":"symbol","url":"\/documentation\/atoms\/atomstore"},"doc://Atoms/documentation/Atoms/Atom/changes":{"abstract":[{"type":"text","text":"Prevents the atom from updating its downstream when its new value is equivalent to old value."}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"changes","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ModifiedAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5Atoms15ChangesModifierV","text":"ChangesModifier","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"},{"kind":"text","text":">>"}],"role":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Produced"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","title":"changes","url":"\/documentation\/atoms\/atom\/changes"},"doc://Atoms/documentation/Atoms/TaskAtom":{"abstract":[{"text":"An atom type that provides a nonthrowing ","type":"text"},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","url":"\/documentation\/atoms\/taskatom","title":"TaskAtom"}}}