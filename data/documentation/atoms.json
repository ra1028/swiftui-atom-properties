{"primaryContentSections":[{"kind":"content","content":[{"text":"Additional Resources","anchor":"Additional-Resources","type":"heading","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","type":"reference","isActive":true}]}]}],"type":"unorderedList"},{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"inlineContent":[{"text":"Atoms offer a simple but practical capability to tackle the complexity of modern apps. It effectively integrates the solution for both state management and dependency injection while allowing us to rapidly build a robust and testable application.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Building state by compositing atoms automatically optimizes rendering based on its dependency graph. This solves the problem of performance degradation caused by extra re-render which occurs before you realize."}]}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"title":"Atoms","anchor":"Atoms"},{"title":"Modifiers","anchor":"Modifiers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase"]},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","doc:\/\/Atoms\/documentation\/Atoms\/AtomEffectBuilder","doc:\/\/Atoms\/documentation\/Atoms\/InitializingEffect","doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect"],"anchor":"Effects","title":"Effects"},{"title":"Attributes","anchor":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive"]},{"anchor":"Property-Wrappers","title":"Property Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"]},{"title":"Views","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","doc:\/\/Atoms\/documentation\/Atoms\/AtomDerivedScope","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"],"anchor":"Views"},{"title":"Values","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"],"anchor":"Values"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"],"title":"Contexts","anchor":"Contexts"},{"title":"Misc","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"],"anchor":"Misc"},{"anchor":"Deprecated","title":"Deprecated","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/Resettable","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms"]}],"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"hierarchy":{"paths":[[]]},"metadata":{"symbolKind":"module","roleHeading":"Framework","modules":[{"name":"Atoms"}],"role":"collection","title":"Atoms","externalID":"Atoms"},"references":{"doc://Atoms/documentation/Atoms/AtomStore":{"url":"\/documentation\/atoms\/atomstore","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","abstract":[{"type":"text","text":"An object that stores the state of atoms and its dependency graph."}],"navigatorTitle":[{"text":"AtomStore","kind":"identifier"}],"kind":"symbol","title":"AtomStore","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomStore"}]},"doc://Atoms/documentation/Atoms/AtomRefreshProducer":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomRefreshProducer"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer","url":"\/documentation\/atoms\/atomrefreshproducer","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomRefreshProducer"}],"title":"AtomRefreshProducer","abstract":[{"type":"text","text":"Produces the refreshed value of an atom."}]},"doc://Atoms/documentation/Atoms/TaskPhaseModifier":{"kind":"symbol","type":"topic","abstract":[{"text":"An atom that provides a sequential value of the base atom as an enum","type":"text"},{"text":" ","type":"text"},{"text":"representation ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"text":" that changes overtime.","type":"text"}],"navigatorTitle":[{"text":"TaskPhaseModifier","kind":"identifier"}],"url":"\/documentation\/atoms\/taskphasemodifier","title":"TaskPhaseModifier","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TaskPhaseModifier","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","role":"symbol"},"doc://Atoms/documentation/Atoms/AnimationModifier":{"title":"AnimationModifier","navigatorTitle":[{"kind":"identifier","text":"AnimationModifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationModifier","kind":"identifier"}],"url":"\/documentation\/atoms\/animationmodifier","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","type":"topic","abstract":[{"type":"text","text":"A modifier that animates the view watching the atom when the value updates."}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/EmptyEffect":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyEffect"}],"navigatorTitle":[{"kind":"identifier","text":"EmptyEffect"}],"kind":"symbol","role":"symbol","abstract":[{"text":"An effect that doesn’t produce any effects.","type":"text"}],"title":"EmptyEffect","url":"\/documentation\/atoms\/emptyeffect","deprecated":true},"doc://Atoms/documentation/Atoms/ChangesOfModifier":{"abstract":[{"text":"A modifier that derives a partial property with the specified key path from the original atom","type":"text"},{"type":"text","text":" "},{"text":"and prevent it from updating its downstream when its new value is equivalent to old value.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","url":"\/documentation\/atoms\/changesofmodifier","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChangesOfModifier"}],"kind":"symbol","navigatorTitle":[{"text":"ChangesOfModifier","kind":"identifier"}],"title":"ChangesOfModifier"},"doc://Atoms/documentation/Atoms/AtomEffect":{"role":"symbol","kind":"symbol","abstract":[{"text":"Declares side effects that are synchronized with the atom’s lifecycle.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AtomEffect","kind":"identifier"}],"url":"\/documentation\/atoms\/atomeffect","navigatorTitle":[{"text":"AtomEffect","kind":"identifier"}],"title":"AtomEffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect"},"doc://Atoms/documentation/Atoms/ViewContext":{"abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ViewContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"type":"topic","url":"\/documentation\/atoms\/viewcontext","title":"ViewContext"},"doc://Atoms/documentation/Atoms":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"role":"collection","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/Refreshable":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"deprecated":true,"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Refreshable"}],"role":"symbol","title":"Refreshable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Refreshable","kind":"identifier"}],"url":"\/documentation\/atoms\/refreshable"},"doc://Atoms/documentation/Atoms/AsyncAtomModifier":{"url":"\/documentation\/atoms\/asyncatommodifier","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new refreshable value modified from the original value."}],"navigatorTitle":[{"kind":"identifier","text":"AsyncAtomModifier"}],"kind":"symbol","title":"AsyncAtomModifier","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAtomModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/StateAtom":{"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom","role":"symbol","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","title":"StateAtom","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncAtom":{"url":"\/documentation\/atoms\/asyncatom","kind":"symbol","navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","type":"topic","role":"symbol","title":"AsyncAtom","abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Suspense":{"abstract":[{"text":"A view that lets the content wait for the given task to provide a resulting value","type":"text"},{"text":" ","type":"text"},{"text":"or an error.","type":"text"}],"kind":"symbol","url":"\/documentation\/atoms\/suspense","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Suspense"}],"navigatorTitle":[{"kind":"identifier","text":"Suspense"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","title":"Suspense","type":"topic"},"doc://Atoms/documentation/Atoms/WatchState":{"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true},{"type":"text","text":"."}],"type":"topic","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/watchstate","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","title":"WatchState","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchState","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase","kind":"symbol"},"doc://Atoms/documentation/Atoms/Scoped":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor"},{"text":" ","type":"text"},{"text":"of where it is used and prevents it from being shared out of scope.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Scoped","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","navigatorTitle":[{"text":"Scoped","kind":"identifier"}],"url":"\/documentation\/atoms\/scoped","kind":"symbol","title":"Scoped"},"doc://Atoms/documentation/Atoms/TaskAtom/phase":{"title":"phase","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"phase","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"TaskPhaseModifier","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success","preciseIdentifier":"s:5Atoms8TaskAtomP7SuccessQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO","text":"Never"},{"kind":"text","text":">>"}],"url":"\/documentation\/atoms\/taskatom\/phase","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","type":"topic","abstract":[{"text":"Converts the ","type":"text"},{"type":"codeVoice","code":"Task"},{"type":"text","text":" that the original atom provides into "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that"},{"text":" ","type":"text"},{"type":"text","text":"changes overtime."}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" value.","type":"text"}],"kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","type":"topic","role":"symbol","title":"AsyncSequenceAtom","navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/InitializeEffect":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializeEffect"}],"url":"\/documentation\/atoms\/initializeeffect","abstract":[{"text":"An atom effect that performs an arbitrary action after the atom is first used and initialized,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or once it is released and re-initialized."}],"title":"InitializeEffect","navigatorTitle":[{"kind":"identifier","text":"InitializeEffect"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","kind":"symbol"},"doc://Atoms/documentation/Atoms/Resettable":{"deprecated":true,"type":"topic","role":"symbol","kind":"symbol","title":"Resettable","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom reset behavior."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","navigatorTitle":[{"text":"Resettable","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Resettable","kind":"identifier"}],"url":"\/documentation\/atoms\/resettable"},"doc://Atoms/documentation/Atoms/ValueAtom":{"type":"topic","title":"ValueAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","url":"\/documentation\/atoms\/valueatom","role":"symbol","abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}]},"doc://Atoms/documentation/Atoms/AtomDerivedScope":{"type":"topic","kind":"symbol","url":"\/documentation\/atoms\/atomderivedscope","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomDerivedScope"}],"abstract":[{"type":"text","text":"A view that derives the parent context."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomDerivedScope","navigatorTitle":[{"kind":"identifier","text":"AtomDerivedScope"}],"role":"symbol","title":"AtomDerivedScope"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/phase":{"url":"\/documentation\/atoms\/throwingtaskatom\/phase","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase","abstract":[{"type":"text","text":"Converts the "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" that the original atom provides into "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that"},{"type":"text","text":" "},{"text":"changes overtime.","type":"text"}],"kind":"symbol","title":"phase","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"phase","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","kind":"typeIdentifier","text":"TaskPhaseModifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms16ThrowingTaskAtomP7SuccessQa","text":"Success"},{"text":", any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">>","kind":"text"}]},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"url":"\/documentation\/atoms\/atomcurrentcontext","title":"AtomCurrentContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","role":"symbol","navigatorTitle":[{"text":"AtomCurrentContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomCurrentContext","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A context structure to read, set, and otherwise interact with atoms."}],"type":"topic"},"doc://Atoms/documentation/Atoms/AtomRoot":{"abstract":[{"type":"text","text":"A view that stores the state of atoms."}],"kind":"symbol","url":"\/documentation\/atoms\/atomroot","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomRoot","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomRoot"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","title":"AtomRoot","type":"topic"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"type":"topic","navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/observableobjectatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","title":"ObservableObjectAtom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/InitializingEffect":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"InitializingEffect","kind":"identifier"}],"url":"\/documentation\/atoms\/initializingeffect","abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action before the atom is first used and initialized,"},{"text":" ","type":"text"},{"type":"text","text":"or once it is released and re-initialized."}],"title":"InitializingEffect","navigatorTitle":[{"kind":"identifier","text":"InitializingEffect"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/InitializingEffect","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomScope":{"abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"kind":"symbol","url":"\/documentation\/atoms\/atomscope","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomScope"}],"navigatorTitle":[{"text":"AtomScope","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","title":"AtomScope","type":"topic"},"doc://Atoms/documentation/Atoms/MergedEffect":{"deprecated":true,"type":"topic","role":"symbol","kind":"symbol","title":"MergedEffect","abstract":[{"text":"An atom effect that merges multiple atom effects into one.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","navigatorTitle":[{"text":"MergedEffect","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergedEffect"}],"url":"\/documentation\/atoms\/mergedeffect"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"kind":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","type":"topic","role":"symbol","title":"ThrowingTaskAtom","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}]},"doc://Atoms/documentation/Atoms/AtomViewContext":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","kind":"symbol","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomViewContext","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomViewContext"}],"title":"AtomViewContext","role":"symbol","url":"\/documentation\/atoms\/atomviewcontext"},"doc://Atoms/documentation/Atoms/TaskAtom":{"type":"topic","title":"TaskAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","url":"\/documentation\/atoms\/taskatom","role":"symbol","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous function.","type":"text"}],"navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomProducer":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","navigatorTitle":[{"kind":"identifier","text":"AtomProducer"}],"title":"AtomProducer","abstract":[{"type":"text","text":"Produces the value of an atom."}],"type":"topic","kind":"symbol","url":"\/documentation\/atoms\/atomproducer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomProducer","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"role":"symbol","title":"AtomTransactionContext","navigatorTitle":[{"kind":"identifier","text":"AtomTransactionContext"}],"abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"type":"topic","url":"\/documentation\/atoms\/atomtransactioncontext","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomTransactionContext"}]},"doc://Atoms/documentation/Atoms/ChangesModifier":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChangesModifier"}],"navigatorTitle":[{"text":"ChangesModifier","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A modifier that prevents the atom from updating its child views or atoms when"},{"type":"text","text":" "},{"type":"text","text":"its new value is the same as its old value."}],"title":"ChangesModifier","url":"\/documentation\/atoms\/changesmodifier"},"doc://Atoms/documentation/Atoms/AtomEffectBuilder":{"role":"symbol","kind":"symbol","abstract":[{"text":"A result builder for composing multiple atom effects into a single effect.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AtomEffectBuilder","kind":"identifier"}],"url":"\/documentation\/atoms\/atomeffectbuilder","navigatorTitle":[{"text":"AtomEffectBuilder","kind":"identifier"}],"title":"AtomEffectBuilder","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomEffectBuilder"},"doc://Atoms/documentation/Atoms/Atom/animation(_:)":{"title":"animation(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"animation"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7SwiftUI9AnimationV","text":"Animation","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier","text":"ModifiedAtom"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17AnimationModifierV","text":"AnimationModifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","text":"Produced"},{"text":">>","kind":"text"}],"url":"\/documentation\/atoms\/atom\/animation(_:)","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","type":"topic","abstract":[{"type":"text","text":"Animates the view watching the atom when the value updates."}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/ReleaseEffect":{"url":"\/documentation\/atoms\/releaseeffect","abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is no longer watched and released."}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReleaseEffect"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReleaseEffect"}],"role":"symbol","title":"ReleaseEffect"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true,"type":"reference"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchStateObject","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"type":"topic","url":"\/documentation\/atoms\/watchstateobject","title":"WatchStateObject"},"doc://Atoms/documentation/Atoms/Watch":{"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Watch","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/watch","title":"Watch"},"doc://Atoms/documentation/Atoms/UpdateEffect":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","navigatorTitle":[{"kind":"identifier","text":"UpdateEffect"}],"kind":"symbol","title":"UpdateEffect","role":"symbol","abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is updated."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UpdateEffect","kind":"identifier"}],"url":"\/documentation\/atoms\/updateeffect"},"doc://Atoms/documentation/Atoms/AtomModifier":{"url":"\/documentation\/atoms\/atommodifier","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new value modified from the original value."}],"navigatorTitle":[{"text":"AtomModifier","kind":"identifier"}],"kind":"symbol","title":"AtomModifier","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomModifier"}]},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","abstract":[{"text":"An atom that provides an ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value from the asynchronous throwable function."}],"kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","type":"topic","role":"symbol","title":"AsyncPhaseAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhaseAtom"}]},"doc://Atoms/documentation/Atoms/Atom/changes":{"title":"changes","conformance":{"constraints":[{"type":"codeVoice","code":"Produced"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"changes","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChangesModifier","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms15ChangesModifierV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"},{"kind":"text","text":">>"}],"url":"\/documentation\/atoms\/atom\/changes","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","type":"topic","abstract":[{"type":"text","text":"Prevents the atom from updating its downstream when its new value is equivalent to old value."}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/DefaultScopeID":{"type":"topic","role":"symbol","abstract":[{"text":"A default scope ID to find a matching scope inbetween scoped atoms and ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","isActive":true,"type":"reference"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultScopeID"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID","navigatorTitle":[{"text":"DefaultScopeID","kind":"identifier"}],"url":"\/documentation\/atoms\/defaultscopeid","kind":"symbol","title":"DefaultScopeID"},"doc://Atoms/documentation/Atoms/Snapshot":{"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A snapshot structure that captures specific set of values of atoms and their dependency graph."}],"url":"\/documentation\/atoms\/snapshot","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Snapshot","kind":"identifier"}],"title":"Snapshot","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","navigatorTitle":[{"text":"Snapshot","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" value.","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"role":"symbol","title":"PublisherAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/publisheratom"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"type":"topic","abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"kind":"symbol","title":"ModifiedAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ModifiedAtom"}],"role":"symbol","navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomTestContext":{"title":"AtomTestContext","role":"symbol","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomTestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/atomtestcontext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}]},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","url":"\/documentation\/atoms\/atom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}]},"https://github.com/ra1028/swiftui-atom-properties":{"titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"url":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","type":"link","title":"GitHub Repo"},"doc://Atoms/documentation/Atoms/KeepAlive":{"title":"KeepAlive","navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeepAlive"}],"url":"\/documentation\/atoms\/keepalive","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","type":"topic","abstract":[{"type":"text","text":"An attribute protocol to allow the value of an atom to continue being retained"},{"type":"text","text":" "},{"type":"text","text":"even after they are no longer watched."}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomWatchableContext":{"kind":"symbol","url":"\/documentation\/atoms\/atomwatchablecontext","title":"AtomWatchableContext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomWatchableContext"}],"navigatorTitle":[{"kind":"identifier","text":"AtomWatchableContext"}]},"doc://Atoms/documentation/Atoms/AtomContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","abstract":[{"text":"A context structure to read, write, and otherwise interact with atoms.","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"AtomContext","kind":"identifier"}],"role":"symbol","title":"AtomContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomContext","kind":"identifier"}],"url":"\/documentation\/atoms\/atomcontext"},"doc://Atoms/documentation/Atoms/Atom/changes(of:)":{"title":"changes(of:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"changes"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"> & ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier","text":"ModifiedAtom"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17ChangesOfModifierV","text":"ChangesOfModifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">>"}],"url":"\/documentation\/atoms\/atom\/changes(of:)","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","type":"topic","abstract":[],"kind":"symbol"}}}