{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms"]}],"abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"metadata":{"modules":[{"name":"Atoms"}],"externalID":"Atoms","roleHeading":"Framework","role":"collection","title":"Atoms","symbolKind":"module"},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Atoms","anchor":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"]},{"title":"Modifiers","anchor":"Modifiers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase"]},{"anchor":"Effects","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"],"title":"Effects"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/Resettable"],"anchor":"Attributes","title":"Attributes"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"title":"Property Wrappers","anchor":"Property-Wrappers"},{"title":"Views","anchor":"Views","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"]},{"title":"Values","anchor":"Values","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"]},{"anchor":"Contexts","title":"Contexts","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"]},{"anchor":"Misc","title":"Misc","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Additional Resources","level":2,"anchor":"Additional-Resources"},{"items":[{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Atoms offer a simple but practical capability to tackle the complexity of modern apps. It effectively integrates the solution for both state management and dependency injection while allowing us to rapidly build a robust and testable application.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Building state by compositing atoms automatically optimizes rendering based on its dependency graph. This solves the problem of performance degradation caused by extra re-render which occurs before you realize."}]}]}],"references":{"doc://Atoms/documentation/Atoms/Resettable":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Resettable","kind":"identifier"}],"title":"Resettable","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","url":"\/documentation\/atoms\/resettable","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Resettable"}],"abstract":[{"text":"An attribute protocol that allows an atom to have a custom reset behavior.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomStore":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AtomStore","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomStore"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","abstract":[{"text":"An object that stores the state of atoms and its dependency graph.","type":"text"}],"title":"AtomStore","type":"topic","url":"\/documentation\/atoms\/atomstore","role":"symbol"},"doc://Atoms/documentation/Atoms/Atom/changes(of:)":{"title":"changes(of:)","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"changes"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"> & "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ModifiedAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChangesOfModifier","preciseIdentifier":"s:5Atoms17ChangesOfModifierV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">>","kind":"text"}],"url":"\/documentation\/atoms\/atom\/changes(of:)","abstract":[]},"doc://Atoms/documentation/Atoms/KeepAlive":{"url":"\/documentation\/atoms\/keepalive","abstract":[{"type":"text","text":"An attribute protocol to allow the value of an atom to continue being retained"},{"text":" ","type":"text"},{"type":"text","text":"even after they are no longer watched."}],"type":"topic","title":"KeepAlive","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeepAlive"}],"navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ThrowingTaskAtom","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskAtom"}],"title":"ThrowingTaskAtom","role":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/phase":{"type":"topic","title":"phase","abstract":[{"type":"text","text":"Converts the "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" that the original atom provides into "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"text":" that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"changes overtime."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase","url":"\/documentation\/atoms\/throwingtaskatom\/phase","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"phase","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier","text":"ModifiedAtom"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","text":"TaskPhaseModifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","preciseIdentifier":"s:5Atoms16ThrowingTaskAtomP7SuccessQa","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">>","kind":"text"}]},"doc://Atoms/documentation/Atoms/ChangesModifier":{"kind":"symbol","url":"\/documentation\/atoms\/changesmodifier","type":"topic","title":"ChangesModifier","navigatorTitle":[{"kind":"identifier","text":"ChangesModifier"}],"abstract":[{"type":"text","text":"A modifier that prevents the atom from updating its child views or atoms when"},{"type":"text","text":" "},{"type":"text","text":"its new value is the same as its old value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ChangesModifier","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/MergedEffect":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","url":"\/documentation\/atoms\/mergedeffect","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergedEffect"}],"abstract":[{"text":"An atom effect that merges multiple atom effects into one.","type":"text"}],"title":"MergedEffect","navigatorTitle":[{"text":"MergedEffect","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"navigatorTitle":[{"text":"AtomTransactionContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTransactionContext"}],"title":"AtomTransactionContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","role":"symbol","url":"\/documentation\/atoms\/atomtransactioncontext","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms/EmptyEffect":{"abstract":[{"text":"An effect that doesn’t produce any effects.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EmptyEffect","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"EmptyEffect"}],"title":"EmptyEffect","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/emptyeffect"},"doc://Atoms/documentation/Atoms/AtomEffect":{"type":"topic","abstract":[{"type":"text","text":"Declares side effects that are synchronized with the atom’s lifecycle."}],"title":"AtomEffect","url":"\/documentation\/atoms\/atomeffect","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomEffect"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","navigatorTitle":[{"text":"AtomEffect","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/WatchStateObject":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","url":"\/documentation\/atoms\/watchstateobject","type":"topic","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A property wrapper type that can watch the given atom conforms to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"title":"WatchStateObject"},"doc://Atoms/documentation/Atoms/Watch":{"title":"Watch","url":"\/documentation\/atoms\/watch","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Watch","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/StateAtom":{"url":"\/documentation\/atoms\/stateatom","title":"StateAtom","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}]},"doc://Atoms/documentation/Atoms/ReleaseEffect":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","url":"\/documentation\/atoms\/releaseeffect","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReleaseEffect","kind":"identifier"}],"abstract":[{"text":"An atom effect that performs an arbitrary action when the atom is no longer watched and released.","type":"text"}],"title":"ReleaseEffect","navigatorTitle":[{"text":"ReleaseEffect","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/TaskPhaseModifier":{"url":"\/documentation\/atoms\/taskphasemodifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","abstract":[{"type":"text","text":"An atom that provides a sequential value of the base atom as an enum"},{"text":" ","type":"text"},{"type":"text","text":"representation "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" that changes overtime.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskPhaseModifier","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TaskPhaseModifier"}],"title":"TaskPhaseModifier","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/Snapshot":{"navigatorTitle":[{"kind":"identifier","text":"Snapshot"}],"title":"Snapshot","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Snapshot","kind":"identifier"}],"abstract":[{"text":"A snapshot structure that captures specific set of values of atoms and their dependency graph.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/snapshot","role":"symbol"},"doc://Atoms/documentation/Atoms/DefaultScopeID":{"url":"\/documentation\/atoms\/defaultscopeid","title":"DefaultScopeID","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultScopeID"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID","type":"topic","abstract":[{"text":"A default scope ID to find a matching scope inbetween scoped atoms and ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","isActive":true,"type":"reference"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DefaultScopeID"}]},"doc://Atoms/documentation/Atoms/WatchState":{"title":"WatchState","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","url":"\/documentation\/atoms\/watchstate","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"A property wrapper type that can watch and read-write access to the given atom conforms","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}]},"doc://Atoms/documentation/Atoms/AtomViewContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomViewContext"}],"title":"AtomViewContext","url":"\/documentation\/atoms\/atomviewcontext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomViewContext"}]},"doc://Atoms/documentation/Atoms/AsyncAtom":{"url":"\/documentation\/atoms\/asyncatom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}],"abstract":[{"text":"Declares that a type can produce a refreshable value that can be accessed from everywhere.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncAtom"}],"title":"AsyncAtom","role":"symbol","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"type":"topic","url":"\/documentation\/atoms\/atomcurrentcontext","title":"AtomCurrentContext","abstract":[{"text":"A context structure to read, set, and otherwise interact with atoms.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomCurrentContext"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","navigatorTitle":[{"text":"AtomCurrentContext","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms":{"url":"\/documentation\/atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"type":"topic","kind":"symbol","title":"Atoms","role":"collection"},"doc://Atoms/documentation/Atoms/AtomScope":{"navigatorTitle":[{"kind":"identifier","text":"AtomScope"}],"title":"AtomScope","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomScope","kind":"identifier"}],"abstract":[{"text":"A view to override or monitor atoms in scope.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/atomscope","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomModifier":{"url":"\/documentation\/atoms\/atommodifier","type":"topic","abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new value modified from the original value."}],"title":"AtomModifier","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomModifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","navigatorTitle":[{"text":"AtomModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomRoot":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomRoot","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"AtomRoot","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that stores the state of atoms."}],"title":"AtomRoot","url":"\/documentation\/atoms\/atomroot"},"doc://Atoms/documentation/Atoms/AtomRefreshProducer":{"abstract":[{"text":"Produces the refreshed value of an atom.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomRefreshProducer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomRefreshProducer"}],"title":"AtomRefreshProducer","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer","url":"\/documentation\/atoms\/atomrefreshproducer"},"doc://Atoms/documentation/Atoms/AsyncAtomModifier":{"type":"topic","title":"AsyncAtomModifier","url":"\/documentation\/atoms\/asyncatommodifier","abstract":[{"text":"A modifier that you apply to an atom, producing a new refreshable value modified from the original value.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncAtomModifier","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","navigatorTitle":[{"text":"AsyncAtomModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ViewContext":{"url":"\/documentation\/atoms\/viewcontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}],"navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"title":"ViewContext","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/AnimationModifier":{"url":"\/documentation\/atoms\/animationmodifier","type":"topic","abstract":[{"text":"A modifier that animates the view watching the atom when the value updates.","type":"text"}],"title":"AnimationModifier","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnimationModifier","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","navigatorTitle":[{"text":"AnimationModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomWatchableContext":{"type":"topic","kind":"symbol","url":"\/documentation\/atoms\/atomwatchablecontext","title":"AtomWatchableContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AtomWatchableContext","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomWatchableContext"}],"abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomProducer":{"navigatorTitle":[{"kind":"identifier","text":"AtomProducer"}],"kind":"symbol","title":"AtomProducer","abstract":[{"text":"Produces the value of an atom.","type":"text"}],"url":"\/documentation\/atoms\/atomproducer","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomProducer","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/Suspense":{"url":"\/documentation\/atoms\/suspense","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Suspense","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that lets the content wait for the given task to provide a resulting value"},{"type":"text","text":" "},{"type":"text","text":"or an error."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","navigatorTitle":[{"text":"Suspense","kind":"identifier"}],"title":"Suspense","role":"symbol","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms/UpdateEffect":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","url":"\/documentation\/atoms\/updateeffect","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UpdateEffect"}],"abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is updated."}],"title":"UpdateEffect","navigatorTitle":[{"text":"UpdateEffect","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/TaskAtom/phase":{"kind":"symbol","title":"phase","abstract":[{"text":"Converts the ","type":"text"},{"code":"Task","type":"codeVoice"},{"type":"text","text":" that the original atom provides into "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"text":" that","type":"text"},{"type":"text","text":" "},{"text":"changes overtime.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"phase","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ModifiedAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","text":"TaskPhaseModifier","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms8TaskAtomP7SuccessQa","text":"Success"},{"kind":"text","text":", "},{"text":"Never","kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">>"}],"url":"\/documentation\/atoms\/taskatom\/phase","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"role":"symbol","title":"AtomTestContext","url":"\/documentation\/atoms\/atomtestcontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTestContext"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"AtomTestContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ChangesOfModifier":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChangesOfModifier"}],"abstract":[{"type":"text","text":"A modifier that derives a partial property with the specified key path from the original atom"},{"text":" ","type":"text"},{"type":"text","text":"and prevent it from updating its downstream when its new value is equivalent to old value."}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","url":"\/documentation\/atoms\/changesofmodifier","title":"ChangesOfModifier","navigatorTitle":[{"text":"ChangesOfModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/TaskAtom":{"abstract":[{"text":"An atom type that provides a nonthrowing ","type":"text"},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous function.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","role":"symbol","navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/taskatom","title":"TaskAtom","kind":"symbol"},"doc://Atoms/documentation/Atoms/Scoped":{"role":"symbol","url":"\/documentation\/atoms\/scoped","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Scoped","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","title":"Scoped","type":"topic","abstract":[{"text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor","type":"text"},{"type":"text","text":" "},{"text":"of where it is used and prevents it from being shared out of scope.","type":"text"}],"navigatorTitle":[{"text":"Scoped","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"abstract":[{"text":"An atom that provides an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value from the asynchronous throwable function."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhaseAtom"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"title":"AsyncPhaseAtom","role":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom"},"doc://Atoms/documentation/Atoms/Atom":{"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","navigatorTitle":[{"text":"Atom","kind":"identifier"}],"url":"\/documentation\/atoms\/atom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Atom","kind":"identifier"}],"title":"Atom","kind":"symbol"},"doc://Atoms/documentation/Atoms/ValueAtom":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","role":"symbol","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/valueatom","title":"ValueAtom","abstract":[{"type":"text","text":"An atom type that provides a read-only value."}]},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncPhase","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase","kind":"symbol","role":"symbol"},"https://github.com/ra1028/swiftui-atom-properties":{"type":"link","titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"title":"GitHub Repo","url":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"kind":"symbol","url":"\/documentation\/atoms\/publisheratom","navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"title":"PublisherAtom","type":"topic","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PublisherAtom","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModifiedAtom"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","role":"symbol","navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/modifiedatom","title":"ModifiedAtom","kind":"symbol"},"doc://Atoms/documentation/Atoms/Refreshable":{"title":"Refreshable","url":"\/documentation\/atoms\/refreshable","role":"symbol","type":"topic","navigatorTitle":[{"text":"Refreshable","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Refreshable","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"An attribute protocol that allows an atom to have a custom refresh behavior.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable"},"doc://Atoms/documentation/Atoms/Atom/changes":{"abstract":[{"text":"Prevents the atom from updating its downstream when its new value is equivalent to old value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","title":"changes","url":"\/documentation\/atoms\/atom\/changes","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Produced","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"changes"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"ChangesModifier","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms15ChangesModifierV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"},{"text":">>","kind":"text"}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"url":"\/documentation\/atoms\/asyncsequenceatom","title":"AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" value."}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","role":"symbol","navigatorTitle":[{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}]},"doc://Atoms/documentation/Atoms/AtomContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","url":"\/documentation\/atoms\/atomcontext","type":"topic","navigatorTitle":[{"text":"AtomContext","kind":"identifier"}],"abstract":[{"type":"text","text":"A context structure to read, write, and otherwise interact with atoms."}],"title":"AtomContext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomContext"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/Atom/animation(_:)":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","title":"animation(_:)","url":"\/documentation\/atoms\/atom\/animation(_:)","kind":"symbol","abstract":[{"type":"text","text":"Animates the view watching the atom when the value updates."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"animation","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7SwiftUI9AnimationV","kind":"typeIdentifier","text":"Animation"},{"kind":"text","text":"?) -> "},{"text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"AnimationModifier","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17AnimationModifierV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"},{"text":">>","kind":"text"}]},"doc://Atoms/documentation/Atoms/InitializeEffect":{"title":"InitializeEffect","abstract":[{"text":"An atom effect that performs an arbitrary action when the atom is first used and initialized,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or once it is released and re-initialized again."}],"url":"\/documentation\/atoms\/initializeeffect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"InitializeEffect","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InitializeEffect"}]}}}