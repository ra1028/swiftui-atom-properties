{"kind":"symbol","variants":[{"paths":["\/documentation\/atoms"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"content":[{"level":2,"text":"Additional Resources","anchor":"Additional-Resources","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"}]}]}]},{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Atoms offer a simple but practical capability to tackle the complexity of modern apps. It effectively integrates the solution for both state management and dependency injection while allowing us to rapidly build a robust and testable application."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Building state by compositing atoms automatically optimizes rendering based on its dependency graph. This solves the problem of performance degradation caused by extra re-render which occurs before you realize."}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms"},"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"anchor":"Atoms","title":"Atoms"},{"anchor":"Modifiers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase"],"title":"Modifiers"},{"title":"Effects","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"],"anchor":"Effects"},{"title":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/Resettable"],"anchor":"Attributes"},{"title":"Property Wrappers","anchor":"Property-Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"]},{"anchor":"Views","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","doc:\/\/Atoms\/documentation\/Atoms\/AtomDerivedScope","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"],"title":"Views"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"],"anchor":"Values","title":"Values"},{"title":"Contexts","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"],"anchor":"Contexts"},{"anchor":"Misc","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"],"title":"Misc"}],"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"sections":[],"hierarchy":{"paths":[[]]},"metadata":{"symbolKind":"module","roleHeading":"Framework","title":"Atoms","modules":[{"name":"Atoms"}],"role":"collection","externalID":"Atoms"},"references":{"doc://Atoms/documentation/Atoms/AsyncAtomModifier":{"role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/asyncatommodifier","title":"AsyncAtomModifier","navigatorTitle":[{"text":"AsyncAtomModifier","kind":"identifier"}],"abstract":[{"text":"A modifier that you apply to an atom, producing a new refreshable value modified from the original value.","type":"text"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncAtomModifier"}]},"doc://Atoms/documentation/Atoms/AtomProducer":{"role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/atomproducer","title":"AtomProducer","navigatorTitle":[{"text":"AtomProducer","kind":"identifier"}],"abstract":[{"type":"text","text":"Produces the value of an atom."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomProducer","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/DefaultScopeID":{"title":"DefaultScopeID","role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID","navigatorTitle":[{"kind":"identifier","text":"DefaultScopeID"}],"kind":"symbol","url":"\/documentation\/atoms\/defaultscopeid","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DefaultScopeID","kind":"identifier"}],"abstract":[{"type":"text","text":"A default scope ID to find a matching scope inbetween scoped atoms and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope"},{"text":".","type":"text"}]},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"role":"symbol","url":"\/documentation\/atoms\/stateatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","kind":"symbol","type":"topic","title":"StateAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Suspense":{"abstract":[{"text":"A view that lets the content wait for the given task to provide a resulting value","type":"text"},{"type":"text","text":" "},{"text":"or an error.","type":"text"}],"url":"\/documentation\/atoms\/suspense","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Suspense","kind":"identifier"}],"role":"symbol","title":"Suspense","navigatorTitle":[{"text":"Suspense","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom":{"type":"topic","url":"\/documentation\/atoms\/atom","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"title":"Atom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},"doc://Atoms/documentation/Atoms/Atom/changes":{"type":"topic","role":"symbol","title":"changes","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"changes"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChangesModifier","preciseIdentifier":"s:5Atoms15ChangesModifierV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Produced","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/atoms\/atom\/changes","abstract":[{"text":"Prevents the atom from updating its downstream when its new value is equivalent to old value.","type":"text"}]},"doc://Atoms/documentation/Atoms/AsyncAtom":{"url":"\/documentation\/atoms\/asyncatom","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncAtom"}],"kind":"symbol","title":"AsyncAtom"},"doc://Atoms/documentation/Atoms/AtomDerivedScope":{"url":"\/documentation\/atoms\/atomderivedscope","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomDerivedScope","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomDerivedScope","kind":"symbol","abstract":[{"type":"text","text":"A view that derives the parent context."}],"type":"topic","navigatorTitle":[{"text":"AtomDerivedScope","kind":"identifier"}],"title":"AtomDerivedScope"},"doc://Atoms/documentation/Atoms/ViewContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewContext"}],"navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"type":"topic","url":"\/documentation\/atoms\/viewcontext","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","title":"ViewContext","kind":"symbol"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskAtom"}],"kind":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","type":"topic","title":"ThrowingTaskAtom","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","type":"topic","title":"AsyncSequenceAtom","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","abstract":[{"text":"An atom type that provides asynchronous, sequential elements of the given ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomViewContext":{"url":"\/documentation\/atoms\/atomviewcontext","navigatorTitle":[{"text":"AtomViewContext","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomViewContext"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"title":"AtomViewContext","role":"symbol"},"doc://Atoms/documentation/Atoms/AnimationModifier":{"url":"\/documentation\/atoms\/animationmodifier","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnimationModifier","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","abstract":[{"text":"A modifier that animates the view watching the atom when the value updates.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"AnimationModifier","navigatorTitle":[{"text":"AnimationModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","url":"\/documentation\/atoms\/watchstate","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WatchState","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"title":"WatchState","role":"symbol"},"doc://Atoms/documentation/Atoms/TaskAtom":{"url":"\/documentation\/atoms\/taskatom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous function."}],"title":"TaskAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskAtom"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}]},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"abstract":[{"type":"text","text":"A context structure to read, set, and otherwise interact with atoms."}],"kind":"symbol","title":"AtomCurrentContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomCurrentContext"}],"url":"\/documentation\/atoms\/atomcurrentcontext","navigatorTitle":[{"text":"AtomCurrentContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/InitializeEffect":{"url":"\/documentation\/atoms\/initializeeffect","navigatorTitle":[{"text":"InitializeEffect","kind":"identifier"}],"abstract":[{"text":"An atom effect that performs an arbitrary action when the atom is first used and initialized,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or once it is released and re-initialized again."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializeEffect"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","title":"InitializeEffect","kind":"symbol","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/ChangesModifier":{"url":"\/documentation\/atoms\/changesmodifier","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChangesModifier","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","abstract":[{"text":"A modifier that prevents the atom from updating its child views or atoms when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"its new value is the same as its old value."}],"type":"topic","role":"symbol","kind":"symbol","title":"ChangesModifier","navigatorTitle":[{"text":"ChangesModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/MergedEffect":{"url":"\/documentation\/atoms\/mergedeffect","navigatorTitle":[{"text":"MergedEffect","kind":"identifier"}],"abstract":[{"text":"An atom effect that merges multiple atom effects into one.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergedEffect"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","title":"MergedEffect","kind":"symbol","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/AtomStore":{"abstract":[{"text":"An object that stores the state of atoms and its dependency graph.","type":"text"}],"url":"\/documentation\/atoms\/atomstore","role":"symbol","title":"AtomStore","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AtomStore","kind":"identifier"}],"navigatorTitle":[{"text":"AtomStore","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore"},"doc://Atoms/documentation/Atoms/TaskPhaseModifier":{"role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/taskphasemodifier","title":"TaskPhaseModifier","navigatorTitle":[{"text":"TaskPhaseModifier","kind":"identifier"}],"abstract":[{"text":"An atom that provides a sequential value of the base atom as an enum","type":"text"},{"type":"text","text":" "},{"type":"text","text":"representation "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference"},{"text":" that changes overtime.","type":"text"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskPhaseModifier"}]},"doc://Atoms/documentation/Atoms/AtomRefreshProducer":{"url":"\/documentation\/atoms\/atomrefreshproducer","navigatorTitle":[{"kind":"identifier","text":"AtomRefreshProducer"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomRefreshProducer","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer","type":"topic","abstract":[{"type":"text","text":"Produces the refreshed value of an atom."}],"title":"AtomRefreshProducer"},"https://github.com/ra1028/swiftui-atom-properties":{"title":"GitHub Repo","identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","type":"link","titleInlineContent":[{"text":"GitHub Repo","type":"text"}],"url":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"},"doc://Atoms/documentation/Atoms/KeepAlive":{"role":"symbol","navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"url":"\/documentation\/atoms\/keepalive","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"KeepAlive","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","type":"topic","abstract":[{"type":"text","text":"An attribute protocol to allow the value of an atom to continue being retained"},{"text":" ","type":"text"},{"type":"text","text":"even after they are no longer watched."}],"title":"KeepAlive"},"doc://Atoms/documentation/Atoms/AtomWatchableContext":{"url":"\/documentation\/atoms\/atomwatchablecontext","kind":"symbol","title":"AtomWatchableContext","navigatorTitle":[{"text":"AtomWatchableContext","kind":"identifier"}],"abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomWatchableContext","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/TaskAtom/phase":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"phase","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TaskPhaseModifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Success","preciseIdentifier":"s:5Atoms8TaskAtomP7SuccessQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Never","kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">>"}],"url":"\/documentation\/atoms\/taskatom\/phase","kind":"symbol","type":"topic","abstract":[{"text":"Converts the ","type":"text"},{"type":"codeVoice","code":"Task"},{"type":"text","text":" that the original atom provides into "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"changes overtime."}],"title":"phase","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase"},"doc://Atoms/documentation/Atoms/Atom/animation(_:)":{"title":"animation(_:)","abstract":[{"type":"text","text":"Animates the view watching the atom when the value updates."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","url":"\/documentation\/atoms\/atom\/animation(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"animation"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7SwiftUI9AnimationV","text":"Animation","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5Atoms17AnimationModifierV","kind":"typeIdentifier","text":"AnimationModifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":">>"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AtomEffect":{"abstract":[{"type":"text","text":"Declares side effects that are synchronized with the atom’s lifecycle."}],"kind":"symbol","title":"AtomEffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomEffect"}],"url":"\/documentation\/atoms\/atomeffect","navigatorTitle":[{"text":"AtomEffect","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomRoot":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomRoot"}],"url":"\/documentation\/atoms\/atomroot","title":"AtomRoot","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomRoot","kind":"identifier"}],"abstract":[{"text":"A view that stores the state of atoms.","type":"text"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AtomModifier":{"role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/atommodifier","title":"AtomModifier","navigatorTitle":[{"kind":"identifier","text":"AtomModifier"}],"abstract":[{"text":"A modifier that you apply to an atom, producing a new value modified from the original value.","type":"text"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomModifier"}]},"doc://Atoms/documentation/Atoms/ChangesOfModifier":{"role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/changesofmodifier","title":"ChangesOfModifier","navigatorTitle":[{"text":"ChangesOfModifier","kind":"identifier"}],"abstract":[{"text":"A modifier that derives a partial property with the specified key path from the original atom","type":"text"},{"type":"text","text":" "},{"text":"and prevent it from updating its downstream when its new value is equivalent to old value.","type":"text"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ChangesOfModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomTestContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","title":"AtomTestContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomTestContext","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"url":"\/documentation\/atoms\/atomtestcontext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"url":"\/documentation\/atoms\/publisheratom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"type":"codeVoice","code":"Publisher"},{"text":" as an ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"title":"PublisherAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublisherAtom"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}]},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/Watch":{"navigatorTitle":[{"kind":"identifier","text":"Watch"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Watch"}],"abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"title":"Watch","type":"topic","role":"symbol","url":"\/documentation\/atoms\/watch"},"doc://Atoms/documentation/Atoms/ValueAtom":{"navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}],"kind":"symbol","url":"\/documentation\/atoms\/valueatom","type":"topic","title":"ValueAtom","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ValueAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"url":"\/documentation\/atoms\/atomtransactioncontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTransactionContext"}],"title":"AtomTransactionContext","navigatorTitle":[{"text":"AtomTransactionContext","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/Snapshot":{"kind":"symbol","url":"\/documentation\/atoms\/snapshot","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Snapshot"}],"abstract":[{"type":"text","text":"A snapshot structure that captures specific set of values of atoms and their dependency graph."}],"title":"Snapshot","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Snapshot"}]},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"url":"\/documentation\/atoms\/observableobjectatom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"title":"ObservableObjectAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObjectAtom"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}]},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"topic","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"title":"AsyncPhase"},"doc://Atoms/documentation/Atoms/Refreshable":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Refreshable","kind":"identifier"}],"role":"symbol","title":"Refreshable","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"url":"\/documentation\/atoms\/refreshable","navigatorTitle":[{"kind":"identifier","text":"Refreshable"}]},"doc://Atoms/documentation/Atoms/AtomContext":{"kind":"symbol","url":"\/documentation\/atoms\/atomcontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AtomContext","kind":"identifier"}],"type":"topic","title":"AtomContext","abstract":[{"text":"A context structure to read, write, and otherwise interact with atoms.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AtomContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ReleaseEffect":{"url":"\/documentation\/atoms\/releaseeffect","role":"symbol","abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is no longer watched and released."}],"navigatorTitle":[{"kind":"identifier","text":"ReleaseEffect"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","title":"ReleaseEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ReleaseEffect","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Resettable":{"role":"symbol","navigatorTitle":[{"text":"Resettable","kind":"identifier"}],"url":"\/documentation\/atoms\/resettable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Resettable","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","type":"topic","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom reset behavior."}],"title":"Resettable"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"kind":"symbol","url":"\/documentation\/atoms\/modifiedatom","type":"topic","title":"ModifiedAtom","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","abstract":[{"text":"An atom type that applies a modifier to an atom.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/phase":{"abstract":[{"text":"Converts the ","type":"text"},{"code":"Task","type":"codeVoice"},{"type":"text","text":" that the original atom provides into "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that"},{"text":" ","type":"text"},{"type":"text","text":"changes overtime."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"phase","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","text":"TaskPhaseModifier","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms16ThrowingTaskAtomP7SuccessQa","kind":"typeIdentifier","text":"Success"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">>"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase","url":"\/documentation\/atoms\/throwingtaskatom\/phase","kind":"symbol","title":"phase"},"doc://Atoms/documentation/Atoms/Atom/changes(of:)":{"kind":"symbol","type":"topic","abstract":[],"title":"changes(of:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"changes"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":": any ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":"> & ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"kind":"text","text":") -> "},{"text":"ModifiedAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5Atoms17ChangesOfModifierV","text":"ChangesOfModifier","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier","text":"Produced"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">>"}],"url":"\/documentation\/atoms\/atom\/changes(of:)","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","type":"topic","title":"AsyncPhaseAtom","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","abstract":[{"type":"text","text":"An atom that provides an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value from the asynchronous throwable function."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhaseAtom"}]},"doc://Atoms/documentation/Atoms/EmptyEffect":{"role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/emptyeffect","title":"EmptyEffect","navigatorTitle":[{"text":"EmptyEffect","kind":"identifier"}],"abstract":[{"type":"text","text":"An effect that doesn’t produce any effects."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"EmptyEffect","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/UpdateEffect":{"url":"\/documentation\/atoms\/updateeffect","role":"symbol","abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is updated."}],"navigatorTitle":[{"text":"UpdateEffect","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","title":"UpdateEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UpdateEffect","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Scoped":{"url":"\/documentation\/atoms\/scoped","title":"Scoped","role":"symbol","abstract":[{"text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of where it is used and prevents it from being shared out of scope."}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scoped"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scoped"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"url":"\/documentation\/atoms\/watchstateobject","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"title":"WatchStateObject","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomScope":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","navigatorTitle":[{"text":"AtomScope","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"A view to override or monitor atoms in scope.","type":"text"}],"url":"\/documentation\/atoms\/atomscope","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomScope"}],"title":"AtomScope","role":"symbol"}}}