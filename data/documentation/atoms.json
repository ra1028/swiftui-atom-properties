{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms"},"topicSections":[{"anchor":"Atoms","title":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"]},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase"],"anchor":"Modifiers","title":"Modifiers"},{"anchor":"Effects","title":"Effects","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"]},{"title":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/Resettable"],"anchor":"Attributes"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"anchor":"Property-Wrappers","title":"Property Wrappers"},{"title":"Views","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","doc:\/\/Atoms\/documentation\/Atoms\/AtomDerivedScope","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"],"anchor":"Views"},{"title":"Values","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"],"anchor":"Values"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"],"title":"Contexts","anchor":"Contexts"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"],"anchor":"Misc","title":"Misc"}],"abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"primaryContentSections":[{"content":[{"type":"heading","text":"Additional Resources","level":2,"anchor":"Additional-Resources"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"inlineContent":[{"text":"Atoms offer a simple but practical capability to tackle the complexity of modern apps. It effectively integrates the solution for both state management and dependency injection while allowing us to rapidly build a robust and testable application.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Building state by compositing atoms automatically optimizes rendering based on its dependency graph. This solves the problem of performance degradation caused by extra re-render which occurs before you realize."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"roleHeading":"Framework","title":"Atoms","externalID":"Atoms","role":"collection","symbolKind":"module","modules":[{"name":"Atoms"}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms"]}],"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Atoms/documentation/Atoms/TaskAtom/phase":{"role":"symbol","kind":"symbol","abstract":[{"text":"Converts the ","type":"text"},{"code":"Task","type":"codeVoice"},{"text":" that the original atom provides into ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" that","type":"text"},{"type":"text","text":" "},{"text":"changes overtime.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"phase","kind":"identifier"},{"kind":"text","text":": "},{"text":"ModifiedAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"TaskPhaseModifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms8TaskAtomP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Never","kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO"},{"text":">>","kind":"text"}],"title":"phase","type":"topic","url":"\/documentation\/atoms\/taskatom\/phase"},"doc://Atoms/documentation/Atoms/AtomStore":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","url":"\/documentation\/atoms\/atomstore","type":"topic","abstract":[{"text":"An object that stores the state of atoms and its dependency graph.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomStore","kind":"identifier"}],"navigatorTitle":[{"text":"AtomStore","kind":"identifier"}],"title":"AtomStore"},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WatchState"}],"role":"symbol","abstract":[{"text":"A property wrapper type that can watch and read-write access to the given atom conforms","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","isActive":true,"type":"reference"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","url":"\/documentation\/atoms\/watchstate","title":"WatchState"},"doc://Atoms/documentation/Atoms/AsyncAtomModifier":{"role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/asyncatommodifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","type":"topic","abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new refreshable value modified from the original value."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAtomModifier","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncAtomModifier"}],"title":"AsyncAtomModifier"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom"},"doc://Atoms/documentation/Atoms/Refreshable":{"abstract":[{"text":"An attribute protocol that allows an atom to have a custom refresh behavior.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Refreshable"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","type":"topic","navigatorTitle":[{"text":"Refreshable","kind":"identifier"}],"title":"Refreshable","url":"\/documentation\/atoms\/refreshable","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomContext":{"kind":"symbol","url":"\/documentation\/atoms\/atomcontext","title":"AtomContext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomContext"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","type":"topic","abstract":[{"type":"text","text":"A context structure to read, write, and otherwise interact with atoms."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Snapshot":{"abstract":[{"text":"A snapshot structure that captures specific set of values of atoms and their dependency graph.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Snapshot"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Snapshot"}],"kind":"symbol","title":"Snapshot","url":"\/documentation\/atoms\/snapshot","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","type":"topic"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","url":"\/documentation\/atoms\/asyncatom","type":"topic","abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncAtom","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"title":"AsyncAtom"},"doc://Atoms/documentation/Atoms/TaskAtom":{"kind":"symbol","title":"TaskAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskAtom","kind":"identifier"}],"type":"topic","abstract":[{"text":"An atom type that provides a nonthrowing ","type":"text"},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous function."}],"navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/taskatom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/throwingtaskatom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ThrowingTaskAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that provides a throwing ","type":"text"},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous, throwing function.","type":"text"}],"kind":"symbol","title":"ThrowingTaskAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/Atom":{"url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"role":"symbol","title":"Atom","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom"},"doc://Atoms/documentation/Atoms/DefaultScopeID":{"url":"\/documentation\/atoms\/defaultscopeid","abstract":[{"type":"text","text":"A default scope ID to find a matching scope inbetween scoped atoms and "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID","title":"DefaultScopeID","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DefaultScopeID","kind":"identifier"}],"navigatorTitle":[{"text":"DefaultScopeID","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/ValueAtom":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","title":"ValueAtom","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}],"role":"symbol","url":"\/documentation\/atoms\/valueatom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueAtom","kind":"identifier"}],"abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"type":"topic"},"doc://Atoms/documentation/Atoms/Atom/animation(_:)":{"role":"symbol","kind":"symbol","abstract":[{"text":"Animates the view watching the atom when the value updates.","type":"text"}],"title":"animation(_:)","url":"\/documentation\/atoms\/atom\/animation(_:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"animation"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"AnimationModifier","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17AnimationModifierV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":">>"}],"type":"topic"},"doc://Atoms/documentation/Atoms/AtomEffect":{"role":"symbol","navigatorTitle":[{"text":"AtomEffect","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Declares side effects that are synchronized with the atom’s lifecycle.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomEffect","kind":"identifier"}],"title":"AtomEffect","type":"topic","url":"\/documentation\/atoms\/atomeffect"},"doc://Atoms/documentation/Atoms/MergedEffect":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MergedEffect"}],"kind":"symbol","abstract":[{"type":"text","text":"An atom effect that merges multiple atom effects into one."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MergedEffect","kind":"identifier"}],"title":"MergedEffect","type":"topic","url":"\/documentation\/atoms\/mergedeffect"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"title":"ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","kind":"symbol","abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"},"doc://Atoms/documentation/Atoms/StateAtom":{"navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","title":"StateAtom","kind":"symbol","url":"\/documentation\/atoms\/stateatom","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}]},"doc://Atoms/documentation/Atoms/ReleaseEffect":{"url":"\/documentation\/atoms\/releaseeffect","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","kind":"symbol","abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is no longer watched and released."}],"title":"ReleaseEffect","role":"symbol","navigatorTitle":[{"text":"ReleaseEffect","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ReleaseEffect","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomDerivedScope":{"kind":"symbol","abstract":[{"type":"text","text":"A view that derives the parent context."}],"type":"topic","url":"\/documentation\/atoms\/atomderivedscope","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomDerivedScope","title":"AtomDerivedScope","navigatorTitle":[{"text":"AtomDerivedScope","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomDerivedScope"}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"kind":"symbol","title":"PublisherAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublisherAtom","kind":"identifier"}],"type":"topic","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/publisheratom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},"doc://Atoms/documentation/Atoms/TaskPhaseModifier":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskPhaseModifier"}],"title":"TaskPhaseModifier","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TaskPhaseModifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","type":"topic","abstract":[{"text":"An atom that provides a sequential value of the base atom as an enum","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"representation "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" that changes overtime."}],"url":"\/documentation\/atoms\/taskphasemodifier","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"kind":"symbol","url":"\/documentation\/atoms\/atomtransactioncontext","title":"AtomTransactionContext","role":"symbol","navigatorTitle":[{"text":"AtomTransactionContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","type":"topic","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomTransactionContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/UpdateEffect":{"role":"symbol","navigatorTitle":[{"text":"UpdateEffect","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"An atom effect that performs an arbitrary action when the atom is updated.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UpdateEffect"}],"title":"UpdateEffect","type":"topic","url":"\/documentation\/atoms\/updateeffect"},"doc://Atoms/documentation/Atoms/Scoped":{"abstract":[{"text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor","type":"text"},{"type":"text","text":" "},{"text":"of where it is used and prevents it from being shared out of scope.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scoped"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","type":"topic","navigatorTitle":[{"text":"Scoped","kind":"identifier"}],"title":"Scoped","url":"\/documentation\/atoms\/scoped","role":"symbol"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/phase":{"type":"topic","role":"symbol","url":"\/documentation\/atoms\/throwingtaskatom\/phase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"phase","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ModifiedAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","text":"TaskPhaseModifier","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Success","preciseIdentifier":"s:5Atoms16ThrowingTaskAtomP7SuccessQa","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":">>","kind":"text"}],"title":"phase","abstract":[{"type":"text","text":"Converts the "},{"code":"Task","type":"codeVoice"},{"text":" that the original atom provides into ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"type":"text","text":" that"},{"type":"text","text":" "},{"type":"text","text":"changes overtime."}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomRefreshProducer":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer","url":"\/documentation\/atoms\/atomrefreshproducer","type":"topic","abstract":[{"text":"Produces the refreshed value of an atom.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomRefreshProducer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomRefreshProducer"}],"title":"AtomRefreshProducer"},"doc://Atoms/documentation/Atoms/InitializeEffect":{"kind":"symbol","url":"\/documentation\/atoms\/initializeeffect","title":"InitializeEffect","navigatorTitle":[{"text":"InitializeEffect","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializeEffect"}],"abstract":[{"text":"An atom effect that performs an arbitrary action when the atom is first used and initialized,","type":"text"},{"type":"text","text":" "},{"text":"or once it is released and re-initialized again.","type":"text"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhaseAtom"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","title":"AsyncPhaseAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","abstract":[{"text":"An atom that provides an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference"},{"type":"text","text":" value from the asynchronous throwable function."}]},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","title":"AsyncSequenceAtom","navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"text":"as an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference"},{"type":"text","text":" value."}],"type":"topic"},"doc://Atoms/documentation/Atoms/Atom/changes":{"type":"topic","role":"symbol","url":"\/documentation\/atoms\/atom\/changes","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Produced"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"changes","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms15ChangesModifierV","text":"ChangesModifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":">>"}],"title":"changes","abstract":[{"text":"Prevents the atom from updating its downstream when its new value is equivalent to old value.","type":"text"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/Resettable":{"title":"Resettable","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","abstract":[{"text":"An attribute protocol that allows an atom to have a custom reset behavior.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Resettable","kind":"identifier"}],"url":"\/documentation\/atoms\/resettable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Resettable"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomModifier":{"role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/atommodifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","type":"topic","abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new value modified from the original value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomModifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomModifier"}],"title":"AtomModifier"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","role":"collection","url":"\/documentation\/atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"type":"topic"},"doc://Atoms/documentation/Atoms/Watch":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Watch"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"role":"symbol","abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","url":"\/documentation\/atoms\/watch","title":"Watch"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"url":"\/documentation\/atoms\/asyncphase","title":"AsyncPhase","abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"type":"topic"},"doc://Atoms/documentation/Atoms/AtomRoot":{"abstract":[{"text":"A view that stores the state of atoms.","type":"text"}],"title":"AtomRoot","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomRoot"}],"type":"topic","url":"\/documentation\/atoms\/atomroot","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomRoot"}]},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"kind":"symbol","role":"symbol","title":"AtomCurrentContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomCurrentContext"}],"navigatorTitle":[{"kind":"identifier","text":"AtomCurrentContext"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","abstract":[{"type":"text","text":"A context structure to read, set, and otherwise interact with atoms."}],"url":"\/documentation\/atoms\/atomcurrentcontext"},"doc://Atoms/documentation/Atoms/ChangesModifier":{"abstract":[{"type":"text","text":"A modifier that prevents the atom from updating its child views or atoms when"},{"text":" ","type":"text"},{"type":"text","text":"its new value is the same as its old value."}],"url":"\/documentation\/atoms\/changesmodifier","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","title":"ChangesModifier","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChangesModifier"}],"navigatorTitle":[{"text":"ChangesModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomWatchableContext":{"kind":"symbol","url":"\/documentation\/atoms\/atomwatchablecontext","title":"AtomWatchableContext","role":"symbol","navigatorTitle":[{"text":"AtomWatchableContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","type":"topic","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomWatchableContext"}]},"doc://Atoms/documentation/Atoms/Atom/changes(of:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","type":"topic","role":"symbol","url":"\/documentation\/atoms\/atom\/changes(of:)","title":"changes(of:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"changes"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"> & "},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChangesOfModifier","preciseIdentifier":"s:5Atoms17ChangesOfModifierV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"abstract":[]},"https://github.com/ra1028/swiftui-atom-properties":{"titleInlineContent":[{"text":"GitHub Repo","type":"text"}],"url":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","type":"link","title":"GitHub Repo","identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"},"doc://Atoms/documentation/Atoms/AtomViewContext":{"kind":"symbol","title":"AtomViewContext","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomViewContext","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"navigatorTitle":[{"text":"AtomViewContext","kind":"identifier"}],"url":"\/documentation\/atoms\/atomviewcontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext"},"doc://Atoms/documentation/Atoms/Suspense":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","kind":"symbol","type":"topic","title":"Suspense","abstract":[{"text":"A view that lets the content wait for the given task to provide a resulting value","type":"text"},{"type":"text","text":" "},{"text":"or an error.","type":"text"}],"url":"\/documentation\/atoms\/suspense","navigatorTitle":[{"kind":"identifier","text":"Suspense"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Suspense","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ChangesOfModifier":{"role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/changesofmodifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","type":"topic","abstract":[{"type":"text","text":"A modifier that derives a partial property with the specified key path from the original atom"},{"text":" ","type":"text"},{"type":"text","text":"and prevent it from updating its downstream when its new value is equivalent to old value."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChangesOfModifier","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ChangesOfModifier"}],"title":"ChangesOfModifier"},"doc://Atoms/documentation/Atoms/AtomScope":{"abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"role":"symbol","navigatorTitle":[{"text":"AtomScope","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomScope"}],"kind":"symbol","title":"AtomScope","url":"\/documentation\/atoms\/atomscope","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","type":"topic"},"doc://Atoms/documentation/Atoms/EmptyEffect":{"role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/emptyeffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","type":"topic","abstract":[{"text":"An effect that doesn’t produce any effects.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptyEffect","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"EmptyEffect"}],"title":"EmptyEffect"},"doc://Atoms/documentation/Atoms/AtomProducer":{"title":"AtomProducer","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomProducer"}],"role":"symbol","url":"\/documentation\/atoms\/atomproducer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomProducer","kind":"identifier"}],"abstract":[{"type":"text","text":"Produces the value of an atom."}],"type":"topic"},"doc://Atoms/documentation/Atoms/ViewContext":{"navigatorTitle":[{"text":"ViewContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewContext"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","title":"ViewContext","kind":"symbol","url":"\/documentation\/atoms\/viewcontext","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"type":"text","text":"interact with atoms from views."}]},"doc://Atoms/documentation/Atoms/AtomTestContext":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomTestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/atomtestcontext","role":"symbol","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","title":"AtomTestContext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}]},"doc://Atoms/documentation/Atoms/AnimationModifier":{"role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/animationmodifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","type":"topic","abstract":[{"text":"A modifier that animates the view watching the atom when the value updates.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationModifier","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AnimationModifier"}],"title":"AnimationModifier"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","title":"WatchStateObject","kind":"symbol","url":"\/documentation\/atoms\/watchstateobject","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"text":".","type":"text"}]},"doc://Atoms/documentation/Atoms/KeepAlive":{"abstract":[{"text":"An attribute protocol to allow the value of an atom to continue being retained","type":"text"},{"type":"text","text":" "},{"text":"even after they are no longer watched.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"KeepAlive","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","type":"topic","navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"title":"KeepAlive","url":"\/documentation\/atoms\/keepalive","role":"symbol"}}}