{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Additional-Resources","level":2,"type":"heading","text":"Additional Resources"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"}]}]}]},{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Atoms offer a simple but practical capability to tackle the complexity of modern apps. It effectively integrates the solution for both state management and dependency injection while allowing us to rapidly build a robust and testable application."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Building state by compositing atoms automatically optimizes rendering based on its dependency graph. This solves the problem of performance degradation caused by extra re-render which occurs before you realize."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/atoms"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"Atoms","title":"Atoms","symbolKind":"module","role":"collection","modules":[{"name":"Atoms"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"]},{"title":"Modifiers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase"]},{"title":"Effects","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"]},{"title":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/Resettable"]},{"title":"Property Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"]},{"title":"Views","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"]},{"title":"Values","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"]},{"title":"Contexts","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"]},{"title":"Misc","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"]}],"references":{"doc://Atoms/documentation/Atoms/KeepAlive":{"role":"symbol","title":"KeepAlive","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeepAlive"}],"abstract":[{"type":"text","text":"An attribute protocol to allow the value of an atom to continue being retained"},{"type":"text","text":" "},{"type":"text","text":"even after they are no longer watched."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeepAlive"}],"url":"\/documentation\/atoms\/keepalive"},"doc://Atoms/documentation/Atoms/WatchState":{"role":"symbol","title":"WatchState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WatchState"}],"url":"\/documentation\/atoms\/watchstate"},"doc://Atoms/documentation/Atoms/AtomStore":{"role":"symbol","title":"AtomStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomStore"}],"abstract":[{"type":"text","text":"An object that stores the state of atoms and its dependency graph."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomStore"}],"url":"\/documentation\/atoms\/atomstore"},"doc://Atoms/documentation/Atoms/ChangesModifier":{"role":"symbol","title":"ChangesModifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChangesModifier"}],"abstract":[{"type":"text","text":"A modifier that prevents the atom from updating its child views or atoms when"},{"type":"text","text":" "},{"type":"text","text":"its new value is the same as its old value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChangesModifier"}],"url":"\/documentation\/atoms\/changesmodifier"},"doc://Atoms/documentation/Atoms/ValueAtom":{"role":"symbol","title":"ValueAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}],"url":"\/documentation\/atoms\/valueatom"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"role":"symbol","title":"AsyncAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncAtom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncAtom"}],"url":"\/documentation\/atoms\/asyncatom"},"doc://Atoms/documentation/Atoms/EmptyEffect":{"role":"symbol","title":"EmptyEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyEffect"}],"abstract":[{"type":"text","text":"An effect that doesn’t produce any effects."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EmptyEffect"}],"url":"\/documentation\/atoms\/emptyeffect"},"doc://Atoms/documentation/Atoms/AtomProducer":{"role":"symbol","title":"AtomProducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomProducer"}],"abstract":[{"type":"text","text":"Produces the value of an atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomProducer"}],"url":"\/documentation\/atoms\/atomproducer"},"doc://Atoms/documentation/Atoms/AtomEffect":{"role":"symbol","title":"AtomEffect","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomEffect"}],"abstract":[{"type":"text","text":"Declares side effects that are synchronized with the atom’s lifecycle."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomEffect"}],"url":"\/documentation\/atoms\/atomeffect"},"doc://Atoms/documentation/Atoms/Watch":{"role":"symbol","title":"Watch","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Watch"}],"url":"\/documentation\/atoms\/watch"},"doc://Atoms/documentation/Atoms/ChangesOfModifier":{"role":"symbol","title":"ChangesOfModifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChangesOfModifier"}],"abstract":[{"type":"text","text":"A modifier that derives a partial property with the specified key path from the original atom"},{"type":"text","text":" "},{"type":"text","text":"and prevent it from updating its downstream when its new value is equivalent to old value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChangesOfModifier"}],"url":"\/documentation\/atoms\/changesofmodifier"},"doc://Atoms/documentation/Atoms/Atom":{"role":"symbol","title":"Atom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"role":"symbol","title":"WatchStateObject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"url":"\/documentation\/atoms\/watchstateobject"},"doc://Atoms/documentation/Atoms/TaskAtom":{"role":"symbol","title":"TaskAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"url":"\/documentation\/atoms\/taskatom"},"doc://Atoms/documentation/Atoms/ReleaseEffect":{"role":"symbol","title":"ReleaseEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReleaseEffect"}],"abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is no longer watched and released."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReleaseEffect"}],"url":"\/documentation\/atoms\/releaseeffect"},"doc://Atoms/documentation/Atoms/Snapshot":{"role":"symbol","title":"Snapshot","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Snapshot"}],"abstract":[{"type":"text","text":"A snapshot structure that captures specific set of values of atoms and their dependency graph."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Snapshot"}],"url":"\/documentation\/atoms\/snapshot"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"role":"symbol","title":"AsyncPhase","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhase"}],"abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"url":"\/documentation\/atoms\/asyncphase"},"doc://Atoms/documentation/Atoms/MergedEffect":{"role":"symbol","title":"MergedEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergedEffect"}],"abstract":[{"type":"text","text":"An atom effect that merges multiple atom effects into one."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MergedEffect"}],"url":"\/documentation\/atoms\/mergedeffect"},"doc://Atoms/documentation/Atoms/AtomContext":{"role":"symbol","title":"AtomContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomContext"}],"abstract":[{"type":"text","text":"A context structure to read, write, and otherwise interact with atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomContext"}],"url":"\/documentation\/atoms\/atomcontext"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"role":"symbol","title":"AtomTestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTestContext"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"url":"\/documentation\/atoms\/atomtestcontext"},"https://github.com/ra1028/swiftui-atom-properties":{"title":"GitHub Repo","titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"type":"link","identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","url":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"},"doc://Atoms/documentation/Atoms/Atom/changes":{"conformance":{"constraints":[{"type":"codeVoice","code":"Produced"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"changes","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"changes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChangesModifier","preciseIdentifier":"s:5Atoms15ChangesModifierV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"Prevents the atom from updating its downstream when its new value is equivalent to old value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/atom\/changes"},"doc://Atoms/documentation/Atoms/AnimationModifier":{"role":"symbol","title":"AnimationModifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnimationModifier"}],"abstract":[{"type":"text","text":"A modifier that animates the view watching the atom when the value updates."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnimationModifier"}],"url":"\/documentation\/atoms\/animationmodifier"},"doc://Atoms/documentation/Atoms/Scoped":{"role":"symbol","title":"Scoped","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scoped"}],"abstract":[{"type":"text","text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor"},{"type":"text","text":" "},{"type":"text","text":"of where it is used and prevents it from being shared out of scope."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Scoped"}],"url":"\/documentation\/atoms\/scoped"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"role":"symbol","title":"ModifiedAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ModifiedAtom"}],"abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"url":"\/documentation\/atoms\/modifiedatom"},"doc://Atoms/documentation/Atoms/AtomViewContext":{"role":"symbol","title":"AtomViewContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomViewContext"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomViewContext"}],"url":"\/documentation\/atoms\/atomviewcontext"},"doc://Atoms/documentation/Atoms/Atom/changes(of:)":{"role":"symbol","title":"changes(of:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"changes"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChangesOfModifier","preciseIdentifier":"s:5Atoms17ChangesOfModifierV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"Derives a partial property with the specified key path from the original atom and prevent it"},{"type":"text","text":" "},{"type":"text","text":"from updating its downstream when its new value is equivalent to old value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/atom\/changes(of:)"},"doc://Atoms/documentation/Atoms/AsyncAtomModifier":{"role":"symbol","title":"AsyncAtomModifier","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncAtomModifier"}],"abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new refreshable value modified from the original value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncAtomModifier"}],"url":"\/documentation\/atoms\/asyncatommodifier"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"role":"symbol","title":"PublisherAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublisherAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"url":"\/documentation\/atoms\/publisheratom"},"doc://Atoms/documentation/Atoms/UpdateEffect":{"role":"symbol","title":"UpdateEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UpdateEffect"}],"abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is updated."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UpdateEffect"}],"url":"\/documentation\/atoms\/updateeffect"},"doc://Atoms/documentation/Atoms/AtomRoot":{"role":"symbol","title":"AtomRoot","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomRoot"}],"abstract":[{"type":"text","text":"A view that stores the state of atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomRoot"}],"url":"\/documentation\/atoms\/atomroot"},"doc://Atoms/documentation/Atoms/AtomRefreshProducer":{"role":"symbol","title":"AtomRefreshProducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomRefreshProducer"}],"abstract":[{"type":"text","text":"Produces the refreshed value of an atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomRefreshProducer"}],"url":"\/documentation\/atoms\/atomrefreshproducer"},"doc://Atoms/documentation/Atoms/AtomWatchableContext":{"role":"symbol","title":"AtomWatchableContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomWatchableContext"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomWatchableContext"}],"url":"\/documentation\/atoms\/atomwatchablecontext"},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"role":"symbol","title":"AtomTransactionContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTransactionContext"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomTransactionContext"}],"url":"\/documentation\/atoms\/atomtransactioncontext"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"role":"symbol","title":"ThrowingTaskAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThrowingTaskAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous, throwing function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskAtom"}],"url":"\/documentation\/atoms\/throwingtaskatom"},"doc://Atoms/documentation/Atoms/Refreshable":{"role":"symbol","title":"Refreshable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Refreshable"}],"abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Refreshable"}],"url":"\/documentation\/atoms\/refreshable"},"doc://Atoms/documentation/Atoms/Atom/animation(_:)":{"role":"symbol","title":"animation(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"animation"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"AnimationModifier","preciseIdentifier":"s:5Atoms17AnimationModifierV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"Animates the view watching the atom when the value updates."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/atom\/animation(_:)"},"doc://Atoms/documentation/Atoms/Resettable":{"role":"symbol","title":"Resettable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Resettable"}],"abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom reset behavior."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Resettable"}],"url":"\/documentation\/atoms\/resettable"},"doc://Atoms/documentation/Atoms/DefaultScopeID":{"role":"symbol","title":"DefaultScopeID","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultScopeID"}],"abstract":[{"type":"text","text":"A default scope ID to find a matching scope inbetween scoped atoms and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DefaultScopeID"}],"url":"\/documentation\/atoms\/defaultscopeid"},"doc://Atoms/documentation/Atoms/ViewContext":{"role":"symbol","title":"ViewContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewContext"}],"abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"type":"text","text":" "},{"type":"text","text":"interact with atoms from views."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"url":"\/documentation\/atoms\/viewcontext"},"doc://Atoms/documentation/Atoms/Suspense":{"role":"symbol","title":"Suspense","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Suspense"}],"abstract":[{"type":"text","text":"A view that lets the content wait for the given task to provide a resulting value"},{"type":"text","text":" "},{"type":"text","text":"or an error."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Suspense"}],"url":"\/documentation\/atoms\/suspense"},"doc://Atoms/documentation/Atoms":{"role":"collection","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","type":"topic","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/TaskAtom/phase":{"role":"symbol","title":"phase","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"phase"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TaskPhaseModifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"Converts the "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" that the original atom provides into "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that"},{"type":"text","text":" "},{"type":"text","text":"changes overtime."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/taskatom\/phase"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"role":"symbol","title":"AsyncSequenceAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceAtom"}],"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"url":"\/documentation\/atoms\/asyncsequenceatom"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/phase":{"role":"symbol","title":"phase","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"phase"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TaskPhaseModifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"Converts the "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" that the original atom provides into "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that"},{"type":"text","text":" "},{"type":"text","text":"changes overtime."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/throwingtaskatom\/phase"},"doc://Atoms/documentation/Atoms/TaskPhaseModifier":{"role":"symbol","title":"TaskPhaseModifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskPhaseModifier"}],"abstract":[{"type":"text","text":"An atom that provides a sequential value of the base atom as an enum"},{"type":"text","text":" "},{"type":"text","text":"representation "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that changes overtime."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TaskPhaseModifier"}],"url":"\/documentation\/atoms\/taskphasemodifier"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"role":"symbol","title":"ObservableObjectAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObjectAtom"}],"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"url":"\/documentation\/atoms\/observableobjectatom"},"doc://Atoms/documentation/Atoms/AtomModifier":{"role":"symbol","title":"AtomModifier","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomModifier"}],"abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new value modified from the original value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomModifier"}],"url":"\/documentation\/atoms\/atommodifier"},"doc://Atoms/documentation/Atoms/InitializeEffect":{"role":"symbol","title":"InitializeEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializeEffect"}],"abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is first used and initialized,"},{"type":"text","text":" "},{"type":"text","text":"or once it is released and re-initialized again."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InitializeEffect"}],"url":"\/documentation\/atoms\/initializeeffect"},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"role":"symbol","title":"AtomCurrentContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomCurrentContext"}],"abstract":[{"type":"text","text":"A context structure to read, set, and otherwise interact with atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomCurrentContext"}],"url":"\/documentation\/atoms\/atomcurrentcontext"},"doc://Atoms/documentation/Atoms/StateAtom":{"role":"symbol","title":"StateAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom"},"doc://Atoms/documentation/Atoms/AtomScope":{"role":"symbol","title":"AtomScope","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomScope"}],"abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomScope"}],"url":"\/documentation\/atoms\/atomscope"}}}