{"sections":[],"metadata":{"role":"collection","modules":[{"name":"Atoms"}],"externalID":"Atoms","roleHeading":"Framework","title":"Atoms","symbolKind":"module"},"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"title":"Atoms","anchor":"Atoms"},{"anchor":"Modifiers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase"],"title":"Modifiers"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","doc:\/\/Atoms\/documentation\/Atoms\/AtomEffectBuilder","doc:\/\/Atoms\/documentation\/Atoms\/InitializingEffect","doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect"],"title":"Effects","anchor":"Effects"},{"anchor":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive"],"title":"Attributes"},{"anchor":"Property-Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"title":"Property Wrappers"},{"title":"Views","anchor":"Views","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","doc:\/\/Atoms\/documentation\/Atoms\/AtomDerivedScope","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"]},{"title":"Values","anchor":"Values","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"]},{"title":"Contexts","anchor":"Contexts","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"]},{"title":"Misc","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"],"anchor":"Misc"},{"title":"Deprecated","anchor":"Deprecated","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/Resettable","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"]}],"variants":[{"paths":["\/documentation\/atoms"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Additional Resources","type":"heading","anchor":"Additional-Resources"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","type":"reference"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"Atoms offer a simple but practical capability to tackle the complexity of modern apps. It effectively integrates the solution for both state management and dependency injection while allowing us to rapidly build a robust and testable application."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Building state by compositing atoms automatically optimizes rendering based on its dependency graph. This solves the problem of performance degradation caused by extra re-render which occurs before you realize."}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"hierarchy":{"paths":[[]]},"kind":"symbol","references":{"doc://Atoms/documentation/Atoms/AtomDerivedScope":{"abstract":[{"type":"text","text":"A view that derives the parent context."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomDerivedScope","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomDerivedScope","kind":"identifier"}],"title":"AtomDerivedScope","url":"\/documentation\/atoms\/atomderivedscope","navigatorTitle":[{"text":"AtomDerivedScope","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},"doc://Atoms/documentation/Atoms/MergedEffect":{"url":"\/documentation\/atoms\/mergedeffect","title":"MergedEffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","role":"symbol","abstract":[{"type":"text","text":"An atom effect that merges multiple atom effects into one."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergedEffect"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"MergedEffect","kind":"identifier"}],"deprecated":true},"doc://Atoms/documentation/Atoms/Atom/animation(_:)":{"url":"\/documentation\/atoms\/atom\/animation(_:)","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","title":"animation(_:)","type":"topic","abstract":[{"text":"Animates the view watching the atom when the value updates.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"animation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5Atoms17AnimationModifierV","kind":"typeIdentifier","text":"AnimationModifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":">>","kind":"text"}]},"doc://Atoms/documentation/Atoms/Refreshable":{"type":"topic","url":"\/documentation\/atoms\/refreshable","role":"symbol","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom refresh behavior."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","title":"Refreshable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Refreshable"}],"kind":"symbol","navigatorTitle":[{"text":"Refreshable","kind":"identifier"}],"deprecated":true},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"title":"ObservableObjectAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/observableobjectatom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"navigatorTitle":[{"kind":"identifier","text":"AtomTransactionContext"}],"kind":"symbol","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"title":"AtomTransactionContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomTransactionContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","type":"topic","url":"\/documentation\/atoms\/atomtransactioncontext","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomRefreshProducer":{"abstract":[{"type":"text","text":"Produces the refreshed value of an atom."}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer","title":"AtomRefreshProducer","url":"\/documentation\/atoms\/atomrefreshproducer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomRefreshProducer"}],"navigatorTitle":[{"text":"AtomRefreshProducer","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","kind":"symbol","url":"\/documentation\/atoms\/modifiedatom","abstract":[{"text":"An atom type that applies a modifier to an atom.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ModifiedAtom","kind":"identifier"}],"title":"ModifiedAtom"},"doc://Atoms/documentation/Atoms/AtomEffect":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomEffect"}],"url":"\/documentation\/atoms\/atomeffect","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AtomEffect","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Declares side effects that are synchronized with the atom’s lifecycle."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","title":"AtomEffect"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"text":"as an ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncSequenceAtom"}],"title":"AsyncSequenceAtom"},"doc://Atoms/documentation/Atoms/ValueAtom":{"title":"ValueAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAtom"}],"url":"\/documentation\/atoms\/valueatom","abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","kind":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous, throwing function.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}],"title":"ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/AtomContext":{"kind":"symbol","type":"topic","url":"\/documentation\/atoms\/atomcontext","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AtomContext","kind":"identifier"}],"navigatorTitle":[{"text":"AtomContext","kind":"identifier"}],"title":"AtomContext","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","abstract":[{"text":"A context structure to read, write, and otherwise interact with atoms.","type":"text"}]},"doc://Atoms/documentation/Atoms/TaskPhaseModifier":{"role":"symbol","url":"\/documentation\/atoms\/taskphasemodifier","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","abstract":[{"type":"text","text":"An atom that provides a sequential value of the base atom as an enum"},{"text":" ","type":"text"},{"text":"representation ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that changes overtime."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TaskPhaseModifier","kind":"identifier"}],"title":"TaskPhaseModifier","navigatorTitle":[{"kind":"identifier","text":"TaskPhaseModifier"}]},"doc://Atoms/documentation/Atoms/AtomScope":{"abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomScope","kind":"identifier"}],"title":"AtomScope","url":"\/documentation\/atoms\/atomscope","navigatorTitle":[{"text":"AtomScope","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/Suspense":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","navigatorTitle":[{"text":"Suspense","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Suspense","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/suspense","title":"Suspense","abstract":[{"text":"A view that lets the content wait for the given task to provide a resulting value","type":"text"},{"text":" ","type":"text"},{"text":"or an error.","type":"text"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/TaskAtom/phase":{"role":"symbol","abstract":[{"type":"text","text":"Converts the "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" that the original atom provides into "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" that","type":"text"},{"text":" ","type":"text"},{"text":"changes overtime.","type":"text"}],"title":"phase","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"phase","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier","text":"ModifiedAtom"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","text":"TaskPhaseModifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms8TaskAtomP7SuccessQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO","text":"Never"},{"text":">>","kind":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","url":"\/documentation\/atoms\/taskatom\/phase","type":"topic","kind":"symbol"},"https://github.com/ra1028/swiftui-atom-properties":{"titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"title":"GitHub Repo","type":"link","url":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/phase":{"url":"\/documentation\/atoms\/throwingtaskatom\/phase","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase","title":"phase","type":"topic","abstract":[{"text":"Converts the ","type":"text"},{"type":"codeVoice","code":"Task"},{"text":" that the original atom provides into ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that"},{"type":"text","text":" "},{"type":"text","text":"changes overtime."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"phase"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","text":"TaskPhaseModifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Success","preciseIdentifier":"s:5Atoms16ThrowingTaskAtomP7SuccessQa","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":">>","kind":"text"}]},"doc://Atoms/documentation/Atoms/ReleaseEffect":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReleaseEffect"}],"abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is no longer watched and released."}],"title":"ReleaseEffect","navigatorTitle":[{"text":"ReleaseEffect","kind":"identifier"}],"url":"\/documentation\/atoms\/releaseeffect","type":"topic"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","abstract":[{"type":"text","text":"An atom that provides an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"text":" value from the asynchronous throwable function.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncPhaseAtom","kind":"identifier"}],"title":"AsyncPhaseAtom"},"doc://Atoms/documentation/Atoms/AtomEffectBuilder":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomEffectBuilder","navigatorTitle":[{"text":"AtomEffectBuilder","kind":"identifier"}],"url":"\/documentation\/atoms\/atomeffectbuilder","abstract":[{"text":"A result builder for composing multiple atom effects into a single effect.","type":"text"}],"title":"AtomEffectBuilder","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomEffectBuilder","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"kind":"symbol","abstract":[{"text":"A context structure to read, set, and otherwise interact with atoms.","type":"text"}],"title":"AtomCurrentContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomCurrentContext"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","url":"\/documentation\/atoms\/atomcurrentcontext","role":"symbol","navigatorTitle":[{"text":"AtomCurrentContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/KeepAlive":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"KeepAlive","kind":"identifier"}],"title":"KeepAlive","url":"\/documentation\/atoms\/keepalive","navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"abstract":[{"text":"An attribute protocol to allow the value of an atom to continue being retained","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"even after they are no longer watched."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","kind":"symbol","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/AnimationModifier":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","type":"topic","abstract":[{"text":"A modifier that animates the view watching the atom when the value updates.","type":"text"}],"navigatorTitle":[{"text":"AnimationModifier","kind":"identifier"}],"url":"\/documentation\/atoms\/animationmodifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnimationModifier"}],"title":"AnimationModifier","role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms":{"type":"topic","url":"\/documentation\/atoms","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","title":"Atoms"},"doc://Atoms/documentation/Atoms/InitializeEffect":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","type":"topic","abstract":[{"text":"An atom effect that performs an arbitrary action after the atom is first used and initialized,","type":"text"},{"text":" ","type":"text"},{"text":"or once it is released and re-initialized.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"InitializeEffect"}],"url":"\/documentation\/atoms\/initializeeffect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InitializeEffect"}],"title":"InitializeEffect","role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","role":"symbol","title":"WatchState","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}],"url":"\/documentation\/atoms\/watchstate","type":"topic","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","navigatorTitle":[{"text":"WatchState","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/TaskAtom":{"title":"TaskAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskAtom"}],"url":"\/documentation\/atoms\/taskatom","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"TaskAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","url":"\/documentation\/atoms\/atom","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"title":"Atom"},"doc://Atoms/documentation/Atoms/ChangesModifier":{"navigatorTitle":[{"text":"ChangesModifier","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChangesModifier"}],"abstract":[{"type":"text","text":"A modifier that prevents the atom from updating its child views or atoms when"},{"text":" ","type":"text"},{"type":"text","text":"its new value is the same as its old value."}],"title":"ChangesModifier","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/changesmodifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier"},"doc://Atoms/documentation/Atoms/Atom/changes(of:)":{"url":"\/documentation\/atoms\/atom\/changes(of:)","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","title":"changes(of:)","type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"changes","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"> & "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"ChangesOfModifier","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17ChangesOfModifierV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>"}]},"doc://Atoms/documentation/Atoms/InitializingEffect":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/InitializingEffect","type":"topic","abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action before the atom is first used and initialized,"},{"type":"text","text":" "},{"type":"text","text":"or once it is released and re-initialized."}],"navigatorTitle":[{"kind":"identifier","text":"InitializingEffect"}],"url":"\/documentation\/atoms\/initializingeffect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializingEffect","kind":"identifier"}],"title":"InitializingEffect","role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms/Watch":{"abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"kind":"symbol","role":"symbol","title":"Watch","url":"\/documentation\/atoms\/watch","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Watch"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch"},"doc://Atoms/documentation/Atoms/ViewContext":{"kind":"symbol","role":"symbol","title":"ViewContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ViewContext","kind":"identifier"}],"url":"\/documentation\/atoms\/viewcontext","type":"topic","abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"type":"text","text":" "},{"text":"interact with atoms from views.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","navigatorTitle":[{"text":"ViewContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomModifier":{"url":"\/documentation\/atoms\/atommodifier","abstract":[{"text":"A modifier that you apply to an atom, producing a new value modified from the original value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomModifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomModifier"}],"title":"AtomModifier","role":"symbol"},"doc://Atoms/documentation/Atoms/ChangesOfModifier":{"type":"topic","navigatorTitle":[{"text":"ChangesOfModifier","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A modifier that derives a partial property with the specified key path from the original atom","type":"text"},{"text":" ","type":"text"},{"text":"and prevent it from updating its downstream when its new value is equivalent to old value.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChangesOfModifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","url":"\/documentation\/atoms\/changesofmodifier","kind":"symbol","title":"ChangesOfModifier"},"doc://Atoms/documentation/Atoms/AtomStore":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomStore"}],"title":"AtomStore","url":"\/documentation\/atoms\/atomstore","navigatorTitle":[{"text":"AtomStore","kind":"identifier"}],"abstract":[{"text":"An object that stores the state of atoms and its dependency graph.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","kind":"symbol","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/EmptyEffect":{"navigatorTitle":[{"kind":"identifier","text":"EmptyEffect"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","url":"\/documentation\/atoms\/emptyeffect","abstract":[{"type":"text","text":"An effect that doesn’t produce any effects."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyEffect"}],"deprecated":true,"title":"EmptyEffect","type":"topic","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/Snapshot":{"title":"Snapshot","url":"\/documentation\/atoms\/snapshot","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Snapshot"}],"navigatorTitle":[{"kind":"identifier","text":"Snapshot"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","kind":"symbol","type":"topic","abstract":[{"text":"A snapshot structure that captures specific set of values of atoms and their dependency graph.","type":"text"}]},"doc://Atoms/documentation/Atoms/Atom/changes":{"abstract":[{"type":"text","text":"Prevents the atom from updating its downstream when its new value is equivalent to old value."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Produced"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/atom\/changes","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"changes"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5Atoms15ChangesModifierV","kind":"typeIdentifier","text":"ChangesModifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","title":"changes"},"doc://Atoms/documentation/Atoms/Resettable":{"title":"Resettable","url":"\/documentation\/atoms\/resettable","abstract":[{"text":"An attribute protocol that allows an atom to have a custom reset behavior.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Resettable","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","role":"symbol","type":"topic","deprecated":true,"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Resettable"}]},"doc://Atoms/documentation/Atoms/Scoped":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Scoped","kind":"identifier"}],"title":"Scoped","url":"\/documentation\/atoms\/scoped","navigatorTitle":[{"kind":"identifier","text":"Scoped"}],"abstract":[{"type":"text","text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor"},{"text":" ","type":"text"},{"text":"of where it is used and prevents it from being shared out of scope.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","kind":"symbol","type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"title":"AsyncPhase","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhase"}],"url":"\/documentation\/atoms\/asyncphase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"type":"topic","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"role":"symbol","url":"\/documentation\/atoms\/atomtestcontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomTestContext","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"title":"AtomTestContext","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"},"doc://Atoms/documentation/Atoms/AtomViewContext":{"title":"AtomViewContext","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomViewContext"}],"navigatorTitle":[{"kind":"identifier","text":"AtomViewContext"}],"abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","url":"\/documentation\/atoms\/atomviewcontext","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomProducer":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","role":"symbol","title":"AtomProducer","type":"topic","url":"\/documentation\/atoms\/atomproducer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomProducer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomProducer"}],"abstract":[{"text":"Produces the value of an atom.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomWatchableContext":{"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomWatchableContext"}],"title":"AtomWatchableContext","url":"\/documentation\/atoms\/atomwatchablecontext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomWatchableContext","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","role":"symbol"},"doc://Atoms/documentation/Atoms/DefaultScopeID":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DefaultScopeID"}],"title":"DefaultScopeID","navigatorTitle":[{"kind":"identifier","text":"DefaultScopeID"}],"kind":"symbol","url":"\/documentation\/atoms\/defaultscopeid","type":"topic","abstract":[{"text":"A default scope ID to find a matching scope inbetween scoped atoms and ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","isActive":true,"type":"reference"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncAtom","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","title":"AsyncAtom","url":"\/documentation\/atoms\/asyncatom","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncAtom"}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"title":"PublisherAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublisherAtom"}],"url":"\/documentation\/atoms\/publisheratom","abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"code":"Publisher","type":"codeVoice"},{"text":" as an ","type":"text"},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true},{"text":" value.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"url":"\/documentation\/atoms\/watchstateobject","abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"title":"WatchStateObject"},"doc://Atoms/documentation/Atoms/UpdateEffect":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UpdateEffect","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","type":"topic","title":"UpdateEffect","url":"\/documentation\/atoms\/updateeffect","role":"symbol","navigatorTitle":[{"text":"UpdateEffect","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is updated."}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomRoot":{"abstract":[{"text":"A view that stores the state of atoms.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomRoot","kind":"identifier"}],"title":"AtomRoot","url":"\/documentation\/atoms\/atomroot","navigatorTitle":[{"kind":"identifier","text":"AtomRoot"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncAtomModifier":{"abstract":[{"text":"A modifier that you apply to an atom, producing a new refreshable value modified from the original value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","kind":"symbol","url":"\/documentation\/atoms\/asyncatommodifier","title":"AsyncAtomModifier","role":"symbol","navigatorTitle":[{"text":"AsyncAtomModifier","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncAtomModifier"}],"type":"topic"}}}