{"topicSections":[{"title":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"anchor":"Atoms"},{"title":"Modifiers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase"],"anchor":"Modifiers"},{"title":"Effects","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"],"anchor":"Effects"},{"anchor":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/Resettable"],"title":"Attributes"},{"title":"Property Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"],"anchor":"Property-Wrappers"},{"anchor":"Views","title":"Views","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"]},{"title":"Values","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"],"anchor":"Values"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"],"title":"Contexts","anchor":"Contexts"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"],"title":"Misc","anchor":"Misc"}],"hierarchy":{"paths":[[]]},"sections":[],"kind":"symbol","metadata":{"modules":[{"name":"Atoms"}],"externalID":"Atoms","symbolKind":"module","role":"collection","title":"Atoms","roleHeading":"Framework"},"abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Additional Resources","level":2,"anchor":"Additional-Resources"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","type":"reference"}]}]}],"type":"unorderedList"},{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"type":"text","text":"Atoms offer a simple but practical capability to tackle the complexity of modern apps. It effectively integrates the solution for both state management and dependency injection while allowing us to rapidly build a robust and testable application."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Building state by compositing atoms automatically optimizes rendering based on its dependency graph. This solves the problem of performance degradation caused by extra re-render which occurs before you realize.","type":"text"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms"]}],"references":{"doc://Atoms/documentation/Atoms/Resettable":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable","role":"symbol","type":"topic","title":"Resettable","kind":"symbol","abstract":[{"text":"An attribute protocol that allows an atom to have a custom reset behavior.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Resettable"}],"url":"\/documentation\/atoms\/resettable","navigatorTitle":[{"text":"Resettable","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomStore":{"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"AtomStore","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomStore","kind":"identifier"}],"title":"AtomStore","abstract":[{"type":"text","text":"An object that stores the state of atoms and its dependency graph."}],"url":"\/documentation\/atoms\/atomstore"},"doc://Atoms/documentation/Atoms/ChangesOfModifier":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChangesOfModifier"}],"navigatorTitle":[{"kind":"identifier","text":"ChangesOfModifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","abstract":[{"type":"text","text":"A modifier that derives a partial property with the specified key path from the original atom"},{"type":"text","text":" "},{"type":"text","text":"and prevent it from updating its downstream when its new value is equivalent to old value."}],"title":"ChangesOfModifier","role":"symbol","url":"\/documentation\/atoms\/changesofmodifier"},"doc://Atoms/documentation/Atoms/AtomScope":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","navigatorTitle":[{"text":"AtomScope","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/atomscope","abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomScope"}],"role":"symbol","title":"AtomScope"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncPhase"}],"type":"topic","url":"\/documentation\/atoms\/asyncphase","abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"asynchronous process has not yet been determined."}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"title":"AsyncPhase"},"doc://Atoms/documentation/Atoms/Snapshot":{"kind":"symbol","abstract":[{"text":"A snapshot structure that captures specific set of values of atoms and their dependency graph.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","navigatorTitle":[{"kind":"identifier","text":"Snapshot"}],"url":"\/documentation\/atoms\/snapshot","type":"topic","role":"symbol","title":"Snapshot","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Snapshot","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncAtom":{"title":"AsyncAtom","role":"symbol","navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"url":"\/documentation\/atoms\/asyncatom","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/phase":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase","url":"\/documentation\/atoms\/throwingtaskatom\/phase","abstract":[{"type":"text","text":"Converts the "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" that the original atom provides into "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that"},{"text":" ","type":"text"},{"type":"text","text":"changes overtime."}],"type":"topic","kind":"symbol","title":"phase","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"phase","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ModifiedAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"TaskPhaseModifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms16ThrowingTaskAtomP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":">>","kind":"text"}]},"doc://Atoms/documentation/Atoms/EmptyEffect":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmptyEffect"}],"navigatorTitle":[{"text":"EmptyEffect","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","abstract":[{"type":"text","text":"An effect that doesn’t produce any effects."}],"title":"EmptyEffect","role":"symbol","url":"\/documentation\/atoms\/emptyeffect"},"doc://Atoms/documentation/Atoms/Suspense":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Suspense","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/atoms\/suspense","navigatorTitle":[{"kind":"identifier","text":"Suspense"}],"title":"Suspense","abstract":[{"text":"A view that lets the content wait for the given task to provide a resulting value","type":"text"},{"text":" ","type":"text"},{"text":"or an error.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense"},"doc://Atoms/documentation/Atoms/Atom/animation(_:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"animation"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9AnimationV","text":"Animation"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"AnimationModifier","preciseIdentifier":"s:5Atoms17AnimationModifierV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":">>"}],"title":"animation(_:)","url":"\/documentation\/atoms\/atom\/animation(_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Animates the view watching the atom when the value updates."}]},"doc://Atoms/documentation/Atoms/InitializeEffect":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is first used and initialized,"},{"type":"text","text":" "},{"type":"text","text":"or once it is released and re-initialized again."}],"title":"InitializeEffect","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InitializeEffect"}],"role":"symbol","navigatorTitle":[{"text":"InitializeEffect","kind":"identifier"}],"url":"\/documentation\/atoms\/initializeeffect","type":"topic","kind":"symbol"},"doc://Atoms/documentation/Atoms/MergedEffect":{"kind":"symbol","url":"\/documentation\/atoms\/mergedeffect","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergedEffect"}],"navigatorTitle":[{"kind":"identifier","text":"MergedEffect"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","title":"MergedEffect","role":"symbol","abstract":[{"text":"An atom effect that merges multiple atom effects into one.","type":"text"}]},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"navigatorTitle":[{"text":"AsyncPhaseAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","url":"\/documentation\/atoms\/asyncphaseatom","abstract":[{"text":"An atom that provides an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" value from the asynchronous throwable function.","type":"text"}],"type":"topic","kind":"symbol","title":"AsyncPhaseAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncPhaseAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomEffect":{"type":"topic","url":"\/documentation\/atoms\/atomeffect","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomEffect"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","title":"AtomEffect","abstract":[{"type":"text","text":"Declares side effects that are synchronized with the atom’s lifecycle."}],"navigatorTitle":[{"text":"AtomEffect","kind":"identifier"}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AnimationModifier":{"type":"topic","url":"\/documentation\/atoms\/animationmodifier","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnimationModifier","kind":"identifier"}],"navigatorTitle":[{"text":"AnimationModifier","kind":"identifier"}],"abstract":[{"type":"text","text":"A modifier that animates the view watching the atom when the value updates."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","title":"AnimationModifier","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomRefreshProducer":{"title":"AtomRefreshProducer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomRefreshProducer"}],"abstract":[{"text":"Produces the refreshed value of an atom.","type":"text"}],"url":"\/documentation\/atoms\/atomrefreshproducer","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomRefreshProducer","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ValueAtom":{"url":"\/documentation\/atoms\/valueatom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"}],"kind":"symbol","type":"topic","title":"ValueAtom","navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","role":"symbol","abstract":[{"text":"An atom type that provides a read-only value.","type":"text"}]},"doc://Atoms/documentation/Atoms/TaskAtom":{"role":"symbol","type":"topic","url":"\/documentation\/atoms\/taskatom","kind":"symbol","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"title":"TaskAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskAtom"}]},"doc://Atoms/documentation/Atoms/DefaultScopeID":{"navigatorTitle":[{"text":"DefaultScopeID","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DefaultScopeID"}],"kind":"symbol","type":"topic","url":"\/documentation\/atoms\/defaultscopeid","title":"DefaultScopeID","abstract":[{"type":"text","text":"A default scope ID to find a matching scope inbetween scoped atoms and "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","isActive":true},{"type":"text","text":"."}]},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"url":"\/documentation\/atoms\/throwingtaskatom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ThrowingTaskAtom"}],"kind":"symbol","type":"topic","title":"ThrowingTaskAtom","navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","role":"symbol","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous, throwing function.","type":"text"}]},"doc://Atoms/documentation/Atoms/TaskPhaseModifier":{"url":"\/documentation\/atoms\/taskphasemodifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TaskPhaseModifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskPhaseModifier"}],"type":"topic","kind":"symbol","title":"TaskPhaseModifier","abstract":[{"text":"An atom that provides a sequential value of the base atom as an enum","type":"text"},{"type":"text","text":" "},{"type":"text","text":"representation "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" that changes overtime."}]},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"role":"symbol","title":"ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModifiedAtom"}],"navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","type":"topic"},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"StateAtom","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/stateatom","abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}]},"doc://Atoms/documentation/Atoms/WatchState":{"title":"WatchState","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WatchState"}],"type":"topic","url":"\/documentation\/atoms\/watchstate","abstract":[{"text":"A property wrapper type that can watch and read-write access to the given atom conforms","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","role":"symbol","navigatorTitle":[{"text":"WatchState","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"role":"symbol","type":"topic","url":"\/documentation\/atoms\/publisheratom","kind":"symbol","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"title":"PublisherAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomContext":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","title":"AtomContext","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomContext"}],"url":"\/documentation\/atoms\/atomcontext","abstract":[{"type":"text","text":"A context structure to read, write, and otherwise interact with atoms."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomContext"}]},"doc://Atoms/documentation/Atoms/AtomViewContext":{"url":"\/documentation\/atoms\/atomviewcontext","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomViewContext","kind":"identifier"}],"abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AtomViewContext"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","title":"AtomViewContext"},"doc://Atoms/documentation/Atoms/Atom/changes(of:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"changes"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":"> & ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ModifiedAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChangesOfModifier","preciseIdentifier":"s:5Atoms17ChangesOfModifierV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">>"}],"url":"\/documentation\/atoms\/atom\/changes(of:)","kind":"symbol","title":"changes(of:)","role":"symbol","abstract":[]},"doc://Atoms/documentation/Atoms/AtomTestContext":{"url":"\/documentation\/atoms\/atomtestcontext","kind":"symbol","title":"AtomTestContext","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","navigatorTitle":[{"text":"AtomTestContext","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomTestContext"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}]},"doc://Atoms/documentation/Atoms":{"kind":"symbol","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","url":"\/documentation\/atoms","type":"topic","role":"collection","title":"Atoms"},"doc://Atoms/documentation/Atoms/AtomProducer":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomProducer","kind":"identifier"}],"navigatorTitle":[{"text":"AtomProducer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Produces the value of an atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","title":"AtomProducer","role":"symbol","url":"\/documentation\/atoms\/atomproducer"},"doc://Atoms/documentation/Atoms/ViewContext":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewContext"}],"abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"title":"ViewContext","role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/viewcontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","navigatorTitle":[{"text":"ViewContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","title":"AtomCurrentContext","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomCurrentContext","kind":"identifier"}],"url":"\/documentation\/atoms\/atomcurrentcontext","abstract":[{"text":"A context structure to read, set, and otherwise interact with atoms.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AtomCurrentContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom/changes":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","url":"\/documentation\/atoms\/atom\/changes","abstract":[{"type":"text","text":"Prevents the atom from updating its downstream when its new value is equivalent to old value."}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Produced"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","kind":"symbol","title":"changes","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"changes","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ModifiedAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChangesModifier","preciseIdentifier":"s:5Atoms15ChangesModifierV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"},{"kind":"text","text":">>"}]},"doc://Atoms/documentation/Atoms/TaskAtom/phase":{"kind":"symbol","url":"\/documentation\/atoms\/taskatom\/phase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","role":"symbol","title":"phase","type":"topic","abstract":[{"type":"text","text":"Converts the "},{"type":"codeVoice","code":"Task"},{"text":" that the original atom provides into ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"text":" that","type":"text"},{"type":"text","text":" "},{"text":"changes overtime.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"phase"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier","text":"ModifiedAtom"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"TaskPhaseModifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Success","preciseIdentifier":"s:5Atoms8TaskAtomP7SuccessQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5NeverO","text":"Never","kind":"typeIdentifier"},{"kind":"text","text":">>"}]},"doc://Atoms/documentation/Atoms/AsyncAtomModifier":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncAtomModifier","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncAtomModifier","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new refreshable value modified from the original value."}],"title":"AsyncAtomModifier","role":"symbol","url":"\/documentation\/atoms\/asyncatommodifier"},"doc://Atoms/documentation/Atoms/ChangesModifier":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ChangesModifier","kind":"identifier"}],"navigatorTitle":[{"text":"ChangesModifier","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A modifier that prevents the atom from updating its child views or atoms when"},{"type":"text","text":" "},{"type":"text","text":"its new value is the same as its old value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","title":"ChangesModifier","role":"symbol","url":"\/documentation\/atoms\/changesmodifier"},"doc://Atoms/documentation/Atoms/AtomWatchableContext":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AtomWatchableContext","kind":"identifier"}],"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"url":"\/documentation\/atoms\/atomwatchablecontext","kind":"symbol","navigatorTitle":[{"text":"AtomWatchableContext","kind":"identifier"}],"type":"topic","title":"AtomWatchableContext","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomRoot":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomRoot","kind":"identifier"}],"abstract":[{"text":"A view that stores the state of atoms.","type":"text"}],"title":"AtomRoot","role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/atomroot","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","navigatorTitle":[{"text":"AtomRoot","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/WatchStateObject":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WatchStateObject","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true},{"text":".","type":"text"}],"title":"WatchStateObject","role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/watchstateobject","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTransactionContext"}],"role":"symbol","title":"AtomTransactionContext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"kind":"symbol","url":"\/documentation\/atoms\/atomtransactioncontext","navigatorTitle":[{"kind":"identifier","text":"AtomTransactionContext"}],"type":"topic"},"doc://Atoms/documentation/Atoms/ReleaseEffect":{"abstract":[{"text":"An atom effect that performs an arbitrary action when the atom is no longer watched and released.","type":"text"}],"url":"\/documentation\/atoms\/releaseeffect","title":"ReleaseEffect","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReleaseEffect"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"ReleaseEffect","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"title":"ObservableObjectAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/observableobjectatom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}]},"doc://Atoms/documentation/Atoms/Refreshable":{"title":"Refreshable","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","url":"\/documentation\/atoms\/refreshable","role":"symbol","abstract":[{"text":"An attribute protocol that allows an atom to have a custom refresh behavior.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Refreshable"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Refreshable","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Scoped":{"navigatorTitle":[{"kind":"identifier","text":"Scoped"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Scoped","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/atoms\/scoped","title":"Scoped","abstract":[{"type":"text","text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor"},{"text":" ","type":"text"},{"text":"of where it is used and prevents it from being shared out of scope.","type":"text"}]},"doc://Atoms/documentation/Atoms/Watch":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Watch"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"title":"Watch","role":"symbol","kind":"symbol","url":"\/documentation\/atoms\/watch","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","navigatorTitle":[{"text":"Watch","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom":{"title":"Atom","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"navigatorTitle":[{"text":"Atom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","url":"\/documentation\/atoms\/atom"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"abstract":[{"text":"An atom type that provides asynchronous, sequential elements of the given ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}],"title":"AsyncSequenceAtom"},"doc://Atoms/documentation/Atoms/KeepAlive":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","role":"symbol","type":"topic","title":"KeepAlive","kind":"symbol","abstract":[{"text":"An attribute protocol to allow the value of an atom to continue being retained","type":"text"},{"type":"text","text":" "},{"text":"even after they are no longer watched.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"KeepAlive","kind":"identifier"}],"url":"\/documentation\/atoms\/keepalive","navigatorTitle":[{"kind":"identifier","text":"KeepAlive"}]},"https://github.com/ra1028/swiftui-atom-properties":{"type":"link","titleInlineContent":[{"text":"GitHub Repo","type":"text"}],"identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","url":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","title":"GitHub Repo"},"doc://Atoms/documentation/Atoms/UpdateEffect":{"abstract":[{"text":"An atom effect that performs an arbitrary action when the atom is updated.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UpdateEffect","kind":"identifier"}],"title":"UpdateEffect","url":"\/documentation\/atoms\/updateeffect","navigatorTitle":[{"kind":"identifier","text":"UpdateEffect"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","kind":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/AtomModifier":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomModifier"}],"navigatorTitle":[{"text":"AtomModifier","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new value modified from the original value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","title":"AtomModifier","role":"symbol","url":"\/documentation\/atoms\/atommodifier"}}}