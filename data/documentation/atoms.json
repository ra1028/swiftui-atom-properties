{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms","interfaceLanguage":"swift"},"abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms"]}],"topicSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"title":"Atoms","anchor":"Atoms"},{"anchor":"Modifiers","title":"Modifiers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase"]},{"title":"Effects","anchor":"Effects","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"]},{"anchor":"Attributes","title":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/Resettable"]},{"title":"Property Wrappers","anchor":"Property-Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"]},{"title":"Views","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"],"anchor":"Views"},{"title":"Values","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"],"anchor":"Values"},{"anchor":"Contexts","title":"Contexts","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"]},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"],"anchor":"Misc","title":"Misc"}],"hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"text":"Additional Resources","type":"heading","level":2,"anchor":"Additional-Resources"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"}]}]}]},{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Atoms offer a simple but practical capability to tackle the complexity of modern apps. It effectively integrates the solution for both state management and dependency injection while allowing us to rapidly build a robust and testable application."}]},{"type":"paragraph","inlineContent":[{"text":"Building state by compositing atoms automatically optimizes rendering based on its dependency graph. This solves the problem of performance degradation caused by extra re-render which occurs before you realize.","type":"text"}]}]}],"metadata":{"symbolKind":"module","roleHeading":"Framework","modules":[{"name":"Atoms"}],"role":"collection","title":"Atoms","externalID":"Atoms"},"references":{"doc://Atoms/documentation/Atoms/Atom/animation(_:)":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","role":"symbol","abstract":[{"type":"text","text":"Animates the view watching the atom when the value updates."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"animation","kind":"identifier"},{"kind":"text","text":"("},{"text":"Animation","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"kind":"text","text":"?) -> "},{"text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5Atoms17AnimationModifierV","text":"AnimationModifier","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"},{"kind":"text","text":">>"}],"kind":"symbol","url":"\/documentation\/atoms\/atom\/animation(_:)","title":"animation(_:)"},"doc://Atoms/documentation/Atoms/TaskAtom/phase":{"kind":"symbol","url":"\/documentation\/atoms\/taskatom\/phase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","title":"phase","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"phase","kind":"identifier"},{"kind":"text","text":": "},{"text":"ModifiedAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","text":"TaskPhaseModifier","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms8TaskAtomP7SuccessQa","text":"Success"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO","text":"Never"},{"text":">>","kind":"text"}],"abstract":[{"type":"text","text":"Converts the "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" that the original atom provides into "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that"},{"text":" ","type":"text"},{"text":"changes overtime.","type":"text"}]},"doc://Atoms/documentation/Atoms/Atom":{"kind":"symbol","title":"Atom","abstract":[{"text":"Declares that a type can produce a value that can be accessed from everywhere.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","url":"\/documentation\/atoms\/atom","navigatorTitle":[{"text":"Atom","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"type":"topic"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"kind":"symbol","url":"\/documentation\/atoms\/publisheratom","title":"PublisherAtom","navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"code":"Publisher","type":"codeVoice"},{"type":"text","text":" as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublisherAtom"}]},"doc://Atoms/documentation/Atoms/Watch":{"navigatorTitle":[{"kind":"identifier","text":"Watch"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","kind":"symbol","abstract":[{"text":"A property wrapper type that can watch and read-only access to the given atom.","type":"text"}],"role":"symbol","url":"\/documentation\/atoms\/watch","type":"topic","title":"Watch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Watch"}]},"doc://Atoms/documentation/Atoms/StateAtom":{"abstract":[{"text":"An atom type that provides a read-write state value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"title":"StateAtom","url":"\/documentation\/atoms\/stateatom","type":"topic","navigatorTitle":[{"text":"StateAtom","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms/Atom/changes":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","role":"symbol","abstract":[{"text":"Prevents the atom from updating its downstream when its new value is equivalent to old value.","type":"text"}],"type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Produced","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"changes","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms15ChangesModifierV","text":"ChangesModifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Produced","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"text":">>","kind":"text"}],"kind":"symbol","url":"\/documentation\/atoms\/atom\/changes","title":"changes"},"doc://Atoms/documentation/Atoms/Snapshot":{"title":"Snapshot","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","url":"\/documentation\/atoms\/snapshot","abstract":[{"type":"text","text":"A snapshot structure that captures specific set of values of atoms and their dependency graph."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Snapshot"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Snapshot"}]},"doc://Atoms/documentation/Atoms/ViewContext":{"navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"type":"topic","url":"\/documentation\/atoms\/viewcontext","abstract":[{"type":"text","text":"A property wrapper type that provides a context structure to read, watch, and otherwise"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewContext"}],"role":"symbol","title":"ViewContext","kind":"symbol"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"kind":"symbol","url":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"abstract":[{"text":"An atom type that instantiates an observable object.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableObjectAtom"}]},"doc://Atoms/documentation/Atoms/AtomStore":{"url":"\/documentation\/atoms\/atomstore","abstract":[{"text":"An object that stores the state of atoms and its dependency graph.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomStore"}],"kind":"symbol","title":"AtomStore","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomStore"}]},"doc://Atoms/documentation/Atoms/AtomWatchableContext":{"navigatorTitle":[{"text":"AtomWatchableContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/atomwatchablecontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomWatchableContext","kind":"identifier"}],"role":"symbol","title":"AtomWatchableContext","kind":"symbol"},"doc://Atoms/documentation/Atoms/Resettable":{"role":"symbol","url":"\/documentation\/atoms\/resettable","kind":"symbol","title":"Resettable","type":"topic","abstract":[{"type":"text","text":"An attribute protocol that allows an atom to have a custom reset behavior."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Resettable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Resettable"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable"},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"kind":"symbol","abstract":[{"text":"A context structure to read, set, and otherwise interact with atoms.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/atoms\/atomcurrentcontext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomCurrentContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","title":"AtomCurrentContext","navigatorTitle":[{"kind":"identifier","text":"AtomCurrentContext"}]},"doc://Atoms/documentation/Atoms/TaskPhaseModifier":{"role":"symbol","kind":"symbol","abstract":[{"text":"An atom that provides a sequential value of the base atom as an enum","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"representation "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that changes overtime."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","url":"\/documentation\/atoms\/taskphasemodifier","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskPhaseModifier","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TaskPhaseModifier"}],"title":"TaskPhaseModifier","type":"topic"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"url":"\/documentation\/atoms\/watchstateobject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","kind":"symbol","title":"WatchStateObject"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"kind":"symbol","url":"\/documentation\/atoms\/asyncatom","title":"AsyncAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncAtom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a refreshable value that can be accessed from everywhere."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/DefaultScopeID":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DefaultScopeID"}],"navigatorTitle":[{"kind":"identifier","text":"DefaultScopeID"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID","title":"DefaultScopeID","role":"symbol","abstract":[{"text":"A default scope ID to find a matching scope inbetween scoped atoms and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope"},{"type":"text","text":"."}],"url":"\/documentation\/atoms\/defaultscopeid"},"https://github.com/ra1028/swiftui-atom-properties":{"url":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"title":"GitHub Repo","type":"link","identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"},"doc://Atoms/documentation/Atoms/Suspense":{"abstract":[{"type":"text","text":"A view that lets the content wait for the given task to provide a resulting value"},{"text":" ","type":"text"},{"text":"or an error.","type":"text"}],"url":"\/documentation\/atoms\/suspense","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Suspense"}],"title":"Suspense","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Suspense"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomContext":{"navigatorTitle":[{"kind":"identifier","text":"AtomContext"}],"type":"topic","url":"\/documentation\/atoms\/atomcontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","abstract":[{"text":"A context structure to read, write, and otherwise interact with atoms.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomContext"}],"role":"symbol","title":"AtomContext","kind":"symbol"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/phase":{"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase","type":"topic","title":"phase","url":"\/documentation\/atoms\/throwingtaskatom\/phase","abstract":[{"text":"Converts the ","type":"text"},{"type":"codeVoice","code":"Task"},{"type":"text","text":" that the original atom provides into "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"text":" that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"changes overtime."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"phase"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"TaskPhaseModifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms16ThrowingTaskAtomP7SuccessQa","text":"Success","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">>"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/ValueAtom":{"kind":"symbol","url":"\/documentation\/atoms\/valueatom","title":"ValueAtom","navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ValueAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ReleaseEffect":{"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","title":"ReleaseEffect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReleaseEffect","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ReleaseEffect"}],"abstract":[{"text":"An atom effect that performs an arbitrary action when the atom is no longer watched and released.","type":"text"}],"url":"\/documentation\/atoms\/releaseeffect"},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"title":"ModifiedAtom","role":"symbol","abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"navigatorTitle":[{"text":"ModifiedAtom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModifiedAtom"}],"type":"topic","url":"\/documentation\/atoms\/modifiedatom"},"doc://Atoms/documentation/Atoms/AtomViewContext":{"abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"title":"AtomViewContext","url":"\/documentation\/atoms\/atomviewcontext","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomViewContext","kind":"identifier"}],"navigatorTitle":[{"text":"AtomViewContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/EmptyEffect":{"abstract":[{"text":"An effect that doesn’t produce any effects.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"EmptyEffect","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","kind":"symbol","url":"\/documentation\/atoms\/emptyeffect","title":"EmptyEffect","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyEffect"}],"type":"topic"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"kind":"symbol","url":"\/documentation\/atoms\/asyncsequenceatom","title":"AsyncSequenceAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","isActive":true,"type":"reference"},{"type":"text","text":" value."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncSequenceAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AsyncAtomModifier":{"url":"\/documentation\/atoms\/asyncatommodifier","abstract":[{"text":"A modifier that you apply to an atom, producing a new refreshable value modified from the original value.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncAtomModifier"}],"kind":"symbol","title":"AsyncAtomModifier","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncAtomModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AnimationModifier":{"abstract":[{"text":"A modifier that animates the view watching the atom when the value updates.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnimationModifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","title":"AnimationModifier","url":"\/documentation\/atoms\/animationmodifier","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnimationModifier","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/WatchState":{"role":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference"},{"text":".","type":"text"}],"title":"WatchState","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"WatchState","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"type":"topic","url":"\/documentation\/atoms\/watchstate"},"doc://Atoms/documentation/Atoms/InitializeEffect":{"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","title":"InitializeEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"InitializeEffect","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InitializeEffect"}],"abstract":[{"text":"An atom effect that performs an arbitrary action when the atom is first used and initialized,","type":"text"},{"text":" ","type":"text"},{"text":"or once it is released and re-initialized again.","type":"text"}],"url":"\/documentation\/atoms\/initializeeffect"},"doc://Atoms/documentation/Atoms/AtomRoot":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","title":"AtomRoot","abstract":[{"type":"text","text":"A view that stores the state of atoms."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomRoot","kind":"identifier"}],"url":"\/documentation\/atoms\/atomroot","navigatorTitle":[{"kind":"identifier","text":"AtomRoot"}]},"doc://Atoms/documentation/Atoms/AsyncPhase":{"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","title":"AsyncPhase","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/asyncphase","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AsyncPhase","kind":"identifier"}],"abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/UpdateEffect":{"title":"UpdateEffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/updateeffect","abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is updated."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UpdateEffect","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UpdateEffect"}]},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"kind":"symbol","url":"\/documentation\/atoms\/asyncphaseatom","title":"AsyncPhaseAtom","navigatorTitle":[{"kind":"identifier","text":"AsyncPhaseAtom"}],"abstract":[{"text":"An atom that provides an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value from the asynchronous throwable function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AsyncPhaseAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/KeepAlive":{"title":"KeepAlive","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeepAlive","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"KeepAlive"}],"abstract":[{"type":"text","text":"An attribute protocol to allow the value of an atom to continue being retained"},{"text":" ","type":"text"},{"text":"even after they are no longer watched.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","url":"\/documentation\/atoms\/keepalive","kind":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/TaskAtom":{"kind":"symbol","url":"\/documentation\/atoms\/taskatom","title":"TaskAtom","navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous function."}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Refreshable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Refreshable"}],"role":"symbol","navigatorTitle":[{"text":"Refreshable","kind":"identifier"}],"url":"\/documentation\/atoms\/refreshable","abstract":[{"text":"An attribute protocol that allows an atom to have a custom refresh behavior.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","type":"topic","title":"Refreshable"},"doc://Atoms/documentation/Atoms/AtomScope":{"abstract":[{"text":"A view to override or monitor atoms in scope.","type":"text"}],"url":"\/documentation\/atoms\/atomscope","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomScope","kind":"identifier"}],"title":"AtomScope","type":"topic","navigatorTitle":[{"text":"AtomScope","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/Scoped":{"role":"symbol","url":"\/documentation\/atoms\/scoped","kind":"symbol","title":"Scoped","abstract":[{"type":"text","text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor"},{"text":" ","type":"text"},{"text":"of where it is used and prevents it from being shared out of scope.","type":"text"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scoped"}],"navigatorTitle":[{"text":"Scoped","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped"},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"navigatorTitle":[{"kind":"identifier","text":"AtomTransactionContext"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/atomtransactioncontext","type":"topic","title":"AtomTransactionContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTransactionContext"}]},"doc://Atoms/documentation/Atoms":{"role":"collection","url":"\/documentation\/atoms","abstract":[{"text":"Atomic approach state management and dependency injection for SwiftUI","type":"text"}],"title":"Atoms","type":"topic","kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms"},"doc://Atoms/documentation/Atoms/AtomRefreshProducer":{"title":"AtomRefreshProducer","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer","kind":"symbol","url":"\/documentation\/atoms\/atomrefreshproducer","type":"topic","abstract":[{"text":"Produces the refreshed value of an atom.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomRefreshProducer","kind":"identifier"}],"navigatorTitle":[{"text":"AtomRefreshProducer","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Atom/changes(of:)":{"kind":"symbol","url":"\/documentation\/atoms\/atom\/changes(of:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","title":"changes(of:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"changes"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":"> & ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"ChangesOfModifier","preciseIdentifier":"s:5Atoms17ChangesOfModifierV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"abstract":[]},"doc://Atoms/documentation/Atoms/MergedEffect":{"title":"MergedEffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/mergedeffect","abstract":[{"text":"An atom effect that merges multiple atom effects into one.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergedEffect"}],"navigatorTitle":[{"text":"MergedEffect","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/ChangesModifier":{"navigatorTitle":[{"text":"ChangesModifier","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","url":"\/documentation\/atoms\/changesmodifier","role":"symbol","title":"ChangesModifier","abstract":[{"text":"A modifier that prevents the atom from updating its child views or atoms when","type":"text"},{"type":"text","text":" "},{"type":"text","text":"its new value is the same as its old value."}],"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChangesModifier"}]},"doc://Atoms/documentation/Atoms/AtomTestContext":{"abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomTestContext","kind":"identifier"}],"url":"\/documentation\/atoms\/atomtestcontext","navigatorTitle":[{"text":"AtomTestContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","kind":"symbol","title":"AtomTestContext"},"doc://Atoms/documentation/Atoms/AtomProducer":{"type":"topic","title":"AtomProducer","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","abstract":[{"type":"text","text":"Produces the value of an atom."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomProducer","kind":"identifier"}],"navigatorTitle":[{"text":"AtomProducer","kind":"identifier"}],"url":"\/documentation\/atoms\/atomproducer","kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/ChangesOfModifier":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChangesOfModifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChangesOfModifier"}],"url":"\/documentation\/atoms\/changesofmodifier","abstract":[{"text":"A modifier that derives a partial property with the specified key path from the original atom","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and prevent it from updating its downstream when its new value is equivalent to old value."}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","type":"topic","title":"ChangesOfModifier"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"type":"topic","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"code":"Task","type":"codeVoice"},{"type":"text","text":" from the given asynchronous, throwing function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/throwingtaskatom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThrowingTaskAtom"}],"navigatorTitle":[{"text":"ThrowingTaskAtom","kind":"identifier"}],"title":"ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/AtomModifier":{"abstract":[{"text":"A modifier that you apply to an atom, producing a new value modified from the original value.","type":"text"}],"navigatorTitle":[{"text":"AtomModifier","kind":"identifier"}],"kind":"symbol","type":"topic","title":"AtomModifier","url":"\/documentation\/atoms\/atommodifier","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomModifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier"},"doc://Atoms/documentation/Atoms/AtomEffect":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomEffect"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomEffect"}],"abstract":[{"type":"text","text":"Declares side effects that are synchronized with the atom’s lifecycle."}],"url":"\/documentation\/atoms\/atomeffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","type":"topic","title":"AtomEffect","role":"symbol"}}}