{"hierarchy":{"paths":[[]]},"metadata":{"externalID":"Atoms","role":"collection","modules":[{"name":"Atoms"}],"roleHeading":"Framework","symbolKind":"module","title":"Atoms"},"abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"topicSections":[{"anchor":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom"],"title":"Atoms"},{"anchor":"Modifiers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase"],"title":"Modifiers"},{"anchor":"Effects","title":"Effects","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect"]},{"anchor":"Attributes","title":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Scoped","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","doc:\/\/Atoms\/documentation\/Atoms\/Resettable"]},{"title":"Property Wrappers","anchor":"Property-Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"]},{"title":"Views","anchor":"Views","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"]},{"title":"Values","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID"],"anchor":"Values"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext"],"anchor":"Contexts","title":"Contexts"},{"anchor":"Misc","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer"],"title":"Misc"}],"primaryContentSections":[{"content":[{"anchor":"Additional-Resources","type":"heading","text":"Additional Resources","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","isActive":true}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Atoms offer a simple but practical capability to tackle the complexity of modern apps. It effectively integrates the solution for both state management and dependency injection while allowing us to rapidly build a robust and testable application."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Building state by compositing atoms automatically optimizes rendering based on its dependency graph. This solves the problem of performance degradation caused by extra re-render which occurs before you realize."}]}],"kind":"content"}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atoms"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Atoms\/documentation\/Atoms"},"references":{"doc://Atoms/documentation/Atoms/AtomWatchableContext":{"navigatorTitle":[{"text":"AtomWatchableContext","kind":"identifier"}],"url":"\/documentation\/atoms\/atomwatchablecontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AtomWatchableContext","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"title":"AtomWatchableContext","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext"},"doc://Atoms/documentation/Atoms/ValueAtom":{"type":"topic","url":"\/documentation\/atoms\/valueatom","abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"kind":"symbol","role":"symbol","title":"ValueAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ValueAtom","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","navigatorTitle":[{"text":"ValueAtom","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/Resettable":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Resettable"}],"abstract":[{"text":"An attribute protocol that allows an atom to have a custom reset behavior.","type":"text"}],"url":"\/documentation\/atoms\/resettable","type":"topic","title":"Resettable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Resettable","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Resettable"},"doc://Atoms/documentation/Atoms/ChangesModifier":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesModifier","url":"\/documentation\/atoms\/changesmodifier","role":"symbol","abstract":[{"text":"A modifier that prevents the atom from updating its child views or atoms when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"its new value is the same as its old value."}],"type":"topic","kind":"symbol","title":"ChangesModifier","navigatorTitle":[{"kind":"identifier","text":"ChangesModifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ChangesModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/DefaultScopeID":{"title":"DefaultScopeID","type":"topic","abstract":[{"type":"text","text":"A default scope ID to find a matching scope inbetween scoped atoms and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"DefaultScopeID","kind":"identifier"}],"url":"\/documentation\/atoms\/defaultscopeid","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DefaultScopeID","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DefaultScopeID","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/TaskPhaseModifier":{"abstract":[{"type":"text","text":"An atom that provides a sequential value of the base atom as an enum"},{"text":" ","type":"text"},{"type":"text","text":"representation "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" that changes overtime."}],"type":"topic","title":"TaskPhaseModifier","navigatorTitle":[{"text":"TaskPhaseModifier","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskPhaseModifier"}],"role":"symbol","url":"\/documentation\/atoms\/taskphasemodifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifier","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomViewContext":{"title":"AtomViewContext","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomViewContext"}],"navigatorTitle":[{"text":"AtomViewContext","kind":"identifier"}],"url":"\/documentation\/atoms\/atomviewcontext","type":"topic","abstract":[{"text":"A context structure to read, watch, and otherwise interact with atoms.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext"},"doc://Atoms/documentation/Atoms":{"title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"url":"\/documentation\/atoms","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms","role":"collection","kind":"symbol"},"doc://Atoms/documentation/Atoms/AtomStore":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomStore"}],"abstract":[{"text":"An object that stores the state of atoms and its dependency graph.","type":"text"}],"navigatorTitle":[{"text":"AtomStore","kind":"identifier"}],"url":"\/documentation\/atoms\/atomstore","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","type":"topic","role":"symbol","title":"AtomStore","kind":"symbol"},"doc://Atoms/documentation/Atoms/Suspense":{"url":"\/documentation\/atoms\/suspense","role":"symbol","abstract":[{"text":"A view that lets the content wait for the given task to provide a resulting value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or an error."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Suspense","kind":"identifier"}],"title":"Suspense","navigatorTitle":[{"text":"Suspense","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","kind":"symbol"},"doc://Atoms/documentation/Atoms/Atom/changes(of:)":{"title":"changes(of:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"changes"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":"> & ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:5Atoms12ModifiedAtomV","text":"ModifiedAtom","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChangesOfModifier","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms17ChangesOfModifierV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes(of:)","url":"\/documentation\/atoms\/atom\/changes(of:)","abstract":[]},"doc://Atoms/documentation/Atoms/AtomEffect":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomEffect","navigatorTitle":[{"text":"AtomEffect","kind":"identifier"}],"url":"\/documentation\/atoms\/atomeffect","type":"topic","kind":"symbol","title":"AtomEffect","role":"symbol","abstract":[{"type":"text","text":"Declares side effects that are synchronized with the atom’s lifecycle."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomEffect"}]},"doc://Atoms/documentation/Atoms/AtomModifier":{"type":"topic","url":"\/documentation\/atoms\/atommodifier","abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new value modified from the original value."}],"kind":"symbol","role":"symbol","title":"AtomModifier","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomModifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomModifier","navigatorTitle":[{"kind":"identifier","text":"AtomModifier"}]},"doc://Atoms/documentation/Atoms/ModifiedAtom":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ModifiedAtom","kind":"identifier"}],"kind":"symbol","title":"ModifiedAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ModifiedAtom","url":"\/documentation\/atoms\/modifiedatom","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ModifiedAtom"}],"abstract":[{"type":"text","text":"An atom type that applies a modifier to an atom."}],"role":"symbol"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"title":"AsyncSequenceAtom","abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" ","type":"text"},{"type":"text","text":"as an "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" value."}],"url":"\/documentation\/atoms\/asyncsequenceatom","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceAtom"}],"navigatorTitle":[{"text":"AsyncSequenceAtom","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Atoms/documentation/Atoms/ChangesOfModifier":{"abstract":[{"text":"A modifier that derives a partial property with the specified key path from the original atom","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and prevent it from updating its downstream when its new value is equivalent to old value."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChangesOfModifier"}],"navigatorTitle":[{"kind":"identifier","text":"ChangesOfModifier"}],"kind":"symbol","url":"\/documentation\/atoms\/changesofmodifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ChangesOfModifier","title":"ChangesOfModifier","type":"topic"},"doc://Atoms/documentation/Atoms/AsyncPhaseAtom":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhaseAtom"}],"kind":"symbol","title":"AsyncPhaseAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhaseAtom","url":"\/documentation\/atoms\/asyncphaseatom","type":"topic","navigatorTitle":[{"text":"AsyncPhaseAtom","kind":"identifier"}],"abstract":[{"text":"An atom that provides an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value from the asynchronous throwable function."}],"role":"symbol"},"doc://Atoms/documentation/Atoms/InitializeEffect":{"navigatorTitle":[{"text":"InitializeEffect","kind":"identifier"}],"title":"InitializeEffect","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/InitializeEffect","abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is first used and initialized,"},{"type":"text","text":" "},{"type":"text","text":"or once it is released and re-initialized again."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InitializeEffect"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/initializeeffect"},"doc://Atoms/documentation/Atoms/AtomProducer":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomProducer","url":"\/documentation\/atoms\/atomproducer","role":"symbol","abstract":[{"type":"text","text":"Produces the value of an atom."}],"type":"topic","kind":"symbol","title":"AtomProducer","navigatorTitle":[{"kind":"identifier","text":"AtomProducer"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomProducer","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/StateAtom":{"title":"StateAtom","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/stateatom","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StateAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomContext":{"type":"topic","abstract":[{"type":"text","text":"A context structure to read, write, and otherwise interact with atoms."}],"url":"\/documentation\/atoms\/atomcontext","kind":"symbol","role":"symbol","title":"AtomContext","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AtomContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","navigatorTitle":[{"kind":"identifier","text":"AtomContext"}]},"doc://Atoms/documentation/Atoms/Snapshot":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Snapshot","kind":"identifier"}],"type":"topic","abstract":[{"text":"A snapshot structure that captures specific set of values of atoms and their dependency graph.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","url":"\/documentation\/atoms\/snapshot","title":"Snapshot","navigatorTitle":[{"kind":"identifier","text":"Snapshot"}],"kind":"symbol","role":"symbol"},"doc://Atoms/documentation/Atoms/WatchState":{"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"text":"to ","type":"text"},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WatchState"}],"role":"symbol","url":"\/documentation\/atoms\/watchstate","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","type":"topic","navigatorTitle":[{"text":"WatchState","kind":"identifier"}],"title":"WatchState"},"doc://Atoms/documentation/Atoms/AsyncAtomModifier":{"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtomModifier","kind":"symbol","url":"\/documentation\/atoms\/asyncatommodifier","title":"AsyncAtomModifier","navigatorTitle":[{"text":"AsyncAtomModifier","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncAtomModifier"}],"abstract":[{"type":"text","text":"A modifier that you apply to an atom, producing a new refreshable value modified from the original value."}]},"doc://Atoms/documentation/Atoms/ReleaseEffect":{"navigatorTitle":[{"text":"ReleaseEffect","kind":"identifier"}],"title":"ReleaseEffect","type":"topic","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ReleaseEffect","abstract":[{"type":"text","text":"An atom effect that performs an arbitrary action when the atom is no longer watched and released."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReleaseEffect"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atoms\/releaseeffect"},"doc://Atoms/documentation/Atoms/AtomRoot":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomRoot"}],"navigatorTitle":[{"kind":"identifier","text":"AtomRoot"}],"abstract":[{"type":"text","text":"A view that stores the state of atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","kind":"symbol","title":"AtomRoot","url":"\/documentation\/atoms\/atomroot"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"navigatorTitle":[{"text":"AsyncAtom","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","type":"topic","kind":"symbol","title":"AsyncAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncAtom"}],"url":"\/documentation\/atoms\/asyncatom","abstract":[{"text":"Declares that a type can produce a refreshable value that can be accessed from everywhere.","type":"text"}]},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom/phase":{"url":"\/documentation\/atoms\/throwingtaskatom\/phase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom\/phase","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"phase","kind":"identifier"},{"kind":"text","text":": "},{"text":"ModifiedAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"TaskPhaseModifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms16ThrowingTaskAtomP7SuccessQa"},{"text":", any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"role":"symbol","abstract":[{"text":"Converts the ","type":"text"},{"type":"codeVoice","code":"Task"},{"type":"text","text":" that the original atom provides into "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" that"},{"text":" ","type":"text"},{"text":"changes overtime.","type":"text"}],"title":"phase","kind":"symbol"},"doc://Atoms/documentation/Atoms/TaskAtom/phase":{"title":"phase","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"phase","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ModifiedAtom","preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"TaskPhaseModifier","preciseIdentifier":"s:5Atoms17TaskPhaseModifierV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Atoms8TaskAtomP7SuccessQa","text":"Success"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO","text":"Never"},{"text":">>","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom\/phase","url":"\/documentation\/atoms\/taskatom\/phase","abstract":[{"text":"Converts the ","type":"text"},{"code":"Task","type":"codeVoice"},{"type":"text","text":" that the original atom provides into "},{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","type":"reference","isActive":true},{"type":"text","text":" that"},{"text":" ","type":"text"},{"text":"changes overtime.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomScope":{"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomScope","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomScope"}],"abstract":[{"type":"text","text":"A view to override or monitor atoms in scope."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomScope","kind":"symbol","title":"AtomScope","url":"\/documentation\/atoms\/atomscope"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"title":"WatchStateObject","type":"topic","kind":"symbol","url":"\/documentation\/atoms\/watchstateobject","navigatorTitle":[{"text":"WatchStateObject","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","role":"symbol"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"title":"ThrowingTaskAtom","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ThrowingTaskAtom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskAtom"}],"url":"\/documentation\/atoms\/throwingtaskatom","type":"topic","abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"text":" from the given asynchronous, throwing function.","type":"text"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom"},"doc://Atoms/documentation/Atoms/KeepAlive":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","type":"topic","url":"\/documentation\/atoms\/keepalive","title":"KeepAlive","kind":"symbol","navigatorTitle":[{"text":"KeepAlive","kind":"identifier"}],"role":"symbol","abstract":[{"text":"An attribute protocol to allow the value of an atom to continue being retained","type":"text"},{"text":" ","type":"text"},{"text":"even after they are no longer watched.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeepAlive"}]},"doc://Atoms/documentation/Atoms/Atom/animation(_:)":{"url":"\/documentation\/atoms\/atom\/animation(_:)","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/animation(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"animation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"text":"?) -> ","kind":"text"},{"text":"ModifiedAtom","kind":"typeIdentifier","preciseIdentifier":"s:5Atoms12ModifiedAtomV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5Atoms17AnimationModifierV","text":"AnimationModifier","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Produced","preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","kind":"typeIdentifier"},{"kind":"text","text":">>"}],"role":"symbol","abstract":[{"type":"text","text":"Animates the view watching the atom when the value updates."}],"title":"animation(_:)","kind":"symbol"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"url":"\/documentation\/atoms\/observableobjectatom","kind":"symbol","title":"ObservableObjectAtom","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ObservableObjectAtom","kind":"identifier"}],"type":"topic"},"doc://Atoms/documentation/Atoms/Atom":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Atom","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom","title":"Atom","role":"symbol","type":"topic"},"doc://Atoms/documentation/Atoms/AtomCurrentContext":{"title":"AtomCurrentContext","type":"topic","navigatorTitle":[{"text":"AtomCurrentContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomCurrentContext","url":"\/documentation\/atoms\/atomcurrentcontext","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomCurrentContext"}],"role":"symbol","abstract":[{"text":"A context structure to read, set, and otherwise interact with atoms.","type":"text"}]},"doc://Atoms/documentation/Atoms/Refreshable":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Refreshable"}],"abstract":[{"text":"An attribute protocol that allows an atom to have a custom refresh behavior.","type":"text"}],"url":"\/documentation\/atoms\/refreshable","type":"topic","title":"Refreshable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Refreshable","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable"},"doc://Atoms/documentation/Atoms/Atom/changes":{"role":"symbol","abstract":[{"type":"text","text":"Prevents the atom from updating its downstream when its new value is equivalent to old value."}],"type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Produced"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"changes","url":"\/documentation\/atoms\/atom\/changes","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/changes","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"changes"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Atoms12ModifiedAtomV","kind":"typeIdentifier","text":"ModifiedAtom"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChangesModifier","preciseIdentifier":"s:5Atoms15ChangesModifierV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Atoms4AtomP8ProducedQa","text":"Produced","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"kind":"symbol"},"doc://Atoms/documentation/Atoms/Watch":{"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"role":"symbol","url":"\/documentation\/atoms\/watch","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","type":"topic","navigatorTitle":[{"text":"Watch","kind":"identifier"}],"title":"Watch"},"doc://Atoms/documentation/Atoms/MergedEffect":{"navigatorTitle":[{"text":"MergedEffect","kind":"identifier"}],"title":"MergedEffect","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergedEffect"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/MergedEffect","type":"topic","abstract":[{"type":"text","text":"An atom effect that merges multiple atom effects into one."}],"kind":"symbol","url":"\/documentation\/atoms\/mergedeffect"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"abstract":[{"text":"A value that represents a success, a failure, or a state in which the result of","type":"text"},{"type":"text","text":" "},{"text":"asynchronous process has not yet been determined.","type":"text"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncPhase","kind":"identifier"}],"kind":"symbol","title":"AsyncPhase","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","navigatorTitle":[{"text":"AsyncPhase","kind":"identifier"}],"url":"\/documentation\/atoms\/asyncphase","role":"symbol"},"doc://Atoms/documentation/Atoms/ViewContext":{"type":"topic","url":"\/documentation\/atoms\/viewcontext","abstract":[{"text":"A property wrapper type that provides a context structure to read, watch, and otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interact with atoms from views."}],"kind":"symbol","role":"symbol","title":"ViewContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ViewContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","navigatorTitle":[{"kind":"identifier","text":"ViewContext"}]},"doc://Atoms/documentation/Atoms/AnimationModifier":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AnimationModifier","url":"\/documentation\/atoms\/animationmodifier","role":"symbol","abstract":[{"type":"text","text":"A modifier that animates the view watching the atom when the value updates."}],"type":"topic","kind":"symbol","title":"AnimationModifier","navigatorTitle":[{"text":"AnimationModifier","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnimationModifier","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/AtomTransactionContext":{"role":"symbol","url":"\/documentation\/atoms\/atomtransactioncontext","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTransactionContext","kind":"symbol","type":"topic","title":"AtomTransactionContext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomTransactionContext","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomTransactionContext"}]},"doc://Atoms/documentation/Atoms/PublisherAtom":{"navigatorTitle":[{"text":"PublisherAtom","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","type":"topic","kind":"symbol","title":"PublisherAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PublisherAtom","kind":"identifier"}],"url":"\/documentation\/atoms\/publisheratom","abstract":[{"text":"An atom type that provides a sequence of values of the given ","type":"text"},{"code":"Publisher","type":"codeVoice"},{"text":" as an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}]},"doc://Atoms/documentation/Atoms/UpdateEffect":{"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/UpdateEffect","navigatorTitle":[{"kind":"identifier","text":"UpdateEffect"}],"url":"\/documentation\/atoms\/updateeffect","kind":"symbol","title":"UpdateEffect","abstract":[{"text":"An atom effect that performs an arbitrary action when the atom is updated.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UpdateEffect","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"type":"topic","url":"\/documentation\/atoms\/atomtestcontext","abstract":[{"type":"text","text":"A context structure to read, watch, and otherwise interact with atoms in testing."}],"kind":"symbol","role":"symbol","title":"AtomTestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AtomTestContext","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","navigatorTitle":[{"text":"AtomTestContext","kind":"identifier"}]},"doc://Atoms/documentation/Atoms/TaskAtom":{"navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"role":"symbol","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","type":"topic","kind":"symbol","title":"TaskAtom","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskAtom"}],"url":"\/documentation\/atoms\/taskatom","abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"code":"Task","type":"codeVoice"},{"text":" from the given asynchronous function.","type":"text"}]},"doc://Atoms/documentation/Atoms/AtomRefreshProducer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomRefreshProducer"}],"abstract":[{"text":"Produces the refreshed value of an atom.","type":"text"}],"navigatorTitle":[{"text":"AtomRefreshProducer","kind":"identifier"}],"url":"\/documentation\/atoms\/atomrefreshproducer","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshProducer","type":"topic","role":"symbol","title":"AtomRefreshProducer","kind":"symbol"},"doc://Atoms/documentation/Atoms/EmptyEffect":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"EmptyEffect","kind":"identifier"}],"abstract":[{"text":"An effect that doesn’t produce any effects.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"EmptyEffect"}],"url":"\/documentation\/atoms\/emptyeffect","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/EmptyEffect","type":"topic","role":"symbol","title":"EmptyEffect","kind":"symbol"},"doc://Atoms/documentation/Atoms/Scoped":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Scoped","kind":"identifier"}],"abstract":[{"type":"text","text":"An attribute protocol to preserve the atom state in the scope nearest to the ancestor"},{"text":" ","type":"text"},{"text":"of where it is used and prevents it from being shared out of scope.","type":"text"}],"url":"\/documentation\/atoms\/scoped","type":"topic","title":"Scoped","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Scoped","kind":"identifier"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Scoped"},"https://github.com/ra1028/swiftui-atom-properties":{"url":"https:\/\/github.com\/ra1028\/swiftui-atom-properties","titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"title":"GitHub Repo","type":"link","identifier":"https:\/\/github.com\/ra1028\/swiftui-atom-properties"}}}