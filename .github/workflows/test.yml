# https://github.com/actions/virtual-environments

name: test

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEVELOPER_DIR: /Applications/Xcode_14.2.app

jobs:
  test-product:
    name: Test
    runs-on: macos-12
    strategy:
      matrix:
        test_platform:
          - "iOS Simulator,name=iPhone 13 Pro"
          - "macOS"
          - "tvOS Simulator,name=Apple TV 4K (at 1080p) (2nd generation)"
          - "watchOS Simulator,name=Apple Watch Series 7 (45mm)"
    steps:
      - uses: actions/checkout@v2
      - name: Test
        run: xcodebuild test -scheme swiftui-atom-properties -destination platform="${{ matrix.test_platform }}"

  test-example-ios:
    name: Test
    runs-on: macos-12
    strategy:
      matrix:
        test_platform:
          - "iOS Simulator,name=iPhone 13 Pro"
    steps:
      - uses: actions/checkout@v2
      - name: Test
        run: |
          cd Examples/Packages/iOS
          xcodebuild test -scheme iOSExamples -destination platform="${{ matrix.test_platform }}"

  test-example-cross-platform:
    name: Test
    runs-on: macos-12
    strategy:
      matrix:
        test_platform:
          - "iOS Simulator,name=iPhone 13 Pro"
          - "macOS"
          - "tvOS Simulator,name=Apple TV 4K (at 1080p) (2nd generation)"
    steps:
      - uses: actions/checkout@v2
      - name: Test
        run: |
          cd Examples/Packages/CrossPlatform
          xcodebuild test -scheme CrossPlatformExamples -destination platform="${{ matrix.test_platform }}"

  validation:
    name: Validation
    runs-on: macos-12
    env:
      DEVELOPER_DIR: /Applications/Xcode_14.2.app
    steps:
      - uses: actions/checkout@v2
      - name: Show environments
        run: |
          swift --version
          xcodebuild -version
      - uses: actions/cache@v3
        with:
          path: bin
          key: spm-${{ runner.os }}-${{env.DEVELOPER_DIR}}-${{ hashFiles('Package.swift') }}-${{ github.job }}
      - name: Validate lint
        run: make lint
      - name: Validate format
        run: |
          make format
          if [ -n "$(git status --porcelain)" ]; then echo "Make sure that the code is formated by 'make format'."; exit 1; fi
      - name: Validate example project
        run: |
          make proj
          if [ -n "$(git status --porcelain)" ]; then echo "Make sure that 'Examples/App.xcodeproj' is formated by 'make proj'."; exit 1; fi
