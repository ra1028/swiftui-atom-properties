{"includedArchiveIdentifiers":["Atoms"],"interfaceLanguages":{"swift":[{"children":[{"title":"Atoms","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atoms\/valueatom\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/valueatom\/value(context:)","title":"func value(context: Self.Context) -> Self.Value","type":"method"}],"path":"\/documentation\/atoms\/valueatom","title":"ValueAtom","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atoms\/stateatom\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/stateatom\/defaultvalue(context:)","title":"func defaultValue(context: Self.Context) -> Self.Value","type":"method"}],"path":"\/documentation\/atoms\/stateatom","title":"StateAtom","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atoms\/taskatom\/success","title":"Success","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/taskatom\/value(context:)","title":"func value(context: Self.Context) async -> Self.Success","type":"method"}],"path":"\/documentation\/atoms\/taskatom","title":"TaskAtom","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atoms\/throwingtaskatom\/success","title":"Success","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/throwingtaskatom\/value(context:)","title":"func value(context: Self.Context) async throws -> Self.Success","type":"method"}],"path":"\/documentation\/atoms\/throwingtaskatom","title":"ThrowingTaskAtom","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atoms\/asyncphaseatom\/failure","title":"Failure","type":"associatedtype"},{"path":"\/documentation\/atoms\/asyncphaseatom\/success","title":"Success","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/asyncphaseatom\/value(context:)","title":"func value(context: Self.Context) async throws(Self.Failure) -> Self.Success","type":"method"}],"path":"\/documentation\/atoms\/asyncphaseatom","title":"AsyncPhaseAtom","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atoms\/asyncsequenceatom\/sequence","title":"Sequence","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/asyncsequenceatom\/sequence(context:)","title":"func sequence(context: Self.Context) -> Self.Sequence","type":"method"}],"path":"\/documentation\/atoms\/asyncsequenceatom","title":"AsyncSequenceAtom","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atoms\/publisheratom\/publisher","title":"Publisher","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/publisheratom\/publisher(context:)","title":"func publisher(context: Self.Context) -> Self.Publisher","type":"method"}],"path":"\/documentation\/atoms\/publisheratom","title":"PublisherAtom","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atoms\/observableobjectatom\/objecttype","title":"ObjectType","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/observableobjectatom\/object(context:)","title":"func object(context: Self.Context) -> Self.ObjectType","type":"method"}],"path":"\/documentation\/atoms\/observableobjectatom","title":"ObservableObjectAtom","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/atoms\/modifiedatom\/key-swift.struct","title":"ModifiedAtom.Key","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/modifiedatom\/key-swift.property","title":"var key: ModifiedAtom<Node, Modifier>.Key","type":"property"},{"path":"\/documentation\/atoms\/modifiedatom\/producer","title":"var producer: AtomProducer<ModifiedAtom<Node, Modifier>.Produced>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atoms\/modifiedatom\/produced","title":"ModifiedAtom.Produced","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/modifiedatom\/refreshproducer","title":"var refreshProducer: AtomRefreshProducer<ModifiedAtom<Node, Modifier>.Produced>","type":"property"}],"path":"\/documentation\/atoms\/modifiedatom\/asyncatom-implementations","title":"AsyncAtom Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/modifiedatom\/scopeid","title":"var scopeID: Node.ScopeID","type":"property"}],"path":"\/documentation\/atoms\/modifiedatom\/scoped-implementations","title":"Scoped Implementations","type":"symbol"}],"path":"\/documentation\/atoms\/modifiedatom","title":"ModifiedAtom","type":"struct"},{"title":"Modifiers","type":"groupMarker"},{"path":"\/documentation\/atoms\/atom\/changes","title":"var changes: ModifiedAtom<Self, ChangesModifier<Self.Produced>>","type":"property"},{"path":"\/documentation\/atoms\/atom\/changes(of:)","title":"func changes<T>(of: any KeyPath<Self.Produced, T> & Sendable) -> ModifiedAtom<Self, ChangesOfModifier<Self.Produced, T>>","type":"method"},{"path":"\/documentation\/atoms\/atom\/animation(_:)","title":"func animation(Animation?) -> ModifiedAtom<Self, AnimationModifier<Self.Produced>>","type":"method"},{"path":"\/documentation\/atoms\/taskatom\/phase","title":"var phase: ModifiedAtom<Self, TaskPhaseModifier<Self.Success, Never>>","type":"property"},{"path":"\/documentation\/atoms\/throwingtaskatom\/phase","title":"var phase: ModifiedAtom<Self, TaskPhaseModifier<Self.Success, any Error>>","type":"property"},{"title":"Effects","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atoms\/atomeffect\/initialized(context:)-62u3","title":"func initialized(context: Self.Context)","type":"method"}],"title":"AtomEffect Implementations","type":"groupMarker"}],"path":"\/documentation\/atoms\/atomeffect\/initialized(context:)-6mkmp","title":"func initialized(context: Self.Context)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/atoms\/atomeffect\/released(context:)-5nhpo","title":"func released(context: Self.Context)","type":"method"}],"title":"AtomEffect Implementations","type":"groupMarker"}],"path":"\/documentation\/atoms\/atomeffect\/released(context:)-8z1m7","title":"func released(context: Self.Context)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/atoms\/atomeffect\/updated(context:)-45cu1","title":"func updated(context: Self.Context)","type":"method"}],"title":"AtomEffect Implementations","type":"groupMarker"}],"path":"\/documentation\/atoms\/atomeffect\/updated(context:)-4zvlt","title":"func updated(context: Self.Context)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomeffect\/context","title":"AtomEffect.Context","type":"typealias"}],"path":"\/documentation\/atoms\/atomeffect","title":"AtomEffect","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/initializeeffect\/init(perform:)","title":"init(perform: () -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/initializeeffect\/initialized(context:)","title":"func initialized(context: InitializeEffect.Context)","type":"method"}],"path":"\/documentation\/atoms\/initializeeffect","title":"InitializeEffect","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/updateeffect\/init(perform:)","title":"init(perform: () -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/updateeffect\/updated(context:)","title":"func updated(context: UpdateEffect.Context)","type":"method"}],"path":"\/documentation\/atoms\/updateeffect","title":"UpdateEffect","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/releaseeffect\/init(perform:)","title":"init(perform: () -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/releaseeffect\/released(context:)","title":"func released(context: ReleaseEffect.Context)","type":"method"}],"path":"\/documentation\/atoms\/releaseeffect","title":"ReleaseEffect","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/mergedeffect\/init(_:)","title":"init<each Effect>(repeat each Effect)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/mergedeffect\/initialized(context:)","title":"func initialized(context: MergedEffect.Context)","type":"method"},{"path":"\/documentation\/atoms\/mergedeffect\/released(context:)","title":"func released(context: MergedEffect.Context)","type":"method"},{"path":"\/documentation\/atoms\/mergedeffect\/updated(context:)","title":"func updated(context: MergedEffect.Context)","type":"method"}],"path":"\/documentation\/atoms\/mergedeffect","title":"MergedEffect","type":"struct"},{"title":"Attributes","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atoms\/scoped\/scopeid-swift.associatedtype","title":"ScopeID","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atoms\/scoped\/scopeid-4np5n","title":"var scopeID: DefaultScopeID","type":"property"}],"title":"Scoped Implementations","type":"groupMarker"}],"path":"\/documentation\/atoms\/scoped\/scopeid-2kb9d","title":"var scopeID: Self.ScopeID","type":"property"}],"path":"\/documentation\/atoms\/scoped","title":"Scoped","type":"protocol"},{"path":"\/documentation\/atoms\/keepalive","title":"KeepAlive","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/refreshable\/refresh(context:)","title":"func refresh(context: Self.CurrentContext) async -> Self.Produced","type":"method"}],"path":"\/documentation\/atoms\/refreshable","title":"Refreshable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/resettable\/reset(context:)","title":"func reset(context: Self.CurrentContext)","type":"method"}],"path":"\/documentation\/atoms\/resettable","title":"Resettable","type":"protocol"},{"title":"Property Wrappers","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/watch\/init(_:fileid:line:)","title":"init(Node, fileID: String, line: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/watch\/wrappedvalue","title":"var wrappedValue: Node.Produced","type":"property"}],"path":"\/documentation\/atoms\/watch","title":"Watch","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/watchstate\/init(_:fileid:line:)","title":"init(Node, fileID: String, line: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/watchstate\/projectedvalue","title":"var projectedValue: Binding<Node.Produced>","type":"property"},{"path":"\/documentation\/atoms\/watchstate\/wrappedvalue","title":"var wrappedValue: Node.Produced","type":"property"}],"path":"\/documentation\/atoms\/watchstate","title":"WatchState","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/atoms\/watchstateobject\/wrapper\/subscript(dynamicmember:)","title":"subscript<T>(dynamicMember _: ReferenceWritableKeyPath<Node.Produced, T>) -> Binding<T>","type":"subscript"}],"path":"\/documentation\/atoms\/watchstateobject\/wrapper","title":"WatchStateObject.Wrapper","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/watchstateobject\/init(_:fileid:line:)","title":"init(Node, fileID: String, line: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/watchstateobject\/projectedvalue","title":"var projectedValue: WatchStateObject<Node>.Wrapper","type":"property"},{"path":"\/documentation\/atoms\/watchstateobject\/wrappedvalue","title":"var wrappedValue: Node.ObjectType","type":"property"}],"path":"\/documentation\/atoms\/watchstateobject","title":"WatchStateObject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/viewcontext\/init(file:fileid:line:)","title":"init(file: StaticString, fileID: String, line: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/viewcontext\/wrappedvalue","title":"var wrappedValue: AtomViewContext","type":"property"}],"path":"\/documentation\/atoms\/viewcontext","title":"ViewContext","type":"struct"},{"title":"Views","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomroot\/init(content:)","title":"init(content: () -> Content)","type":"init"},{"path":"\/documentation\/atoms\/atomroot\/init(storesin:content:)","title":"init(storesIn: AtomStore, content: () -> Content)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomroot\/body","title":"var body: some View","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomroot\/observe(_:)","title":"func observe((Snapshot) -> Void) -> AtomRoot<Content>","type":"method"},{"path":"\/documentation\/atoms\/atomroot\/override(_:with:)-26lib","title":"func override<Node>(Node.Type, with: (Node) -> Node.Produced) -> AtomRoot<Content>","type":"method"},{"path":"\/documentation\/atoms\/atomroot\/override(_:with:)-4ys6l","title":"func override<Node>(Node, with: (Node) -> Node.Produced) -> AtomRoot<Content>","type":"method"}],"path":"\/documentation\/atoms\/atomroot","title":"AtomRoot","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomscope\/init(id:content:)","title":"init<ID>(id: ID, content: () -> Content)","type":"init"},{"path":"\/documentation\/atoms\/atomscope\/init(inheriting:content:)","title":"init(inheriting: AtomViewContext, content: () -> Content)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomscope\/body","title":"var body: some View","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomscope\/scopedobserve(_:)","title":"func scopedObserve((Snapshot) -> Void) -> AtomScope<Content>","type":"method"},{"path":"\/documentation\/atoms\/atomscope\/scopedoverride(_:with:)-4tkz3","title":"func scopedOverride<Node>(Node.Type, with: (Node) -> Node.Produced) -> AtomScope<Content>","type":"method"},{"path":"\/documentation\/atoms\/atomscope\/scopedoverride(_:with:)-5jen3","title":"func scopedOverride<Node>(Node, with: (Node) -> Node.Produced) -> AtomScope<Content>","type":"method"}],"path":"\/documentation\/atoms\/atomscope","title":"AtomScope","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/suspense\/init(_:content:)","title":"init(Task<Value, Failure>, content: (Value) -> Content)","type":"init"},{"path":"\/documentation\/atoms\/suspense\/init(_:content:catch:)","title":"init(Task<Value, Failure>, content: (Value) -> Content, catch: (Failure) -> FailureContent)","type":"init"},{"path":"\/documentation\/atoms\/suspense\/init(_:content:suspending:)","title":"init(Task<Value, Failure>, content: (Value) -> Content, suspending: () -> Suspending)","type":"init"},{"path":"\/documentation\/atoms\/suspense\/init(_:content:suspending:catch:)","title":"init(Task<Value, Failure>, content: (Value) -> Content, suspending: () -> Suspending, catch: (Failure) -> FailureContent)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/suspense\/body","title":"var body: some View","type":"property"}],"path":"\/documentation\/atoms\/suspense","title":"Suspense","type":"struct"},{"title":"Values","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atoms\/asyncphase\/failure(_:)","title":"case failure(Failure)","type":"case"},{"path":"\/documentation\/atoms\/asyncphase\/success(_:)","title":"case success(Success)","type":"case"},{"path":"\/documentation\/atoms\/asyncphase\/suspending","title":"case suspending","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/asyncphase\/init(_:)","title":"init(Result<Success, Failure>)","type":"init"},{"path":"\/documentation\/atoms\/asyncphase\/init(catching:)","title":"init(catching: () async throws(Failure) -> Success) async","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/asyncphase\/error","title":"var error: Failure?","type":"property"},{"path":"\/documentation\/atoms\/asyncphase\/isfailure","title":"var isFailure: Bool","type":"property"},{"path":"\/documentation\/atoms\/asyncphase\/issuccess","title":"var isSuccess: Bool","type":"property"},{"path":"\/documentation\/atoms\/asyncphase\/issuspending","title":"var isSuspending: Bool","type":"property"},{"path":"\/documentation\/atoms\/asyncphase\/value","title":"var value: Success?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/asyncphase\/flatmap(_:)","title":"func flatMap<NewSuccess>((Success) -> AsyncPhase<NewSuccess, Failure>) -> AsyncPhase<NewSuccess, Failure>","type":"method"},{"path":"\/documentation\/atoms\/asyncphase\/flatmaperror(_:)","title":"func flatMapError<NewFailure>((Failure) -> AsyncPhase<Success, NewFailure>) -> AsyncPhase<Success, NewFailure>","type":"method"},{"path":"\/documentation\/atoms\/asyncphase\/map(_:)","title":"func map<NewSuccess>((Success) -> NewSuccess) -> AsyncPhase<NewSuccess, Failure>","type":"method"},{"path":"\/documentation\/atoms\/asyncphase\/maperror(_:)","title":"func mapError<NewFailure>((Failure) -> NewFailure) -> AsyncPhase<Success, NewFailure>","type":"method"}],"path":"\/documentation\/atoms\/asyncphase","title":"AsyncPhase","type":"enum"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/snapshot\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/snapshot\/graphdescription()","title":"func graphDescription() -> String","type":"method"},{"path":"\/documentation\/atoms\/snapshot\/lookup(_:)","title":"func lookup<Node>(Node) -> Node.Produced?","type":"method"}],"path":"\/documentation\/atoms\/snapshot","title":"Snapshot","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/defaultscopeid\/init()","title":"init()","type":"init"}],"path":"\/documentation\/atoms\/defaultscopeid","title":"DefaultScopeID","type":"struct"},{"title":"Contexts","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomcontext\/modify(_:body:)","title":"func modify<Node>(Node, body: (inout Node.Produced) -> Void)","type":"method"},{"path":"\/documentation\/atoms\/atomcontext\/read(_:)","title":"func read<Node>(Node) -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomcontext\/refresh(_:)-7xzm9","title":"func refresh<Node>(Node) async -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomcontext\/refresh(_:)-9fist","title":"func refresh<Node>(Node) async -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomcontext\/reset(_:)-6hktm","title":"func reset<Node>(Node)","type":"method"},{"path":"\/documentation\/atoms\/atomcontext\/reset(_:)-8u78a","title":"func reset<Node>(Node)","type":"method"},{"path":"\/documentation\/atoms\/atomcontext\/set(_:for:)","title":"func set<Node>(Node.Produced, for: Node)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomcontext\/subscript(_:)","title":"subscript<Node>(Node) -> Node.Produced","type":"subscript"}],"path":"\/documentation\/atoms\/atomcontext","title":"AtomContext","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomwatchablecontext\/watch(_:)","title":"func watch<Node>(Node) -> Node.Produced","type":"method"}],"path":"\/documentation\/atoms\/atomwatchablecontext","title":"AtomWatchableContext","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomtransactioncontext\/modify(_:body:)","title":"func modify<Node>(Node, body: (inout Node.Produced) -> Void)","type":"method"},{"path":"\/documentation\/atoms\/atomtransactioncontext\/read(_:)","title":"func read<Node>(Node) -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomtransactioncontext\/refresh(_:)-8qx3a","title":"func refresh<Node>(Node) async -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomtransactioncontext\/refresh(_:)-9lj4w","title":"func refresh<Node>(Node) async -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomtransactioncontext\/reset(_:)-4h3nk","title":"func reset<Node>(Node)","type":"method"},{"path":"\/documentation\/atoms\/atomtransactioncontext\/reset(_:)-4lri9","title":"func reset<Node>(Node)","type":"method"},{"path":"\/documentation\/atoms\/atomtransactioncontext\/set(_:for:)","title":"func set<Node>(Node.Produced, for: Node)","type":"method"},{"path":"\/documentation\/atoms\/atomtransactioncontext\/watch(_:)","title":"func watch<Node>(Node) -> Node.Produced","type":"method"}],"path":"\/documentation\/atoms\/atomtransactioncontext","title":"AtomTransactionContext","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomviewcontext\/binding(_:)","title":"func binding<Node>(Node) -> Binding<Node.Produced>","type":"method"},{"path":"\/documentation\/atoms\/atomviewcontext\/modify(_:body:)","title":"func modify<Node>(Node, body: (inout Node.Produced) -> Void)","type":"method"},{"path":"\/documentation\/atoms\/atomviewcontext\/read(_:)","title":"func read<Node>(Node) -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomviewcontext\/refresh(_:)-3pa54","title":"func refresh<Node>(Node) async -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomviewcontext\/refresh(_:)-5kruz","title":"func refresh<Node>(Node) async -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomviewcontext\/reset(_:)-6hdr5","title":"func reset<Node>(Node)","type":"method"},{"path":"\/documentation\/atoms\/atomviewcontext\/reset(_:)-7be28","title":"func reset<Node>(Node)","type":"method"},{"path":"\/documentation\/atoms\/atomviewcontext\/restore(_:)","title":"func restore(Snapshot)","type":"method"},{"path":"\/documentation\/atoms\/atomviewcontext\/set(_:for:)","title":"func set<Node>(Node.Produced, for: Node)","type":"method"},{"path":"\/documentation\/atoms\/atomviewcontext\/snapshot()","title":"func snapshot() -> Snapshot","type":"method"},{"path":"\/documentation\/atoms\/atomviewcontext\/watch(_:)","title":"func watch<Node>(Node) -> Node.Produced","type":"method"}],"path":"\/documentation\/atoms\/atomviewcontext","title":"AtomViewContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomtestcontext\/init(fileid:line:)","title":"init(fileID: String, line: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomtestcontext\/onupdate","title":"var onUpdate: (() -> Void)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomtestcontext\/lookup(_:)","title":"func lookup<Node>(Node) -> Node.Produced?","type":"method"},{"path":"\/documentation\/atoms\/atomtestcontext\/modify(_:body:)","title":"func modify<Node>(Node, body: (inout Node.Produced) -> Void)","type":"method"},{"path":"\/documentation\/atoms\/atomtestcontext\/override(_:with:)-82t4q","title":"func override<Node>(Node, with: (Node) -> Node.Produced)","type":"method"},{"path":"\/documentation\/atoms\/atomtestcontext\/override(_:with:)-8vfve","title":"func override<Node>(Node.Type, with: (Node) -> Node.Produced)","type":"method"},{"path":"\/documentation\/atoms\/atomtestcontext\/read(_:)","title":"func read<Node>(Node) -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomtestcontext\/refresh(_:)-1gi2e","title":"func refresh<Node>(Node) async -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomtestcontext\/refresh(_:)-2ana6","title":"func refresh<Node>(Node) async -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomtestcontext\/reset(_:)-2hphl","title":"func reset<Node>(Node)","type":"method"},{"path":"\/documentation\/atoms\/atomtestcontext\/reset(_:)-4qvoc","title":"func reset<Node>(Node)","type":"method"},{"path":"\/documentation\/atoms\/atomtestcontext\/set(_:for:)","title":"func set<Node>(Node.Produced, for: Node)","type":"method"},{"path":"\/documentation\/atoms\/atomtestcontext\/unwatch(_:)","title":"func unwatch(some Atom)","type":"method"},{"path":"\/documentation\/atoms\/atomtestcontext\/wait(for:timeout:until:)","title":"func wait<Node>(for: Node, timeout: Double?, until: (Node.Produced) -> Bool) async -> Bool","type":"method"},{"path":"\/documentation\/atoms\/atomtestcontext\/waitforupdate(timeout:)","title":"func waitForUpdate(timeout: Double?) async -> Bool","type":"method"},{"path":"\/documentation\/atoms\/atomtestcontext\/watch(_:)","title":"func watch<Node>(Node) -> Node.Produced","type":"method"}],"path":"\/documentation\/atoms\/atomtestcontext","title":"AtomTestContext","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomcurrentcontext\/modify(_:body:)","title":"func modify<Node>(Node, body: (inout Node.Produced) -> Void)","type":"method"},{"path":"\/documentation\/atoms\/atomcurrentcontext\/read(_:)","title":"func read<Node>(Node) -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomcurrentcontext\/refresh(_:)-181nv","title":"func refresh<Node>(Node) async -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomcurrentcontext\/refresh(_:)-2fx13","title":"func refresh<Node>(Node) async -> Node.Produced","type":"method"},{"path":"\/documentation\/atoms\/atomcurrentcontext\/reset(_:)-4z8bk","title":"func reset<Node>(Node)","type":"method"},{"path":"\/documentation\/atoms\/atomcurrentcontext\/reset(_:)-6hoza","title":"func reset<Node>(Node)","type":"method"},{"path":"\/documentation\/atoms\/atomcurrentcontext\/set(_:for:)","title":"func set<Node>(Node.Produced, for: Node)","type":"method"}],"path":"\/documentation\/atoms\/atomcurrentcontext","title":"AtomCurrentContext","type":"struct"},{"title":"Misc","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atoms\/atom\/effect","title":"Effect","type":"associatedtype"},{"path":"\/documentation\/atoms\/atom\/key-swift.associatedtype","title":"Key","type":"associatedtype"},{"path":"\/documentation\/atoms\/atom\/produced","title":"Produced","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atoms\/atom\/key-6ow0d","title":"var key: Self","type":"property"}],"title":"Atom Implementations","type":"groupMarker"}],"path":"\/documentation\/atoms\/atom\/key-8ipu8","title":"var key: Self.Key","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atoms\/atom\/producer-75jb6","title":"var producer: AtomProducer<AsyncPhase<Self.Sequence.Element, any Error>>","type":"property"},{"path":"\/documentation\/atoms\/atom\/producer-8kycq","title":"var producer: AtomProducer<Self.Value>","type":"property"},{"path":"\/documentation\/atoms\/atom\/producer-24ng","title":"var producer: AtomProducer<Task<Self.Success, Never>>","type":"property"},{"path":"\/documentation\/atoms\/atom\/producer-36dtw","title":"var producer: AtomProducer<Self.ObjectType>","type":"property"},{"path":"\/documentation\/atoms\/atom\/producer-5ewrd","title":"var producer: AtomProducer<Task<Self.Success, any Error>>","type":"property"},{"path":"\/documentation\/atoms\/atom\/producer-6fi3p","title":"var producer: AtomProducer<AsyncPhase<Self.Publisher.Output, Self.Publisher.Failure>>","type":"property"},{"path":"\/documentation\/atoms\/atom\/producer-1j132","title":"var producer: AtomProducer<Self.Value>","type":"property"},{"path":"\/documentation\/atoms\/atom\/producer-71x51","title":"var producer: AtomProducer<AsyncPhase<Self.Success, Self.Failure>>","type":"property"}],"title":"Atom Implementations","type":"groupMarker"}],"path":"\/documentation\/atoms\/atom\/producer-qr7z","title":"var producer: AtomProducer<Self.Produced>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atoms\/atom\/effect(context:)-36ga4","title":"func effect(context: Self.CurrentContext) -> Self.Effect","type":"method"}],"title":"Atom Implementations","type":"groupMarker"}],"path":"\/documentation\/atoms\/atom\/effect(context:)-4wm5m","title":"func effect(context: Self.CurrentContext) -> Self.Effect","type":"method"},{"path":"\/documentation\/atoms\/atom\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedAtom<Self, T>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atoms\/atom\/context","title":"Atom.Context","type":"typealias"},{"path":"\/documentation\/atoms\/atom\/currentcontext","title":"Atom.CurrentContext","type":"typealias"}],"path":"\/documentation\/atoms\/atom","title":"Atom","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atoms\/asyncatom\/refreshproducer-3dp3r","title":"var refreshProducer: AtomRefreshProducer<Task<Self.Success, Never>>","type":"property"},{"path":"\/documentation\/atoms\/asyncatom\/refreshproducer-13kuh","title":"var refreshProducer: AtomRefreshProducer<Task<Self.Success, any Error>>","type":"property"},{"path":"\/documentation\/atoms\/asyncatom\/refreshproducer-37fh","title":"var refreshProducer: AtomRefreshProducer<AsyncPhase<Self.Sequence.Element, any Error>>","type":"property"},{"path":"\/documentation\/atoms\/asyncatom\/refreshproducer-848hh","title":"var refreshProducer: AtomRefreshProducer<AsyncPhase<Self.Success, Self.Failure>>","type":"property"},{"path":"\/documentation\/atoms\/asyncatom\/refreshproducer-93q4j","title":"var refreshProducer: AtomRefreshProducer<AsyncPhase<Self.Publisher.Output, Self.Publisher.Failure>>","type":"property"}],"title":"AsyncAtom Implementations","type":"groupMarker"}],"path":"\/documentation\/atoms\/asyncatom\/refreshproducer-695m2","title":"var refreshProducer: AtomRefreshProducer<Self.Produced>","type":"property"}],"path":"\/documentation\/atoms\/asyncatom","title":"AsyncAtom","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/atomstore\/init()","title":"init()","type":"init"}],"path":"\/documentation\/atoms\/atomstore","title":"AtomStore","type":"class"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atoms\/atommodifier\/base","title":"Base","type":"associatedtype"},{"path":"\/documentation\/atoms\/atommodifier\/key-swift.associatedtype","title":"Key","type":"associatedtype"},{"path":"\/documentation\/atoms\/atommodifier\/produced","title":"Produced","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/atommodifier\/key-swift.property","title":"var key: Self.Key","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/atommodifier\/producer(atom:)","title":"func producer(atom: some Atom<Self.Base>) -> AtomProducer<Self.Produced>","type":"method"}],"path":"\/documentation\/atoms\/atommodifier","title":"AtomModifier","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/asyncatommodifier\/refreshproducer(atom:)","title":"func refreshProducer(atom: some AsyncAtom<Self.Base>) -> AtomRefreshProducer<Self.Produced>","type":"method"}],"path":"\/documentation\/atoms\/asyncatommodifier","title":"AsyncAtomModifier","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/atoms\/changesmodifier\/key-swift.struct","title":"ChangesModifier.Key","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/changesmodifier\/key-swift.property","title":"var key: ChangesModifier<Produced>.Key","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/changesmodifier\/producer(atom:)","title":"func producer(atom: some Atom<Produced>) -> AtomProducer<Produced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atoms\/changesmodifier\/base","title":"ChangesModifier.Base","type":"typealias"},{"path":"\/documentation\/atoms\/changesmodifier\/produced","title":"ChangesModifier.Produced","type":"typealias"}],"path":"\/documentation\/atoms\/changesmodifier","title":"ChangesModifier","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/atoms\/changesofmodifier\/key-swift.struct","title":"ChangesOfModifier.Key","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/changesofmodifier\/key-swift.property","title":"var key: ChangesOfModifier<Base, Produced>.Key","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/changesofmodifier\/producer(atom:)","title":"func producer(atom: some Atom<Base>) -> AtomProducer<Produced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atoms\/changesofmodifier\/base","title":"ChangesOfModifier.Base","type":"typealias"},{"path":"\/documentation\/atoms\/changesofmodifier\/produced","title":"ChangesOfModifier.Produced","type":"typealias"}],"path":"\/documentation\/atoms\/changesofmodifier","title":"ChangesOfModifier","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/atoms\/taskphasemodifier\/key-swift.struct","title":"TaskPhaseModifier.Key","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/taskphasemodifier\/key-swift.property","title":"var key: TaskPhaseModifier<Success, Failure>.Key","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/taskphasemodifier\/producer(atom:)","title":"func producer(atom: some Atom<Task<Success, Failure>>) -> AtomProducer<TaskPhaseModifier<Success, Failure>.Produced>","type":"method"},{"path":"\/documentation\/atoms\/taskphasemodifier\/refreshproducer(atom:)","title":"func refreshProducer(atom: some AsyncAtom<Task<Success, Failure>>) -> AtomRefreshProducer<TaskPhaseModifier<Success, Failure>.Produced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atoms\/taskphasemodifier\/base","title":"TaskPhaseModifier.Base","type":"typealias"},{"path":"\/documentation\/atoms\/taskphasemodifier\/produced","title":"TaskPhaseModifier.Produced","type":"typealias"}],"path":"\/documentation\/atoms\/taskphasemodifier","title":"TaskPhaseModifier","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/atoms\/animationmodifier\/key-swift.struct","title":"AnimationModifier.Key","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atoms\/animationmodifier\/key-swift.property","title":"var key: AnimationModifier<Produced>.Key","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atoms\/animationmodifier\/producer(atom:)","title":"func producer(atom: some Atom<Produced>) -> AtomProducer<Produced>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atoms\/animationmodifier\/base","title":"AnimationModifier.Base","type":"typealias"},{"path":"\/documentation\/atoms\/animationmodifier\/produced","title":"AnimationModifier.Produced","type":"typealias"}],"path":"\/documentation\/atoms\/animationmodifier","title":"AnimationModifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atoms\/emptyeffect\/init()","title":"init()","type":"init"}],"path":"\/documentation\/atoms\/emptyeffect","title":"EmptyEffect","type":"struct"},{"path":"\/documentation\/atoms\/atomproducer","title":"AtomProducer","type":"struct"},{"path":"\/documentation\/atoms\/atomrefreshproducer","title":"AtomRefreshProducer","type":"struct"}],"path":"\/documentation\/atoms","title":"Atoms","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}